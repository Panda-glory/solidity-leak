{
	"id": "8557fc450cfff25af59bd53d1baa75c9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"shoot/1/可预测的随机数/1.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.6.12;\r\n// 猜猜随机数\r\ncontract vulquery{\r\n    uint public score;\r\n    bool[] public gate;\r\n    uint public i=0;\r\n\r\n    function culcu(uint _answer) internal view returns (bool){\r\n        uint MOD_NUM=60;\r\n        uint256 seed = uint256(keccak256(abi.encodePacked(block.number)))+uint256(keccak256(abi.encodePacked(block.timestamp)));\r\n        uint256 seed_hash = uint256(keccak256(abi.encodePacked(seed)));\r\n        uint256 shark = seed_hash % MOD_NUM;\r\n        uint256 lucky_hash = uint256(keccak256(abi.encodePacked(msg.sender)));\r\n        uint256 lucky = lucky_hash % shark;\r\n\r\n        return lucky==_answer;\r\n    }\r\n    function collision(uint answer) public {\r\n        gate.push(culcu(answer));\r\n        if(gate[i]==true){\r\n            i++;\r\n            if(gate.length>10){\r\n                revert(\"To much\");\r\n            }\r\n        }else{\r\n            uint length=gate.length;\r\n            for(uint q=0;q<length;q++){\r\n                gate.pop();\r\n                }\r\n                i=0;\r\n        }\r\n    }\r\n    function isComplete()public returns(uint){\r\n        score=0;\r\n        if (gate.length<=8&&gate.length>0){score=30;}\r\n        else{\r\n            for(uint q=0;q<gate.length;q++){\r\n                if(gate[q]==true){\r\n                    score+=10;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"shoot/1/可预测的随机数/1.sol": {
				"vulquery": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "answer",
									"type": "uint256"
								}
							],
							"name": "collision",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "gate",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "i",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isComplete",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "score",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"shoot/1/可预测的随机数/1.sol\":78:1373  contract vulquery{\r... */\n  mstore(0x40, 0x80)\n    /* \"shoot/1/可预测的随机数/1.sol\":165:166  0 */\n  0x00\n    /* \"shoot/1/可预测的随机数/1.sol\":151:166  uint public i=0 */\n  0x02\n  sstore\n    /* \"shoot/1/可预测的随机数/1.sol\":78:1373  contract vulquery{\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"shoot/1/可预测的随机数/1.sol\":78:1373  contract vulquery{\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x26cbeb7a\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x87a99866\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xb2fa1c9e\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xe5aa3d58\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xefedc669\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"shoot/1/可预测的随机数/1.sol\":680:1068  function collision(uint answer) public {\r... */\n    tag_3:\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_9:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_10\n      jump\t// in\n    tag_8:\n      stop\n        /* \"shoot/1/可预测的随机数/1.sol\":126:144  bool[] public gate */\n    tag_4:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_13\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"shoot/1/可预测的随机数/1.sol\":1074:1370  function isComplete()public returns(uint){\r... */\n    tag_5:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"shoot/1/可预测的随机数/1.sol\":151:166  uint public i=0 */\n    tag_6:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"shoot/1/可预测的随机数/1.sol\":102:119  uint public score */\n    tag_7:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"shoot/1/可预测的随机数/1.sol\":680:1068  function collision(uint answer) public {\r... */\n    tag_10:\n        /* \"shoot/1/可预测的随机数/1.sol\":730:734  gate */\n      0x01\n        /* \"shoot/1/可预测的随机数/1.sol\":740:753  culcu(answer) */\n      tag_21\n        /* \"shoot/1/可预测的随机数/1.sol\":746:752  answer */\n      dup3\n        /* \"shoot/1/可预测的随机数/1.sol\":740:745  culcu */\n      tag_22\n        /* \"shoot/1/可预测的随机数/1.sol\":740:753  culcu(answer) */\n      jump\t// in\n    tag_21:\n        /* \"shoot/1/可预测的随机数/1.sol\":730:754  gate.push(culcu(answer)) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x20\n      swap2\n      dup3\n      dup3\n      div\n      add\n      swap2\n      swap1\n      mod\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"shoot/1/可预测的随机数/1.sol\":777:781  true */\n      0x01\n        /* \"shoot/1/可预测的随机数/1.sol\":768:781  gate[i]==true */\n      iszero\n      iszero\n        /* \"shoot/1/可预测的随机数/1.sol\":768:772  gate */\n      0x01\n        /* \"shoot/1/可预测的随机数/1.sol\":773:774  i */\n      sload(0x02)\n        /* \"shoot/1/可预测的随机数/1.sol\":768:775  gate[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_24\n      jumpi\n      invalid\n    tag_24:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x20\n      swap2\n      dup3\n      dup3\n      div\n      add\n      swap2\n      swap1\n      mod\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"shoot/1/可预测的随机数/1.sol\":768:781  gate[i]==true */\n      iszero\n      iszero\n      eq\n        /* \"shoot/1/可预测的随机数/1.sol\":765:1061  if(gate[i]==true){\r... */\n      iszero\n      tag_26\n      jumpi\n        /* \"shoot/1/可预测的随机数/1.sol\":797:798  i */\n      0x02\n      0x00\n        /* \"shoot/1/可预测的随机数/1.sol\":797:800  i++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"shoot/1/可预测的随机数/1.sol\":830:832  10 */\n      0x0a\n        /* \"shoot/1/可预测的随机数/1.sol\":818:822  gate */\n      0x01\n        /* \"shoot/1/可预测的随机数/1.sol\":818:829  gate.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"shoot/1/可预测的随机数/1.sol\":818:832  gate.length>10 */\n      gt\n        /* \"shoot/1/可预测的随机数/1.sol\":815:885  if(gate.length>10){\r... */\n      iszero\n      tag_27\n      jumpi\n        /* \"shoot/1/可预测的随机数/1.sol\":852:869  revert(\"To much\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x07\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x546f206d75636800000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"shoot/1/可预测的随机数/1.sol\":815:885  if(gate.length>10){\r... */\n    tag_27:\n        /* \"shoot/1/可预测的随机数/1.sol\":765:1061  if(gate[i]==true){\r... */\n      jump(tag_28)\n    tag_26:\n        /* \"shoot/1/可预测的随机数/1.sol\":915:926  uint length */\n      0x00\n        /* \"shoot/1/可预测的随机数/1.sol\":927:931  gate */\n      0x01\n        /* \"shoot/1/可预测的随机数/1.sol\":927:938  gate.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"shoot/1/可预测的随机数/1.sol\":915:938  uint length=gate.length */\n      swap1\n      pop\n        /* \"shoot/1/可预测的随机数/1.sol\":957:963  uint q */\n      0x00\n        /* \"shoot/1/可预测的随机数/1.sol\":953:1028  for(uint q=0;q<length;q++){\r... */\n    tag_29:\n        /* \"shoot/1/可预测的随机数/1.sol\":968:974  length */\n      dup2\n        /* \"shoot/1/可预测的随机数/1.sol\":966:967  q */\n      dup2\n        /* \"shoot/1/可预测的随机数/1.sol\":966:974  q<length */\n      lt\n        /* \"shoot/1/可预测的随机数/1.sol\":953:1028  for(uint q=0;q<length;q++){\r... */\n      iszero\n      tag_30\n      jumpi\n        /* \"shoot/1/可预测的随机数/1.sol\":998:1002  gate */\n      0x01\n        /* \"shoot/1/可预测的随机数/1.sol\":998:1008  gate.pop() */\n      dup1\n      sload\n      dup1\n      tag_32\n      jumpi\n      invalid\n    tag_32:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x20\n      swap2\n      dup3\n      dup3\n      div\n      add\n      swap2\n      swap1\n      mod\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xff\n      mul\n      not\n      and\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"shoot/1/可预测的随机数/1.sol\":975:978  q++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"shoot/1/可预测的随机数/1.sol\":953:1028  for(uint q=0;q<length;q++){\r... */\n      jump(tag_29)\n    tag_30:\n      pop\n        /* \"shoot/1/可预测的随机数/1.sol\":1048:1049  0 */\n      0x00\n        /* \"shoot/1/可预测的随机数/1.sol\":1046:1047  i */\n      0x02\n        /* \"shoot/1/可预测的随机数/1.sol\":1046:1049  i=0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"shoot/1/可预测的随机数/1.sol\":765:1061  if(gate[i]==true){\r... */\n      pop\n    tag_28:\n        /* \"shoot/1/可预测的随机数/1.sol\":680:1068  function collision(uint answer) public {\r... */\n      pop\n      jump\t// out\n        /* \"shoot/1/可预测的随机数/1.sol\":126:144  bool[] public gate */\n    tag_13:\n      0x01\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_34\n      jumpi\n      invalid\n    tag_34:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x20\n      swap2\n      dup3\n      dup3\n      div\n      add\n      swap2\n      swap1\n      mod\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"shoot/1/可预测的随机数/1.sol\":1074:1370  function isComplete()public returns(uint){\r... */\n    tag_15:\n        /* \"shoot/1/可预测的随机数/1.sol\":1110:1114  uint */\n      0x00\n        /* \"shoot/1/可预测的随机数/1.sol\":1132:1133  0 */\n      dup1\n        /* \"shoot/1/可预测的随机数/1.sol\":1126:1131  score */\n      0x00\n        /* \"shoot/1/可预测的随机数/1.sol\":1126:1133  score=0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"shoot/1/可预测的随机数/1.sol\":1161:1162  8 */\n      0x08\n        /* \"shoot/1/可预测的随机数/1.sol\":1148:1152  gate */\n      0x01\n        /* \"shoot/1/可预测的随机数/1.sol\":1148:1159  gate.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"shoot/1/可预测的随机数/1.sol\":1148:1162  gate.length<=8 */\n      gt\n      iszero\n        /* \"shoot/1/可预测的随机数/1.sol\":1148:1177  gate.length<=8&&gate.length>0 */\n      dup1\n      iszero\n      tag_37\n      jumpi\n      pop\n        /* \"shoot/1/可预测的随机数/1.sol\":1176:1177  0 */\n      0x00\n        /* \"shoot/1/可预测的随机数/1.sol\":1164:1168  gate */\n      0x01\n        /* \"shoot/1/可预测的随机数/1.sol\":1164:1175  gate.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"shoot/1/可预测的随机数/1.sol\":1164:1177  gate.length>0 */\n      gt\n        /* \"shoot/1/可预测的随机数/1.sol\":1148:1177  gate.length<=8&&gate.length>0 */\n    tag_37:\n        /* \"shoot/1/可预测的随机数/1.sol\":1144:1363  if (gate.length<=8&&gate.length>0){score=30;}\r... */\n      iszero\n      tag_38\n      jumpi\n        /* \"shoot/1/可预测的随机数/1.sol\":1185:1187  30 */\n      0x1e\n        /* \"shoot/1/可预测的随机数/1.sol\":1179:1184  score */\n      0x00\n        /* \"shoot/1/可预测的随机数/1.sol\":1179:1187  score=30 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"shoot/1/可预测的随机数/1.sol\":1144:1363  if (gate.length<=8&&gate.length>0){score=30;}\r... */\n      jump(tag_39)\n    tag_38:\n        /* \"shoot/1/可预测的随机数/1.sol\":1222:1228  uint q */\n      0x00\n        /* \"shoot/1/可预测的随机数/1.sol\":1218:1352  for(uint q=0;q<gate.length;q++){\r... */\n    tag_40:\n        /* \"shoot/1/可预测的随机数/1.sol\":1233:1237  gate */\n      0x01\n        /* \"shoot/1/可预测的随机数/1.sol\":1233:1244  gate.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"shoot/1/可预测的随机数/1.sol\":1231:1232  q */\n      dup2\n        /* \"shoot/1/可预测的随机数/1.sol\":1231:1244  q<gate.length */\n      lt\n        /* \"shoot/1/可预测的随机数/1.sol\":1218:1352  for(uint q=0;q<gate.length;q++){\r... */\n      iszero\n      tag_41\n      jumpi\n        /* \"shoot/1/可预测的随机数/1.sol\":1280:1284  true */\n      0x01\n        /* \"shoot/1/可预测的随机数/1.sol\":1271:1284  gate[q]==true */\n      iszero\n      iszero\n        /* \"shoot/1/可预测的随机数/1.sol\":1271:1275  gate */\n      0x01\n        /* \"shoot/1/可预测的随机数/1.sol\":1276:1277  q */\n      dup3\n        /* \"shoot/1/可预测的随机数/1.sol\":1271:1278  gate[q] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_43\n      jumpi\n      invalid\n    tag_43:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x20\n      swap2\n      dup3\n      dup3\n      div\n      add\n      swap2\n      swap1\n      mod\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"shoot/1/可预测的随机数/1.sol\":1271:1284  gate[q]==true */\n      iszero\n      iszero\n      eq\n        /* \"shoot/1/可预测的随机数/1.sol\":1268:1337  if(gate[q]==true){\r... */\n      iszero\n      tag_45\n      jumpi\n        /* \"shoot/1/可预测的随机数/1.sol\":1315:1317  10 */\n      0x0a\n        /* \"shoot/1/可预测的随机数/1.sol\":1308:1313  score */\n      0x00\n      dup1\n        /* \"shoot/1/可预测的随机数/1.sol\":1308:1317  score+=10 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"shoot/1/可预测的随机数/1.sol\":1268:1337  if(gate[q]==true){\r... */\n    tag_45:\n        /* \"shoot/1/可预测的随机数/1.sol\":1245:1248  q++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"shoot/1/可预测的随机数/1.sol\":1218:1352  for(uint q=0;q<gate.length;q++){\r... */\n      jump(tag_40)\n    tag_41:\n      pop\n        /* \"shoot/1/可预测的随机数/1.sol\":1144:1363  if (gate.length<=8&&gate.length>0){score=30;}\r... */\n    tag_39:\n        /* \"shoot/1/可预测的随机数/1.sol\":1074:1370  function isComplete()public returns(uint){\r... */\n      swap1\n      jump\t// out\n        /* \"shoot/1/可预测的随机数/1.sol\":151:166  uint public i=0 */\n    tag_17:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"shoot/1/可预测的随机数/1.sol\":102:119  uint public score */\n    tag_19:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"shoot/1/可预测的随机数/1.sol\":175:674  function culcu(uint _answer) internal view returns (bool){\r... */\n    tag_22:\n        /* \"shoot/1/可预测的随机数/1.sol\":227:231  bool */\n      0x00\n        /* \"shoot/1/可预测的随机数/1.sol\":243:255  uint MOD_NUM */\n      dup1\n        /* \"shoot/1/可预测的随机数/1.sol\":256:258  60 */\n      0x3c\n        /* \"shoot/1/可预测的随机数/1.sol\":243:258  uint MOD_NUM=60 */\n      swap1\n      pop\n        /* \"shoot/1/可预测的随机数/1.sol\":269:281  uint256 seed */\n      0x00\n        /* \"shoot/1/可预测的随机数/1.sol\":370:385  block.timestamp */\n      timestamp\n        /* \"shoot/1/可预测的随机数/1.sol\":353:386  abi.encodePacked(block.timestamp) */\n      add(0x20, mload(0x40))\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"shoot/1/可预测的随机数/1.sol\":343:387  keccak256(abi.encodePacked(block.timestamp)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"shoot/1/可预测的随机数/1.sol\":335:388  uint256(keccak256(abi.encodePacked(block.timestamp))) */\n      0x00\n      shr\n        /* \"shoot/1/可预测的随机数/1.sol\":319:331  block.number */\n      number\n        /* \"shoot/1/可预测的随机数/1.sol\":302:332  abi.encodePacked(block.number) */\n      add(0x20, mload(0x40))\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"shoot/1/可预测的随机数/1.sol\":292:333  keccak256(abi.encodePacked(block.number)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"shoot/1/可预测的随机数/1.sol\":284:334  uint256(keccak256(abi.encodePacked(block.number))) */\n      0x00\n      shr\n        /* \"shoot/1/可预测的随机数/1.sol\":284:388  uint256(keccak256(abi.encodePacked(block.number)))+uint256(keccak256(abi.encodePacked(block.timestamp))) */\n      add\n        /* \"shoot/1/可预测的随机数/1.sol\":269:388  uint256 seed = uint256(keccak256(abi.encodePacked(block.number)))+uint256(keccak256(abi.encodePacked(block.timestamp))) */\n      swap1\n      pop\n        /* \"shoot/1/可预测的随机数/1.sol\":399:416  uint256 seed_hash */\n      0x00\n        /* \"shoot/1/可预测的随机数/1.sol\":454:458  seed */\n      dup2\n        /* \"shoot/1/可预测的随机数/1.sol\":437:459  abi.encodePacked(seed) */\n      add(0x20, mload(0x40))\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"shoot/1/可预测的随机数/1.sol\":427:460  keccak256(abi.encodePacked(seed)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"shoot/1/可预测的随机数/1.sol\":419:461  uint256(keccak256(abi.encodePacked(seed))) */\n      0x00\n      shr\n        /* \"shoot/1/可预测的随机数/1.sol\":399:461  uint256 seed_hash = uint256(keccak256(abi.encodePacked(seed))) */\n      swap1\n      pop\n        /* \"shoot/1/可预测的随机数/1.sol\":472:485  uint256 shark */\n      0x00\n        /* \"shoot/1/可预测的随机数/1.sol\":500:507  MOD_NUM */\n      dup4\n        /* \"shoot/1/可预测的随机数/1.sol\":488:497  seed_hash */\n      dup3\n        /* \"shoot/1/可预测的随机数/1.sol\":488:507  seed_hash % MOD_NUM */\n      dup2\n      tag_47\n      jumpi\n      invalid\n    tag_47:\n      mod\n        /* \"shoot/1/可预测的随机数/1.sol\":472:507  uint256 shark = seed_hash % MOD_NUM */\n      swap1\n      pop\n        /* \"shoot/1/可预测的随机数/1.sol\":518:536  uint256 lucky_hash */\n      0x00\n        /* \"shoot/1/可预测的随机数/1.sol\":574:584  msg.sender */\n      caller\n        /* \"shoot/1/可预测的随机数/1.sol\":557:585  abi.encodePacked(msg.sender) */\n      add(0x20, mload(0x40))\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x60\n      shl\n      dup2\n      mstore\n      0x14\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"shoot/1/可预测的随机数/1.sol\":547:586  keccak256(abi.encodePacked(msg.sender)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"shoot/1/可预测的随机数/1.sol\":539:587  uint256(keccak256(abi.encodePacked(msg.sender))) */\n      0x00\n      shr\n        /* \"shoot/1/可预测的随机数/1.sol\":518:587  uint256 lucky_hash = uint256(keccak256(abi.encodePacked(msg.sender))) */\n      swap1\n      pop\n        /* \"shoot/1/可预测的随机数/1.sol\":598:611  uint256 lucky */\n      0x00\n        /* \"shoot/1/可预测的随机数/1.sol\":627:632  shark */\n      dup3\n        /* \"shoot/1/可预测的随机数/1.sol\":614:624  lucky_hash */\n      dup3\n        /* \"shoot/1/可预测的随机数/1.sol\":614:632  lucky_hash % shark */\n      dup2\n      tag_48\n      jumpi\n      invalid\n    tag_48:\n      mod\n        /* \"shoot/1/可预测的随机数/1.sol\":598:632  uint256 lucky = lucky_hash % shark */\n      swap1\n      pop\n        /* \"shoot/1/可预测的随机数/1.sol\":659:666  _answer */\n      dup8\n        /* \"shoot/1/可预测的随机数/1.sol\":652:657  lucky */\n      dup2\n        /* \"shoot/1/可预测的随机数/1.sol\":652:666  lucky==_answer */\n      eq\n        /* \"shoot/1/可预测的随机数/1.sol\":645:666  return lucky==_answer */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"shoot/1/可预测的随机数/1.sol\":175:674  function culcu(uint _answer) internal view returns (bool){\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205b60acd14c7a536d42c8b297d0774ef8b07612992510454cab0cdef37afb92f264736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052600060025534801561001557600080fd5b506104bd806100256000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806326cbeb7a1461005c57806387a998661461008a578063b2fa1c9e146100ce578063e5aa3d58146100ec578063efedc6691461010a575b600080fd5b6100886004803603602081101561007257600080fd5b8101908080359060200190929190505050610128565b005b6100b6600480360360208110156100a057600080fd5b81019080803590602001909291905050506102a7565b60405180821515815260200191505060405180910390f35b6100d66102d8565b6040518082815260200191505060405180910390f35b6100f461037a565b6040518082815260200191505060405180910390f35b610112610380565b6040518082815260200191505060405180910390f35b600161013382610386565b90806001815401808255809150506001900390600052602060002090602091828204019190069091909190916101000a81548160ff0219169083151502179055506001151560016002548154811061018757fe5b90600052602060002090602091828204019190069054906101000a900460ff161515141561024257600260008154809291906001019190505550600a600180549050111561023d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260078152602001807f546f206d7563680000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b6102a4565b6000600180549050905060005b8181101561029957600180548061026257fe5b60019003818190600052602060002090602091828204019190066101000a81549060ff02191690559055808060010191505061024f565b506000600281905550505b50565b600181815481106102b457fe5b9060005260206000209060209182820401919006915054906101000a900460ff1681565b6000806000819055506008600180549050111580156102fc57506000600180549050115b1561030e57601e600081905550610377565b60005b60018054905081101561037557600115156001828154811061032f57fe5b90600052602060002090602091828204019190069054906101000a900460ff161515141561036857600a60008082825401925050819055505b8080600101915050610311565b505b90565b60025481565b60005481565b600080603c9050600042604051602001808281526020019150506040516020818303038152906040528051906020012060001c43604051602001808281526020019150506040516020818303038152906040528051906020012060001c019050600081604051602001808281526020019150506040516020818303038152906040528051906020012060001c9050600083828161041f57fe5b069050600033604051602001808273ffffffffffffffffffffffffffffffffffffffff1660601b81526014019150506040516020818303038152906040528051906020012060001c9050600082828161047457fe5b069050878114965050505050505091905056fea26469706673582212205b60acd14c7a536d42c8b297d0774ef8b07612992510454cab0cdef37afb92f264736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4BD DUP1 PUSH2 0x25 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x26CBEB7A EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x87A99866 EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0xB2FA1C9E EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0xE5AA3D58 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0xEFEDC669 EQ PUSH2 0x10A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x128 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD6 PUSH2 0x2D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF4 PUSH2 0x37A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x112 PUSH2 0x380 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH2 0x133 DUP3 PUSH2 0x386 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x20 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 ISZERO ISZERO PUSH1 0x1 PUSH1 0x2 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x187 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x20 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0x242 JUMPI PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP PUSH1 0xA PUSH1 0x1 DUP1 SLOAD SWAP1 POP GT ISZERO PUSH2 0x23D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x546F206D75636800000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2A4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x299 JUMPI PUSH1 0x1 DUP1 SLOAD DUP1 PUSH2 0x262 JUMPI INVALID JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x20 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE SWAP1 SSTORE DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x24F JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2B4 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x20 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x8 PUSH1 0x1 DUP1 SLOAD SWAP1 POP GT ISZERO DUP1 ISZERO PUSH2 0x2FC JUMPI POP PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD SWAP1 POP GT JUMPDEST ISZERO PUSH2 0x30E JUMPI PUSH1 0x1E PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH2 0x377 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x375 JUMPI PUSH1 0x1 ISZERO ISZERO PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x32F JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x20 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0x368 JUMPI PUSH1 0xA PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x311 JUMP JUMPDEST POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3C SWAP1 POP PUSH1 0x0 TIMESTAMP PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR NUMBER PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP PUSH1 0x0 DUP4 DUP3 DUP2 PUSH2 0x41F JUMPI INVALID JUMPDEST MOD SWAP1 POP PUSH1 0x0 CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE PUSH1 0x14 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP PUSH1 0x0 DUP3 DUP3 DUP2 PUSH2 0x474 JUMPI INVALID JUMPDEST MOD SWAP1 POP DUP8 DUP2 EQ SWAP7 POP POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPDEST PUSH1 0xAC 0xD1 0x4C PUSH27 0x536D42C8B297D0774EF8B07612992510454CAB0CDEF37AFB92F264 PUSH20 0x6F6C634300060C00330000000000000000000000 ",
							"sourceMap": "78:1295:0:-:0;;;165:1;151:15;;78:1295;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100575760003560e01c806326cbeb7a1461005c57806387a998661461008a578063b2fa1c9e146100ce578063e5aa3d58146100ec578063efedc6691461010a575b600080fd5b6100886004803603602081101561007257600080fd5b8101908080359060200190929190505050610128565b005b6100b6600480360360208110156100a057600080fd5b81019080803590602001909291905050506102a7565b60405180821515815260200191505060405180910390f35b6100d66102d8565b6040518082815260200191505060405180910390f35b6100f461037a565b6040518082815260200191505060405180910390f35b610112610380565b6040518082815260200191505060405180910390f35b600161013382610386565b90806001815401808255809150506001900390600052602060002090602091828204019190069091909190916101000a81548160ff0219169083151502179055506001151560016002548154811061018757fe5b90600052602060002090602091828204019190069054906101000a900460ff161515141561024257600260008154809291906001019190505550600a600180549050111561023d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260078152602001807f546f206d7563680000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b6102a4565b6000600180549050905060005b8181101561029957600180548061026257fe5b60019003818190600052602060002090602091828204019190066101000a81549060ff02191690559055808060010191505061024f565b506000600281905550505b50565b600181815481106102b457fe5b9060005260206000209060209182820401919006915054906101000a900460ff1681565b6000806000819055506008600180549050111580156102fc57506000600180549050115b1561030e57601e600081905550610377565b60005b60018054905081101561037557600115156001828154811061032f57fe5b90600052602060002090602091828204019190069054906101000a900460ff161515141561036857600a60008082825401925050819055505b8080600101915050610311565b505b90565b60025481565b60005481565b600080603c9050600042604051602001808281526020019150506040516020818303038152906040528051906020012060001c43604051602001808281526020019150506040516020818303038152906040528051906020012060001c019050600081604051602001808281526020019150506040516020818303038152906040528051906020012060001c9050600083828161041f57fe5b069050600033604051602001808273ffffffffffffffffffffffffffffffffffffffff1660601b81526014019150506040516020818303038152906040528051906020012060001c9050600082828161047457fe5b069050878114965050505050505091905056fea26469706673582212205b60acd14c7a536d42c8b297d0774ef8b07612992510454cab0cdef37afb92f264736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x26CBEB7A EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x87A99866 EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0xB2FA1C9E EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0xE5AA3D58 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0xEFEDC669 EQ PUSH2 0x10A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x128 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD6 PUSH2 0x2D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF4 PUSH2 0x37A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x112 PUSH2 0x380 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH2 0x133 DUP3 PUSH2 0x386 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x20 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 ISZERO ISZERO PUSH1 0x1 PUSH1 0x2 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x187 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x20 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0x242 JUMPI PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP PUSH1 0xA PUSH1 0x1 DUP1 SLOAD SWAP1 POP GT ISZERO PUSH2 0x23D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x546F206D75636800000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2A4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x299 JUMPI PUSH1 0x1 DUP1 SLOAD DUP1 PUSH2 0x262 JUMPI INVALID JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x20 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE SWAP1 SSTORE DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x24F JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2B4 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x20 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x8 PUSH1 0x1 DUP1 SLOAD SWAP1 POP GT ISZERO DUP1 ISZERO PUSH2 0x2FC JUMPI POP PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD SWAP1 POP GT JUMPDEST ISZERO PUSH2 0x30E JUMPI PUSH1 0x1E PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH2 0x377 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x375 JUMPI PUSH1 0x1 ISZERO ISZERO PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x32F JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x20 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0x368 JUMPI PUSH1 0xA PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x311 JUMP JUMPDEST POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3C SWAP1 POP PUSH1 0x0 TIMESTAMP PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR NUMBER PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP PUSH1 0x0 DUP4 DUP3 DUP2 PUSH2 0x41F JUMPI INVALID JUMPDEST MOD SWAP1 POP PUSH1 0x0 CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE PUSH1 0x14 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP PUSH1 0x0 DUP3 DUP3 DUP2 PUSH2 0x474 JUMPI INVALID JUMPDEST MOD SWAP1 POP DUP8 DUP2 EQ SWAP7 POP POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPDEST PUSH1 0xAC 0xD1 0x4C PUSH27 0x536D42C8B297D0774EF8B07612992510454CAB0CDEF37AFB92F264 PUSH20 0x6F6C634300060C00330000000000000000000000 ",
							"sourceMap": "78:1295:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;680:388;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;126:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1074:296;;;:::i;:::-;;;;;;;;;;;;;;;;;;;151:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;102:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;680:388;730:4;740:13;746:6;740:5;:13::i;:::-;730:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;777:4;768:13;;:4;773:1;;768:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:13;;;765:296;;;797:1;;:3;;;;;;;;;;;;;830:2;818:4;:11;;;;:14;815:70;;;852:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;815:70;765:296;;;915:11;927:4;:11;;;;915:23;;957:6;953:75;968:6;966:1;:8;953:75;;;998:4;:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;975:3;;;;;;;953:75;;;;1048:1;1046;:3;;;;765:296;;680:388;:::o;126:18::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1074:296::-;1110:4;1132:1;1126:5;:7;;;;1161:1;1148:4;:11;;;;:14;;:29;;;;;1176:1;1164:4;:11;;;;:13;1148:29;1144:219;;;1185:2;1179:5;:8;;;;1144:219;;;1222:6;1218:134;1233:4;:11;;;;1231:1;:13;1218:134;;;1280:4;1271:13;;:4;1276:1;1271:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:13;;;1268:69;;;1315:2;1308:5;;:9;;;;;;;;;;;1268:69;1245:3;;;;;;;1218:134;;;;1144:219;1074:296;:::o;151:15::-;;;;:::o;102:17::-;;;;:::o;175:499::-;227:4;243:12;256:2;243:15;;269:12;370:15;353:33;;;;;;;;;;;;;;;;;;;;;;;;;343:44;;;;;;335:53;;319:12;302:30;;;;;;;;;;;;;;;;;;;;;;;;;292:41;;;;;;284:50;;:104;269:119;;399:17;454:4;437:22;;;;;;;;;;;;;;;;;;;;;;;;;427:33;;;;;;419:42;;399:62;;472:13;500:7;488:9;:19;;;;;;472:35;;518:18;574:10;557:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;547:39;;;;;;539:48;;518:69;;598:13;627:5;614:10;:18;;;;;;598:34;;659:7;652:5;:14;645:21;;;;;;;;175:499;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "242600",
								"executionCost": "5287",
								"totalCost": "247887"
							},
							"external": {
								"collision(uint256)": "infinite",
								"gate(uint256)": "3639",
								"i()": "1049",
								"isComplete()": "infinite",
								"score()": "1071"
							},
							"internal": {
								"culcu(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 78,
									"end": 1373,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 78,
									"end": 1373,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 78,
									"end": 1373,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 165,
									"end": 166,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 151,
									"end": 166,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 151,
									"end": 166,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 78,
									"end": 1373,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 78,
									"end": 1373,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 78,
									"end": 1373,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 78,
									"end": 1373,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 78,
									"end": 1373,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 78,
									"end": 1373,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 78,
									"end": 1373,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 78,
									"end": 1373,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 78,
									"end": 1373,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 78,
									"end": 1373,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 78,
									"end": 1373,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 78,
									"end": 1373,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 78,
									"end": 1373,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 78,
									"end": 1373,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 78,
									"end": 1373,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 78,
									"end": 1373,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 78,
									"end": 1373,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 78,
									"end": 1373,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205b60acd14c7a536d42c8b297d0774ef8b07612992510454cab0cdef37afb92f264736f6c634300060c0033",
									".code": [
										{
											"begin": 78,
											"end": 1373,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 78,
											"end": 1373,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78,
											"end": 1373,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 78,
											"end": 1373,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 78,
											"end": 1373,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 78,
											"end": 1373,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 78,
											"end": 1373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 78,
											"end": 1373,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 78,
											"end": 1373,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 78,
											"end": 1373,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 78,
											"end": 1373,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 78,
											"end": 1373,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 78,
											"end": 1373,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78,
											"end": 1373,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78,
											"end": 1373,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 78,
											"end": 1373,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 78,
											"end": 1373,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 78,
											"end": 1373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 78,
											"end": 1373,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 78,
											"end": 1373,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 78,
											"end": 1373,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 78,
											"end": 1373,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 78,
											"end": 1373,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 78,
											"end": 1373,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 78,
											"end": 1373,
											"name": "PUSH",
											"source": 0,
											"value": "26CBEB7A"
										},
										{
											"begin": 78,
											"end": 1373,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 78,
											"end": 1373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 78,
											"end": 1373,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 78,
											"end": 1373,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 78,
											"end": 1373,
											"name": "PUSH",
											"source": 0,
											"value": "87A99866"
										},
										{
											"begin": 78,
											"end": 1373,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 78,
											"end": 1373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 78,
											"end": 1373,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 78,
											"end": 1373,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 78,
											"end": 1373,
											"name": "PUSH",
											"source": 0,
											"value": "B2FA1C9E"
										},
										{
											"begin": 78,
											"end": 1373,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 78,
											"end": 1373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 78,
											"end": 1373,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 78,
											"end": 1373,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 78,
											"end": 1373,
											"name": "PUSH",
											"source": 0,
											"value": "E5AA3D58"
										},
										{
											"begin": 78,
											"end": 1373,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 78,
											"end": 1373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 78,
											"end": 1373,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 78,
											"end": 1373,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 78,
											"end": 1373,
											"name": "PUSH",
											"source": 0,
											"value": "EFEDC669"
										},
										{
											"begin": 78,
											"end": 1373,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 78,
											"end": 1373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 78,
											"end": 1373,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 78,
											"end": 1373,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 78,
											"end": 1373,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78,
											"end": 1373,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 78,
											"end": 1373,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 78,
											"end": 1373,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 680,
											"end": 1068,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 680,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 680,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 1068,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 680,
											"end": 1068,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 680,
											"end": 1068,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 680,
											"end": 1068,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 680,
											"end": 1068,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 1068,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 680,
											"end": 1068,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 680,
											"end": 1068,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 680,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 680,
											"end": 1068,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 680,
											"end": 1068,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 1068,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 680,
											"end": 1068,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 680,
											"end": 1068,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 680,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 680,
											"end": 1068,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 680,
											"end": 1068,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 680,
											"end": 1068,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 680,
											"end": 1068,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 680,
											"end": 1068,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 680,
											"end": 1068,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 680,
											"end": 1068,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 680,
											"end": 1068,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 1068,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 680,
											"end": 1068,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 680,
											"end": 1068,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 680,
											"end": 1068,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 680,
											"end": 1068,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 680,
											"end": 1068,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 680,
											"end": 1068,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 680,
											"end": 1068,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 680,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 680,
											"end": 1068,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 680,
											"end": 1068,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 680,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 680,
											"end": 1068,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 126,
											"end": 144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 126,
											"end": 144,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 126,
											"end": 144,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 126,
											"end": 144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 126,
											"end": 144,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 144,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 126,
											"end": 144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 126,
											"end": 144,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 126,
											"end": 144,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 126,
											"end": 144,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 126,
											"end": 144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 126,
											"end": 144,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 126,
											"end": 144,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 126,
											"end": 144,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1370,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1074,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1074,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1074,
											"end": 1370,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1074,
											"end": 1370,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1074,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1370,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1074,
											"end": 1370,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1370,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1370,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1370,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1370,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1370,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1074,
											"end": 1370,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1370,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1370,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1370,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1370,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1074,
											"end": 1370,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1370,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1370,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1370,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1370,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 151,
											"end": 166,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 151,
											"end": 166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 151,
											"end": 166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 151,
											"end": 166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 151,
											"end": 166,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 151,
											"end": 166,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 151,
											"end": 166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 151,
											"end": 166,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 151,
											"end": 166,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 151,
											"end": 166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 151,
											"end": 166,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 151,
											"end": 166,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 151,
											"end": 166,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 151,
											"end": 166,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 151,
											"end": 166,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 151,
											"end": 166,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 151,
											"end": 166,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 151,
											"end": 166,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 151,
											"end": 166,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 151,
											"end": 166,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 151,
											"end": 166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 151,
											"end": 166,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 151,
											"end": 166,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 151,
											"end": 166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 151,
											"end": 166,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 102,
											"end": 119,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 102,
											"end": 119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 102,
											"end": 119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 102,
											"end": 119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 102,
											"end": 119,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 102,
											"end": 119,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 102,
											"end": 119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 102,
											"end": 119,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 119,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 102,
											"end": 119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 102,
											"end": 119,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 102,
											"end": 119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 102,
											"end": 119,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 102,
											"end": 119,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 102,
											"end": 119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 102,
											"end": 119,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 102,
											"end": 119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 102,
											"end": 119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 102,
											"end": 119,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 119,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 102,
											"end": 119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 102,
											"end": 119,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 102,
											"end": 119,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 102,
											"end": 119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 102,
											"end": 119,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 680,
											"end": 1068,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 680,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 730,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 740,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 746,
											"end": 752,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 740,
											"end": 745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 740,
											"end": 753,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 740,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 740,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 730,
											"end": 754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 730,
											"end": 754,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 730,
											"end": 754,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 730,
											"end": 754,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 730,
											"end": 754,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 730,
											"end": 754,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 730,
											"end": 754,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 730,
											"end": 754,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 730,
											"end": 754,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 730,
											"end": 754,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 730,
											"end": 754,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 730,
											"end": 754,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 730,
											"end": 754,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 730,
											"end": 754,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 730,
											"end": 754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 730,
											"end": 754,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 730,
											"end": 754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 730,
											"end": 754,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 730,
											"end": 754,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 730,
											"end": 754,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 730,
											"end": 754,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 730,
											"end": 754,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 730,
											"end": 754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 730,
											"end": 754,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 730,
											"end": 754,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 730,
											"end": 754,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 730,
											"end": 754,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 730,
											"end": 754,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 730,
											"end": 754,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 730,
											"end": 754,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 730,
											"end": 754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 730,
											"end": 754,
											"name": "MOD",
											"source": 0
										},
										{
											"begin": 730,
											"end": 754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 730,
											"end": 754,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 730,
											"end": 754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 730,
											"end": 754,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 730,
											"end": 754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 730,
											"end": 754,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 730,
											"end": 754,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 730,
											"end": 754,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 730,
											"end": 754,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 730,
											"end": 754,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 730,
											"end": 754,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 730,
											"end": 754,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 730,
											"end": 754,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 730,
											"end": 754,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 730,
											"end": 754,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 730,
											"end": 754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 730,
											"end": 754,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 730,
											"end": 754,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 730,
											"end": 754,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 730,
											"end": 754,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 730,
											"end": 754,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 730,
											"end": 754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 730,
											"end": 754,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 730,
											"end": 754,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 777,
											"end": 781,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 768,
											"end": 781,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 768,
											"end": 781,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 768,
											"end": 772,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 773,
											"end": 774,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 773,
											"end": 774,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 768,
											"end": 775,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 768,
											"end": 775,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 768,
											"end": 775,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 768,
											"end": 775,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 768,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 768,
											"end": 775,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 768,
											"end": 775,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 768,
											"end": 775,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 768,
											"end": 775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 768,
											"end": 775,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 768,
											"end": 775,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 768,
											"end": 775,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 768,
											"end": 775,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 768,
											"end": 775,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 768,
											"end": 775,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 768,
											"end": 775,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 768,
											"end": 775,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 768,
											"end": 775,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 768,
											"end": 775,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 768,
											"end": 775,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 768,
											"end": 775,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 768,
											"end": 775,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 768,
											"end": 775,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 768,
											"end": 775,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 768,
											"end": 775,
											"name": "MOD",
											"source": 0
										},
										{
											"begin": 768,
											"end": 775,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 768,
											"end": 775,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 768,
											"end": 775,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 768,
											"end": 775,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 768,
											"end": 775,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 768,
											"end": 775,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 768,
											"end": 775,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 768,
											"end": 775,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 768,
											"end": 775,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 768,
											"end": 781,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 768,
											"end": 781,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 768,
											"end": 781,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 765,
											"end": 1061,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 765,
											"end": 1061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 765,
											"end": 1061,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 797,
											"end": 798,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 797,
											"end": 798,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 797,
											"end": 800,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 797,
											"end": 800,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 797,
											"end": 800,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 797,
											"end": 800,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 797,
											"end": 800,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 797,
											"end": 800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 797,
											"end": 800,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 797,
											"end": 800,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 797,
											"end": 800,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 797,
											"end": 800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 797,
											"end": 800,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 797,
											"end": 800,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 797,
											"end": 800,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 830,
											"end": 832,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 818,
											"end": 822,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 818,
											"end": 829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 818,
											"end": 829,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 818,
											"end": 829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 818,
											"end": 829,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 818,
											"end": 832,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 815,
											"end": 885,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 815,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 815,
											"end": 885,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 852,
											"end": 869,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 852,
											"end": 869,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 852,
											"end": 869,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 852,
											"end": 869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 852,
											"end": 869,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 852,
											"end": 869,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 852,
											"end": 869,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 852,
											"end": 869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 852,
											"end": 869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 852,
											"end": 869,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 852,
											"end": 869,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 852,
											"end": 869,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 852,
											"end": 869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 852,
											"end": 869,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 852,
											"end": 869,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 852,
											"end": 869,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 852,
											"end": 869,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 852,
											"end": 869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 852,
											"end": 869,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 852,
											"end": 869,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 852,
											"end": 869,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 852,
											"end": 869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 852,
											"end": 869,
											"name": "PUSH",
											"source": 0,
											"value": "546F206D75636800000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 852,
											"end": 869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 852,
											"end": 869,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 852,
											"end": 869,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 852,
											"end": 869,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 852,
											"end": 869,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 852,
											"end": 869,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 852,
											"end": 869,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 852,
											"end": 869,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 852,
											"end": 869,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 852,
											"end": 869,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 852,
											"end": 869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 852,
											"end": 869,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 852,
											"end": 869,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 852,
											"end": 869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 852,
											"end": 869,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 815,
											"end": 885,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 815,
											"end": 885,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 765,
											"end": 1061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 765,
											"end": 1061,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 765,
											"end": 1061,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 765,
											"end": 1061,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 915,
											"end": 926,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 927,
											"end": 931,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 927,
											"end": 938,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 927,
											"end": 938,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 927,
											"end": 938,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 927,
											"end": 938,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 915,
											"end": 938,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 915,
											"end": 938,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 957,
											"end": 963,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 953,
											"end": 1028,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 953,
											"end": 1028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 968,
											"end": 974,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 966,
											"end": 967,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 966,
											"end": 974,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 953,
											"end": 1028,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 953,
											"end": 1028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 953,
											"end": 1028,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1002,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 998,
											"end": 1008,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1008,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1008,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 998,
											"end": 1008,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1008,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1008,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 998,
											"end": 1008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1008,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 998,
											"end": 1008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1008,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1008,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1008,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1008,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 998,
											"end": 1008,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1008,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 998,
											"end": 1008,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 998,
											"end": 1008,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1008,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 998,
											"end": 1008,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1008,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1008,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1008,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1008,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1008,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1008,
											"name": "MOD",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1008,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 998,
											"end": 1008,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1008,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1008,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1008,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 998,
											"end": 1008,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1008,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1008,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1008,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1008,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 975,
											"end": 978,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 975,
											"end": 978,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 975,
											"end": 978,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 975,
											"end": 978,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 975,
											"end": 978,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 975,
											"end": 978,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 975,
											"end": 978,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 953,
											"end": 1028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 953,
											"end": 1028,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 953,
											"end": 1028,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 953,
											"end": 1028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 953,
											"end": 1028,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1049,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1046,
											"end": 1047,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1046,
											"end": 1049,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1046,
											"end": 1049,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1046,
											"end": 1049,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1046,
											"end": 1049,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 765,
											"end": 1061,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 765,
											"end": 1061,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 765,
											"end": 1061,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 680,
											"end": 1068,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 680,
											"end": 1068,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 126,
											"end": 144,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 126,
											"end": 144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 126,
											"end": 144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 126,
											"end": 144,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 126,
											"end": 144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 144,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 126,
											"end": 144,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 144,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 126,
											"end": 144,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "MOD",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 126,
											"end": 144,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 126,
											"end": 144,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 126,
											"end": 144,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1074,
											"end": 1370,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1074,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1110,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1132,
											"end": 1133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1131,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1126,
											"end": 1133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1133,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1126,
											"end": 1133,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1161,
											"end": 1162,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1148,
											"end": 1152,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1148,
											"end": 1159,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1148,
											"end": 1159,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1148,
											"end": 1159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1148,
											"end": 1159,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1148,
											"end": 1162,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1148,
											"end": 1162,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1148,
											"end": 1177,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1148,
											"end": 1177,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1148,
											"end": 1177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1148,
											"end": 1177,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1148,
											"end": 1177,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1177,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1164,
											"end": 1168,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1164,
											"end": 1175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1164,
											"end": 1175,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1164,
											"end": 1175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1164,
											"end": 1175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1164,
											"end": 1177,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1148,
											"end": 1177,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1148,
											"end": 1177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1363,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1144,
											"end": 1363,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1187,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1179,
											"end": 1187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1179,
											"end": 1187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1179,
											"end": 1187,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1179,
											"end": 1187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1144,
											"end": 1363,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1363,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1144,
											"end": 1363,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1218,
											"end": 1352,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1218,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1233,
											"end": 1237,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1233,
											"end": 1244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1233,
											"end": 1244,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1233,
											"end": 1244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1233,
											"end": 1244,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1231,
											"end": 1232,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1231,
											"end": 1244,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1352,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1218,
											"end": 1352,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1280,
											"end": 1284,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1271,
											"end": 1284,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1284,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1275,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1276,
											"end": 1277,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1278,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1278,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1278,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1278,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1271,
											"end": 1278,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1278,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1278,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1271,
											"end": 1278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1278,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1271,
											"end": 1278,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1278,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1271,
											"end": 1278,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1271,
											"end": 1278,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1278,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1271,
											"end": 1278,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1278,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1278,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1278,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1278,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1278,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1278,
											"name": "MOD",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1278,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1278,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1271,
											"end": 1278,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1278,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1278,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1271,
											"end": 1278,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1284,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1284,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1284,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1268,
											"end": 1337,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1268,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1268,
											"end": 1337,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1317,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 1308,
											"end": 1313,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1308,
											"end": 1313,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1308,
											"end": 1317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1308,
											"end": 1317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1308,
											"end": 1317,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1308,
											"end": 1317,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1308,
											"end": 1317,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1308,
											"end": 1317,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1308,
											"end": 1317,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1308,
											"end": 1317,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1308,
											"end": 1317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1308,
											"end": 1317,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1308,
											"end": 1317,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1268,
											"end": 1337,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1268,
											"end": 1337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1248,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1248,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1248,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1245,
											"end": 1248,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1248,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1248,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1248,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1218,
											"end": 1352,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1352,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1218,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1363,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1144,
											"end": 1363,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1370,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 151,
											"end": 166,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 151,
											"end": 166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 151,
											"end": 166,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 151,
											"end": 166,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 151,
											"end": 166,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 151,
											"end": 166,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 102,
											"end": 119,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 102,
											"end": 119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 102,
											"end": 119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 102,
											"end": 119,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 102,
											"end": 119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 102,
											"end": 119,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 175,
											"end": 674,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 175,
											"end": 674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 227,
											"end": 231,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 256,
											"end": 258,
											"name": "PUSH",
											"source": 0,
											"value": "3C"
										},
										{
											"begin": 243,
											"end": 258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 243,
											"end": 258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 269,
											"end": 281,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 385,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 353,
											"end": 386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 353,
											"end": 386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 353,
											"end": 386,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 353,
											"end": 386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 353,
											"end": 386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 353,
											"end": 386,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 353,
											"end": 386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 353,
											"end": 386,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 353,
											"end": 386,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 353,
											"end": 386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 353,
											"end": 386,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 353,
											"end": 386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 353,
											"end": 386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 353,
											"end": 386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 353,
											"end": 386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 353,
											"end": 386,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 353,
											"end": 386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 353,
											"end": 386,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 353,
											"end": 386,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 353,
											"end": 386,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 353,
											"end": 386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 353,
											"end": 386,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 353,
											"end": 386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 353,
											"end": 386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 353,
											"end": 386,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 343,
											"end": 387,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 343,
											"end": 387,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 343,
											"end": 387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 343,
											"end": 387,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 343,
											"end": 387,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 343,
											"end": 387,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 335,
											"end": 388,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 335,
											"end": 388,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 319,
											"end": 331,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 302,
											"end": 332,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 302,
											"end": 332,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 302,
											"end": 332,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 302,
											"end": 332,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 302,
											"end": 332,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 302,
											"end": 332,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 302,
											"end": 332,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 302,
											"end": 332,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 302,
											"end": 332,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 302,
											"end": 332,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 302,
											"end": 332,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 302,
											"end": 332,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 302,
											"end": 332,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 302,
											"end": 332,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 302,
											"end": 332,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 302,
											"end": 332,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 302,
											"end": 332,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 302,
											"end": 332,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 302,
											"end": 332,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 302,
											"end": 332,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 302,
											"end": 332,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 302,
											"end": 332,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 302,
											"end": 332,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 302,
											"end": 332,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 302,
											"end": 332,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 292,
											"end": 333,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 292,
											"end": 333,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 292,
											"end": 333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 292,
											"end": 333,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 333,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 292,
											"end": 333,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 284,
											"end": 334,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 284,
											"end": 334,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 284,
											"end": 388,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 269,
											"end": 388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 269,
											"end": 388,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 399,
											"end": 416,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 454,
											"end": 458,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 437,
											"end": 459,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 437,
											"end": 459,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 437,
											"end": 459,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 437,
											"end": 459,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 437,
											"end": 459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 437,
											"end": 459,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 437,
											"end": 459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 437,
											"end": 459,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 437,
											"end": 459,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 437,
											"end": 459,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 437,
											"end": 459,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 437,
											"end": 459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 437,
											"end": 459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 437,
											"end": 459,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 437,
											"end": 459,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 437,
											"end": 459,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 437,
											"end": 459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 437,
											"end": 459,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 437,
											"end": 459,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 437,
											"end": 459,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 437,
											"end": 459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 437,
											"end": 459,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 437,
											"end": 459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 437,
											"end": 459,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 437,
											"end": 459,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 427,
											"end": 460,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 427,
											"end": 460,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 427,
											"end": 460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 427,
											"end": 460,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 427,
											"end": 460,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 427,
											"end": 460,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 419,
											"end": 461,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 419,
											"end": 461,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 399,
											"end": 461,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 399,
											"end": 461,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 472,
											"end": 485,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 500,
											"end": 507,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 488,
											"end": 497,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 488,
											"end": 507,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 488,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 488,
											"end": 507,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 488,
											"end": 507,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 488,
											"end": 507,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 488,
											"end": 507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 488,
											"end": 507,
											"name": "MOD",
											"source": 0
										},
										{
											"begin": 472,
											"end": 507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 472,
											"end": 507,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 518,
											"end": 536,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 574,
											"end": 584,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 557,
											"end": 585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 557,
											"end": 585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 557,
											"end": 585,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 557,
											"end": 585,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 557,
											"end": 585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 557,
											"end": 585,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 557,
											"end": 585,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 557,
											"end": 585,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 557,
											"end": 585,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 557,
											"end": 585,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 557,
											"end": 585,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 557,
											"end": 585,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 557,
											"end": 585,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 557,
											"end": 585,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 557,
											"end": 585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 557,
											"end": 585,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 557,
											"end": 585,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 557,
											"end": 585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 557,
											"end": 585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 557,
											"end": 585,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 557,
											"end": 585,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 557,
											"end": 585,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 557,
											"end": 585,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 557,
											"end": 585,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 557,
											"end": 585,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 557,
											"end": 585,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 557,
											"end": 585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 557,
											"end": 585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 557,
											"end": 585,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 547,
											"end": 586,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 547,
											"end": 586,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 547,
											"end": 586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 547,
											"end": 586,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 547,
											"end": 586,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 547,
											"end": 586,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 539,
											"end": 587,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 539,
											"end": 587,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 518,
											"end": 587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 518,
											"end": 587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 598,
											"end": 611,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 627,
											"end": 632,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 614,
											"end": 624,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 614,
											"end": 632,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 614,
											"end": 632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 614,
											"end": 632,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 614,
											"end": 632,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 614,
											"end": 632,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 614,
											"end": 632,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 614,
											"end": 632,
											"name": "MOD",
											"source": 0
										},
										{
											"begin": 598,
											"end": 632,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 598,
											"end": 632,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 659,
											"end": 666,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 652,
											"end": 657,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 652,
											"end": 666,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 645,
											"end": 666,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 645,
											"end": 666,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 645,
											"end": 666,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 645,
											"end": 666,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 645,
											"end": 666,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 645,
											"end": 666,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 645,
											"end": 666,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 645,
											"end": 666,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 175,
											"end": 674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 175,
											"end": 674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 175,
											"end": 674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 175,
											"end": 674,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"collision(uint256)": "26cbeb7a",
							"gate(uint256)": "87a99866",
							"i()": "e5aa3d58",
							"isComplete()": "b2fa1c9e",
							"score()": "efedc669"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"answer\",\"type\":\"uint256\"}],\"name\":\"collision\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"gate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isComplete\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"score\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"shoot/1/\\u53ef\\u9884\\u6d4b\\u7684\\u968f\\u673a\\u6570/1.sol\":\"vulquery\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"shoot/1/\\u53ef\\u9884\\u6d4b\\u7684\\u968f\\u673a\\u6570/1.sol\":{\"keccak256\":\"0x353b2b478a92c9dcd0fefb6aecca150d5b1875676c9a7536ba96986911753a61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6818aaba8dc4b3019e4519d9916ad74850a7fd3f30c11f8dd57e236c9e1db74d\",\"dweb:/ipfs/QmYbcnHq3qXritUxr1W39T3BaJiUiLVT5xjbd71z2BLdof\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "shoot/1/可预测的随机数/1.sol:vulquery",
								"label": "score",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 6,
								"contract": "shoot/1/可预测的随机数/1.sol:vulquery",
								"label": "gate",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_bool)dyn_storage"
							},
							{
								"astId": 9,
								"contract": "shoot/1/可预测的随机数/1.sol:vulquery",
								"label": "i",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_array(t_bool)dyn_storage": {
								"base": "t_bool",
								"encoding": "dynamic_array",
								"label": "bool[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"shoot/1/可预测的随机数/1.sol": {
				"ast": {
					"absolutePath": "shoot/1/可预测的随机数/1.sol",
					"exportedSymbols": {
						"vulquery": [
							198
						]
					},
					"id": 199,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 198,
							"linearizedBaseContracts": [
								198
							],
							"name": "vulquery",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "efedc669",
									"id": 3,
									"mutability": "mutable",
									"name": "score",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 198,
									"src": "102:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "102:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "87a99866",
									"id": 6,
									"mutability": "mutable",
									"name": "gate",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 198,
									"src": "126:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_bool_$dyn_storage",
										"typeString": "bool[]"
									},
									"typeName": {
										"baseType": {
											"id": 4,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "126:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"id": 5,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "126:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
											"typeString": "bool[]"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e5aa3d58",
									"id": 9,
									"mutability": "mutable",
									"name": "i",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 198,
									"src": "151:15:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 7,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "151:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 8,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "165:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 85,
										"nodeType": "Block",
										"src": "232:442:0",
										"statements": [
											{
												"assignments": [
													17
												],
												"declarations": [
													{
														"constant": false,
														"id": 17,
														"mutability": "mutable",
														"name": "MOD_NUM",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 85,
														"src": "243:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 16,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "243:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 19,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "3630",
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "256:2:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_60_by_1",
														"typeString": "int_const 60"
													},
													"value": "60"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "243:15:0"
											},
											{
												"assignments": [
													21
												],
												"declarations": [
													{
														"constant": false,
														"id": 21,
														"mutability": "mutable",
														"name": "seed",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 85,
														"src": "269:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 20,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "269:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 43,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 27,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": -4,
																					"src": "319:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 28,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "number",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "319:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 25,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -1,
																				"src": "302:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 26,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "encodePacked",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "302:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 29,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "302:30:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 24,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -8,
																	"src": "292:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 30,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "292:41:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 23,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "284:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 22,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "284:7:0",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 31,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "284:50:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 37,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": -4,
																					"src": "370:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 38,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "370:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 35,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -1,
																				"src": "353:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 36,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "encodePacked",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "353:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 39,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "353:33:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 34,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -8,
																	"src": "343:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 40,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "343:44:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 33,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "335:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 32,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "335:7:0",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 41,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "335:53:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "284:104:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "269:119:0"
											},
											{
												"assignments": [
													45
												],
												"declarations": [
													{
														"constant": false,
														"id": 45,
														"mutability": "mutable",
														"name": "seed_hash",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 85,
														"src": "399:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 44,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "399:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 55,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 51,
																			"name": "seed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 21,
																			"src": "454:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 49,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -1,
																			"src": "437:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 50,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodePacked",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "437:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 52,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "437:22:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 48,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -8,
																"src": "427:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "427:33:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 47,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "419:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 46,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "419:7:0",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "419:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "399:62:0"
											},
											{
												"assignments": [
													57
												],
												"declarations": [
													{
														"constant": false,
														"id": 57,
														"mutability": "mutable",
														"name": "shark",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 85,
														"src": "472:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 56,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "472:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 61,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 58,
														"name": "seed_hash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "488:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 59,
														"name": "MOD_NUM",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "500:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "488:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "472:35:0"
											},
											{
												"assignments": [
													63
												],
												"declarations": [
													{
														"constant": false,
														"id": 63,
														"mutability": "mutable",
														"name": "lucky_hash",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 85,
														"src": "518:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 62,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "518:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 74,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 69,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -15,
																				"src": "574:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 70,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "574:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 67,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -1,
																			"src": "557:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 68,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodePacked",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "557:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "557:28:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 66,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -8,
																"src": "547:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 72,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "547:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "539:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 64,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "539:7:0",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "539:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "518:69:0"
											},
											{
												"assignments": [
													76
												],
												"declarations": [
													{
														"constant": false,
														"id": 76,
														"mutability": "mutable",
														"name": "lucky",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 85,
														"src": "598:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 75,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "598:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 80,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 79,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 77,
														"name": "lucky_hash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 63,
														"src": "614:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 78,
														"name": "shark",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 57,
														"src": "627:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "614:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "598:34:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 81,
														"name": "lucky",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "652:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 82,
														"name": "_answer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "659:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "652:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 15,
												"id": 84,
												"nodeType": "Return",
												"src": "645:21:0"
											}
										]
									},
									"documentation": null,
									"id": 86,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "culcu",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "_answer",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 86,
												"src": "190:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "190:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "189:14:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 86,
												"src": "227:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 13,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "227:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "226:6:0"
									},
									"scope": 198,
									"src": "175:499:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "719:349:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 95,
																	"name": "answer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 88,
																	"src": "746:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 94,
																"name": "culcu",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 86,
																"src": "740:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "740:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 91,
															"name": "gate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 6,
															"src": "730:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bool_$dyn_storage",
																"typeString": "bool[] storage ref"
															}
														},
														"id": 93,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "730:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_bool_$returns$__$",
															"typeString": "function (bool)"
														}
													},
													"id": 97,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "730:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 98,
												"nodeType": "ExpressionStatement",
												"src": "730:24:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 99,
															"name": "gate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 6,
															"src": "768:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bool_$dyn_storage",
																"typeString": "bool[] storage ref"
															}
														},
														"id": 101,
														"indexExpression": {
															"argumentTypes": null,
															"id": 100,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "773:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "768:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 102,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "777:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "768:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 144,
													"nodeType": "Block",
													"src": "900:161:0",
													"statements": [
														{
															"assignments": [
																119
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 119,
																	"mutability": "mutable",
																	"name": "length",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 144,
																	"src": "915:11:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 118,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "915:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 122,
															"initialValue": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 120,
																	"name": "gate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "927:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bool_$dyn_storage",
																		"typeString": "bool[] storage ref"
																	}
																},
																"id": 121,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "927:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "915:23:0"
														},
														{
															"body": {
																"id": 138,
																"nodeType": "Block",
																"src": "979:49:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"argumentTypes": null,
																					"id": 133,
																					"name": "gate",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 6,
																					"src": "998:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bool_$dyn_storage",
																						"typeString": "bool[] storage ref"
																					}
																				},
																				"id": 135,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "pop",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "998:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_arraypop_nonpayable$__$returns$__$",
																					"typeString": "function ()"
																				}
																			},
																			"id": 136,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "998:10:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 137,
																		"nodeType": "ExpressionStatement",
																		"src": "998:10:0"
																	}
																]
															},
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 127,
																	"name": "q",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 124,
																	"src": "966:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 128,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 119,
																	"src": "968:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "966:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 139,
															"initializationExpression": {
																"assignments": [
																	124
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 124,
																		"mutability": "mutable",
																		"name": "q",
																		"nodeType": "VariableDeclaration",
																		"overrides": null,
																		"scope": 139,
																		"src": "957:6:0",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 123,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "957:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"value": null,
																		"visibility": "internal"
																	}
																],
																"id": 126,
																"initialValue": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "964:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "957:8:0"
															},
															"loopExpression": {
																"expression": {
																	"argumentTypes": null,
																	"id": 131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "975:3:0",
																	"subExpression": {
																		"argumentTypes": null,
																		"id": 130,
																		"name": "q",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 124,
																		"src": "975:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 132,
																"nodeType": "ExpressionStatement",
																"src": "975:3:0"
															},
															"nodeType": "ForStatement",
															"src": "953:75:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 142,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 140,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "1046:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 141,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1048:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1046:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 143,
															"nodeType": "ExpressionStatement",
															"src": "1046:3:0"
														}
													]
												},
												"id": 145,
												"nodeType": "IfStatement",
												"src": "765:296:0",
												"trueBody": {
													"id": 117,
													"nodeType": "Block",
													"src": "782:114:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "797:3:0",
																"subExpression": {
																	"argumentTypes": null,
																	"id": 104,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "797:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 106,
															"nodeType": "ExpressionStatement",
															"src": "797:3:0"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 110,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 107,
																		"name": "gate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 6,
																		"src": "818:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bool_$dyn_storage",
																			"typeString": "bool[] storage ref"
																		}
																	},
																	"id": 108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "818:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3130",
																	"id": 109,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "830:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "818:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 116,
															"nodeType": "IfStatement",
															"src": "815:70:0",
															"trueBody": {
																"id": 115,
																"nodeType": "Block",
																"src": "833:52:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"hexValue": "546f206d756368",
																					"id": 112,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "859:9:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cd80dcbae5265c38760acd77eba715a6fdfa226ee1ce3c578a76a17fea3315d1",
																						"typeString": "literal_string \"To much\""
																					},
																					"value": "To much"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_stringliteral_cd80dcbae5265c38760acd77eba715a6fdfa226ee1ce3c578a76a17fea3315d1",
																						"typeString": "literal_string \"To much\""
																					}
																				],
																				"id": 111,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "852:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 113,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "852:17:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 114,
																		"nodeType": "ExpressionStatement",
																		"src": "852:17:0"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"functionSelector": "26cbeb7a",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "collision",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "answer",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 147,
												"src": "699:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 87,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "699:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "698:13:0"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "719:0:0"
									},
									"scope": 198,
									"src": "680:388:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1115:255:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 152,
														"name": "score",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "1126:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 153,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1132:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1126:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 155,
												"nodeType": "ExpressionStatement",
												"src": "1126:7:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 159,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 156,
																"name": "gate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 6,
																"src": "1148:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_bool_$dyn_storage",
																	"typeString": "bool[] storage ref"
																}
															},
															"id": 157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1148:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "38",
															"id": 158,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1161:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8_by_1",
																"typeString": "int_const 8"
															},
															"value": "8"
														},
														"src": "1148:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 163,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 160,
																"name": "gate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 6,
																"src": "1164:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_bool_$dyn_storage",
																	"typeString": "bool[] storage ref"
																}
															},
															"id": 161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1164:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 162,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1176:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1164:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1148:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 194,
													"nodeType": "Block",
													"src": "1203:160:0",
													"statements": [
														{
															"body": {
																"id": 192,
																"nodeType": "Block",
																"src": "1249:103:0",
																"statements": [
																	{
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 185,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 181,
																					"name": "gate",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 6,
																					"src": "1271:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bool_$dyn_storage",
																						"typeString": "bool[] storage ref"
																					}
																				},
																				"id": 183,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 182,
																					"name": "q",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 171,
																					"src": "1276:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "1271:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "74727565",
																				"id": 184,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1280:4:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			},
																			"src": "1271:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": null,
																		"id": 191,
																		"nodeType": "IfStatement",
																		"src": "1268:69:0",
																		"trueBody": {
																			"id": 190,
																			"nodeType": "Block",
																			"src": "1285:52:0",
																			"statements": [
																				{
																					"expression": {
																						"argumentTypes": null,
																						"id": 188,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"argumentTypes": null,
																							"id": 186,
																							"name": "score",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3,
																							"src": "1308:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "+=",
																						"rightHandSide": {
																							"argumentTypes": null,
																							"hexValue": "3130",
																							"id": 187,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1315:2:0",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_10_by_1",
																								"typeString": "int_const 10"
																							},
																							"value": "10"
																						},
																						"src": "1308:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 189,
																					"nodeType": "ExpressionStatement",
																					"src": "1308:9:0"
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 177,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 174,
																	"name": "q",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 171,
																	"src": "1231:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 175,
																		"name": "gate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 6,
																		"src": "1233:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bool_$dyn_storage",
																			"typeString": "bool[] storage ref"
																		}
																	},
																	"id": 176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1233:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1231:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 193,
															"initializationExpression": {
																"assignments": [
																	171
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 171,
																		"mutability": "mutable",
																		"name": "q",
																		"nodeType": "VariableDeclaration",
																		"overrides": null,
																		"scope": 193,
																		"src": "1222:6:0",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 170,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "1222:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"value": null,
																		"visibility": "internal"
																	}
																],
																"id": 173,
																"initialValue": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 172,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1229:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "1222:8:0"
															},
															"loopExpression": {
																"expression": {
																	"argumentTypes": null,
																	"id": 179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "1245:3:0",
																	"subExpression": {
																		"argumentTypes": null,
																		"id": 178,
																		"name": "q",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 171,
																		"src": "1245:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 180,
																"nodeType": "ExpressionStatement",
																"src": "1245:3:0"
															},
															"nodeType": "ForStatement",
															"src": "1218:134:0"
														}
													]
												},
												"id": 195,
												"nodeType": "IfStatement",
												"src": "1144:219:0",
												"trueBody": {
													"id": 169,
													"nodeType": "Block",
													"src": "1178:11:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 167,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 165,
																	"name": "score",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "1179:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "3330",
																	"id": 166,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1185:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_30_by_1",
																		"typeString": "int_const 30"
																	},
																	"value": "30"
																},
																"src": "1179:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 168,
															"nodeType": "ExpressionStatement",
															"src": "1179:8:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"functionSelector": "b2fa1c9e",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isComplete",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1093:2:0"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 197,
												"src": "1110:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 149,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1110:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1109:6:0"
									},
									"scope": 198,
									"src": "1074:296:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 199,
							"src": "78:1295:0"
						}
					],
					"src": "33:1340:0"
				},
				"id": 0
			}
		}
	}
}