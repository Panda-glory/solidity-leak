{
	"id": "1bddec75e5e31eb0a7113ad4bb199272",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"shoot/ethernaut/contracts/levels/ReentranceFactory.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.0;\n\nimport './base/Level-06.sol';\nimport './Reentrance.sol';\n\ncontract ReentranceFactory is Level {\n\n  uint public insertCoin = 0.001 ether;\n\n  function createInstance(address _player) override public payable returns (address) {\n    _player;\n    require(msg.value >= insertCoin);\n    Reentrance instance = new Reentrance();\n    require(address(this).balance >= insertCoin);\n    address(instance).transfer(insertCoin);\n    return address(instance);\n  }\n\n  function validateInstance(address payable _instance, address _player) override public returns (bool) {\n    _player;\n    Reentrance instance = Reentrance(_instance);\n    return address(instance).balance == 0;\n  }\n\n  receive() external payable {}\n}\n"
			},
			"shoot/ethernaut/contracts/levels/Reentrance.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.6.12;\n\nimport './base/SafeMath-06.sol';\n\ncontract Reentrance {\n  \n  using SafeMath for uint256;\n  mapping(address => uint) public balances;\n\n  function donate(address _to) public payable {\n    balances[_to] = balances[_to].add(msg.value);\n  }\n\n  function balanceOf(address _who) public view returns (uint balance) {\n    return balances[_who];\n  }\n\n  function withdraw(uint _amount) public {\n    if(balances[msg.sender] >= _amount) {\n      (bool result,) = msg.sender.call{value:_amount}(\"\");\n      if(result) {\n        _amount;\n      }\n      balances[msg.sender] -= _amount;\n    }\n  }\n\n  receive() external payable {}\n}\n"
			},
			"shoot/ethernaut/contracts/levels/base/Level-06.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.0;\n\nimport './Ownable-06.sol';\n\nabstract contract Level is Ownable {\n  function createInstance(address _player) virtual public payable returns (address);\n  function validateInstance(address payable _instance, address _player) virtual public returns (bool);\n}\n"
			},
			"shoot/ethernaut/contracts/levels/base/Ownable-06.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\r\n\r\npragma solidity ^0.6.0;\r\n\r\nimport \"./Context-06.sol\";\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() public {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        _checkOwner();\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if the sender is not the owner.\r\n     */\r\n    function _checkOwner() internal view virtual {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n"
			},
			"shoot/ethernaut/contracts/levels/base/SafeMath-06.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\r\n\r\npragma solidity ^0.6.0;\r\n\r\nlibrary SafeMath {\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b <= a, \"SafeMath: subtraction overflow\");\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b > 0, \"SafeMath: division by zero\");\r\n        uint256 c = a / b;\r\n\r\n        return c;\r\n    }\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b != 0, \"SafeMath: modulo by zero\");\r\n        return a % b;\r\n    }\r\n}\r\n"
			},
			"shoot/ethernaut/contracts/levels/base/Context-06.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\r\n\r\npragma solidity ^0.6.0;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"shoot/ethernaut/contracts/levels/Reentrance.sol": {
				"Reentrance": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_who",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								}
							],
							"name": "donate",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":92:670  contract Reentrance {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":92:670  contract Reentrance {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x362a95\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x27e235e3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_6\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":194:293  function donate(address _to) public payable {... */\n    tag_3:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_11\n      jump\t// in\n    tag_9:\n      stop\n        /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":149:189  mapping(address => uint) public balances */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      pop\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_15\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":401:635  function withdraw(uint _amount) public {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      pop\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_19\n      jump\t// in\n    tag_17:\n      stop\n        /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":297:397  function balanceOf(address _who) public view returns (uint balance) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_23\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":194:293  function donate(address _to) public payable {... */\n    tag_11:\n        /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":260:288  balances[_to].add(msg.value) */\n      tag_25\n        /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":278:287  msg.value */\n      callvalue\n        /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":260:268  balances */\n      0x00\n        /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":260:273  balances[_to] */\n      dup1\n        /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":269:272  _to */\n      dup5\n        /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":260:273  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":260:277  balances[_to].add */\n      tag_26\n      swap1\n        /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":260:288  balances[_to].add(msg.value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_25:\n        /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":244:252  balances */\n      0x00\n        /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":244:257  balances[_to] */\n      dup1\n        /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":253:256  _to */\n      dup4\n        /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":244:257  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":244:288  balances[_to] = balances[_to].add(msg.value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":194:293  function donate(address _to) public payable {... */\n      pop\n      jump\t// out\n        /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":149:189  mapping(address => uint) public balances */\n    tag_15:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":401:635  function withdraw(uint _amount) public {... */\n    tag_19:\n        /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":473:480  _amount */\n      dup1\n        /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":449:457  balances */\n      0x00\n        /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":449:469  balances[msg.sender] */\n      dup1\n        /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":458:468  msg.sender */\n      caller\n        /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":449:469  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":449:480  balances[msg.sender] >= _amount */\n      lt\n        /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":446:631  if(balances[msg.sender] >= _amount) {... */\n      tag_28\n      jumpi\n        /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":491:502  bool result */\n      0x00\n        /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":507:517  msg.sender */\n      caller\n        /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":507:522  msg.sender.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":529:536  _amount */\n      dup3\n        /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":507:541  msg.sender.call{value:_amount}(\"\") */\n      mload(0x40)\n      dup1\n      0x00\n      add\n      swap1\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_31\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_30)\n    tag_31:\n      0x60\n      swap2\n      pop\n    tag_30:\n      pop\n        /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":490:541  (bool result,) = msg.sender.call{value:_amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":617:624  _amount */\n      dup2\n        /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":593:601  balances */\n      0x00\n        /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":593:613  balances[msg.sender] */\n      dup1\n        /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":602:612  msg.sender */\n      caller\n        /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":593:613  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":593:624  balances[msg.sender] -= _amount */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":446:631  if(balances[msg.sender] >= _amount) {... */\n      pop\n    tag_28:\n        /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":401:635  function withdraw(uint _amount) public {... */\n      pop\n      jump\t// out\n        /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":297:397  function balanceOf(address _who) public view returns (uint balance) {... */\n    tag_23:\n        /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":351:363  uint balance */\n      0x00\n        /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":378:386  balances */\n      dup1\n        /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":378:392  balances[_who] */\n      0x00\n        /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":387:391  _who */\n      dup4\n        /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":378:392  balances[_who] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":371:392  return balances[_who] */\n      swap1\n      pop\n        /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":297:397  function balanceOf(address _who) public view returns (uint balance) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"shoot/ethernaut/contracts/levels/base/SafeMath-06.sol\":161:342  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_26:\n        /* \"shoot/ethernaut/contracts/levels/base/SafeMath-06.sol\":219:226  uint256 */\n      0x00\n        /* \"shoot/ethernaut/contracts/levels/base/SafeMath-06.sol\":239:248  uint256 c */\n      dup1\n        /* \"shoot/ethernaut/contracts/levels/base/SafeMath-06.sol\":255:256  b */\n      dup3\n        /* \"shoot/ethernaut/contracts/levels/base/SafeMath-06.sol\":251:252  a */\n      dup5\n        /* \"shoot/ethernaut/contracts/levels/base/SafeMath-06.sol\":251:256  a + b */\n      add\n        /* \"shoot/ethernaut/contracts/levels/base/SafeMath-06.sol\":239:256  uint256 c = a + b */\n      swap1\n      pop\n        /* \"shoot/ethernaut/contracts/levels/base/SafeMath-06.sol\":280:281  a */\n      dup4\n        /* \"shoot/ethernaut/contracts/levels/base/SafeMath-06.sol\":275:276  c */\n      dup2\n        /* \"shoot/ethernaut/contracts/levels/base/SafeMath-06.sol\":275:281  c >= a */\n      lt\n      iszero\n        /* \"shoot/ethernaut/contracts/levels/base/SafeMath-06.sol\":267:313  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_35\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_35:\n        /* \"shoot/ethernaut/contracts/levels/base/SafeMath-06.sol\":333:334  c */\n      dup1\n        /* \"shoot/ethernaut/contracts/levels/base/SafeMath-06.sol\":326:334  return c */\n      swap2\n      pop\n      pop\n        /* \"shoot/ethernaut/contracts/levels/base/SafeMath-06.sol\":161:342  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209477be2ad6342312e4d9cf42f3d05f19c34e3ea3d0e4673d6ae687fc5da5554b64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061044a806100206000396000f3fe6080604052600436106100425760003560e01c8062362a951461004e57806327e235e3146100925780632e1a7d4d146100f757806370a082311461013257610049565b3661004957005b600080fd5b6100906004803603602081101561006457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610197565b005b34801561009e57600080fd5b506100e1600480360360208110156100b557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061022d565b6040518082815260200191505060405180910390f35b34801561010357600080fd5b506101306004803603602081101561011a57600080fd5b8101908080359060200190929190505050610245565b005b34801561013e57600080fd5b506101816004803603602081101561015557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610344565b6040518082815260200191505060405180910390f35b6101e8346000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461038c90919063ffffffff16565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b60006020528060005260406000206000915090505481565b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054106103415760003373ffffffffffffffffffffffffffffffffffffffff168260405180600001905060006040518083038185875af1925050503d80600081146102ea576040519150601f19603f3d011682016040523d82523d6000602084013e6102ef565b606091505b50509050816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550505b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008082840190508381101561040a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b809150509291505056fea26469706673582212209477be2ad6342312e4d9cf42f3d05f19c34e3ea3d0e4673d6ae687fc5da5554b64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44A DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x42 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x362A95 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x92 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x132 JUMPI PUSH2 0x49 JUMP JUMPDEST CALLDATASIZE PUSH2 0x49 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x90 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x197 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x22D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x103 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x130 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x245 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x181 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x155 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x344 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E8 CALLVALUE PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x38C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT PUSH2 0x341 JUMPI PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x0 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2EA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2EF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP2 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x40A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 PUSH24 0xBE2AD6342312E4D9CF42F3D05F19C34E3EA3D0E4673D6AE6 DUP8 0xFC 0x5D 0xA5 SSTORE 0x4B PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "92:578:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100425760003560e01c8062362a951461004e57806327e235e3146100925780632e1a7d4d146100f757806370a082311461013257610049565b3661004957005b600080fd5b6100906004803603602081101561006457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610197565b005b34801561009e57600080fd5b506100e1600480360360208110156100b557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061022d565b6040518082815260200191505060405180910390f35b34801561010357600080fd5b506101306004803603602081101561011a57600080fd5b8101908080359060200190929190505050610245565b005b34801561013e57600080fd5b506101816004803603602081101561015557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610344565b6040518082815260200191505060405180910390f35b6101e8346000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461038c90919063ffffffff16565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b60006020528060005260406000206000915090505481565b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054106103415760003373ffffffffffffffffffffffffffffffffffffffff168260405180600001905060006040518083038185875af1925050503d80600081146102ea576040519150601f19603f3d011682016040523d82523d6000602084013e6102ef565b606091505b50509050816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550505b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008082840190508381101561040a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b809150509291505056fea26469706673582212209477be2ad6342312e4d9cf42f3d05f19c34e3ea3d0e4673d6ae687fc5da5554b64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x42 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x362A95 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x92 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x132 JUMPI PUSH2 0x49 JUMP JUMPDEST CALLDATASIZE PUSH2 0x49 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x90 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x197 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x22D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x103 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x130 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x245 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x181 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x155 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x344 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E8 CALLVALUE PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x38C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT PUSH2 0x341 JUMPI PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x0 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2EA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2EF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP2 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x40A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 PUSH24 0xBE2AD6342312E4D9CF42F3D05F19C34E3EA3D0E4673D6AE6 DUP8 0xFC 0x5D 0xA5 SSTORE 0x4B PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "92:578:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;194:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;149:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;401:234;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;297:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;194:99;260:28;278:9;260:8;:13;269:3;260:13;;;;;;;;;;;;;;;;:17;;:28;;;;:::i;:::-;244:8;:13;253:3;244:13;;;;;;;;;;;;;;;:44;;;;194:99;:::o;149:40::-;;;;;;;;;;;;;;;;;:::o;401:234::-;473:7;449:8;:20;458:10;449:20;;;;;;;;;;;;;;;;:31;446:185;;491:11;507:10;:15;;529:7;507:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;490:51;;;617:7;593:8;:20;602:10;593:20;;;;;;;;;;;;;;;;:31;;;;;;;;;;;446:185;;401:234;:::o;297:100::-;351:12;378:8;:14;387:4;378:14;;;;;;;;;;;;;;;;371:21;;297:100;;;:::o;161:181:5:-;219:7;239:9;255:1;251;:5;239:17;;280:1;275;:6;;267:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;333:1;326:8;;;161:181;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "219600",
								"executionCost": "263",
								"totalCost": "219863"
							},
							"external": {
								"balanceOf(address)": "1240",
								"balances(address)": "1169",
								"donate(address)": "infinite",
								"withdraw(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 92,
									"end": 670,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 92,
									"end": 670,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 92,
									"end": 670,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 92,
									"end": 670,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 92,
									"end": 670,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 92,
									"end": 670,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 92,
									"end": 670,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 92,
									"end": 670,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 92,
									"end": 670,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 92,
									"end": 670,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 92,
									"end": 670,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 92,
									"end": 670,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 92,
									"end": 670,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 92,
									"end": 670,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 92,
									"end": 670,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 92,
									"end": 670,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 92,
									"end": 670,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 92,
									"end": 670,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 92,
									"end": 670,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 92,
									"end": 670,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 92,
									"end": 670,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209477be2ad6342312e4d9cf42f3d05f19c34e3ea3d0e4673d6ae687fc5da5554b64736f6c634300060c0033",
									".code": [
										{
											"begin": 92,
											"end": 670,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 92,
											"end": 670,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 92,
											"end": 670,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 92,
											"end": 670,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 92,
											"end": 670,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 92,
											"end": 670,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 92,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 92,
											"end": 670,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 92,
											"end": 670,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 92,
											"end": 670,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 92,
											"end": 670,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 92,
											"end": 670,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 92,
											"end": 670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 92,
											"end": 670,
											"name": "PUSH",
											"source": 0,
											"value": "362A95"
										},
										{
											"begin": 92,
											"end": 670,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 92,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 92,
											"end": 670,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 92,
											"end": 670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 92,
											"end": 670,
											"name": "PUSH",
											"source": 0,
											"value": "27E235E3"
										},
										{
											"begin": 92,
											"end": 670,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 92,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 92,
											"end": 670,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 92,
											"end": 670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 92,
											"end": 670,
											"name": "PUSH",
											"source": 0,
											"value": "2E1A7D4D"
										},
										{
											"begin": 92,
											"end": 670,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 92,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 92,
											"end": 670,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 92,
											"end": 670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 92,
											"end": 670,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 92,
											"end": 670,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 92,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 92,
											"end": 670,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 92,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 92,
											"end": 670,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 92,
											"end": 670,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 92,
											"end": 670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 92,
											"end": 670,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 92,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 92,
											"end": 670,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 92,
											"end": 670,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 92,
											"end": 670,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 92,
											"end": 670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 92,
											"end": 670,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 92,
											"end": 670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 92,
											"end": 670,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 194,
											"end": 293,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 194,
											"end": 293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 194,
											"end": 293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 194,
											"end": 293,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 194,
											"end": 293,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 194,
											"end": 293,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 194,
											"end": 293,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 194,
											"end": 293,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 194,
											"end": 293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 194,
											"end": 293,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 194,
											"end": 293,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 194,
											"end": 293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 194,
											"end": 293,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 194,
											"end": 293,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 293,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 194,
											"end": 293,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 194,
											"end": 293,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 194,
											"end": 293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 194,
											"end": 293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 194,
											"end": 293,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 194,
											"end": 293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 194,
											"end": 293,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 194,
											"end": 293,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 194,
											"end": 293,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 194,
											"end": 293,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 194,
											"end": 293,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 194,
											"end": 293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 194,
											"end": 293,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 194,
											"end": 293,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 194,
											"end": 293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 194,
											"end": 293,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 194,
											"end": 293,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 194,
											"end": 293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 194,
											"end": 293,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 194,
											"end": 293,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 194,
											"end": 293,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 194,
											"end": 293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 194,
											"end": 293,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 194,
											"end": 293,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 194,
											"end": 293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 194,
											"end": 293,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 149,
											"end": 189,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 149,
											"end": 189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 149,
											"end": 189,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 149,
											"end": 189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 149,
											"end": 189,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 149,
											"end": 189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 149,
											"end": 189,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 149,
											"end": 189,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 149,
											"end": 189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 149,
											"end": 189,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 149,
											"end": 189,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 149,
											"end": 189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 149,
											"end": 189,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 149,
											"end": 189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 149,
											"end": 189,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 149,
											"end": 189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 149,
											"end": 189,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 149,
											"end": 189,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 149,
											"end": 189,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 149,
											"end": 189,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 149,
											"end": 189,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 149,
											"end": 189,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 149,
											"end": 189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 149,
											"end": 189,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 149,
											"end": 189,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 149,
											"end": 189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 149,
											"end": 189,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 149,
											"end": 189,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 149,
											"end": 189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 149,
											"end": 189,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 149,
											"end": 189,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 149,
											"end": 189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 149,
											"end": 189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 149,
											"end": 189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 149,
											"end": 189,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 149,
											"end": 189,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 149,
											"end": 189,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 149,
											"end": 189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 149,
											"end": 189,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 149,
											"end": 189,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 149,
											"end": 189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 149,
											"end": 189,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 149,
											"end": 189,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 149,
											"end": 189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 149,
											"end": 189,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 149,
											"end": 189,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 149,
											"end": 189,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 149,
											"end": 189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 149,
											"end": 189,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 149,
											"end": 189,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 149,
											"end": 189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 149,
											"end": 189,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 149,
											"end": 189,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 149,
											"end": 189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 149,
											"end": 189,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 149,
											"end": 189,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 149,
											"end": 189,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 149,
											"end": 189,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 149,
											"end": 189,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 149,
											"end": 189,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 149,
											"end": 189,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 149,
											"end": 189,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 149,
											"end": 189,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 149,
											"end": 189,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 149,
											"end": 189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 149,
											"end": 189,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 149,
											"end": 189,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 149,
											"end": 189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 149,
											"end": 189,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 401,
											"end": 635,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 401,
											"end": 635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 401,
											"end": 635,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 401,
											"end": 635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 635,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 401,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 401,
											"end": 635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 401,
											"end": 635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 401,
											"end": 635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 635,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 401,
											"end": 635,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 401,
											"end": 635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 401,
											"end": 635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 401,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 401,
											"end": 635,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 401,
											"end": 635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 635,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 401,
											"end": 635,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 401,
											"end": 635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 401,
											"end": 635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 401,
											"end": 635,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 401,
											"end": 635,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 401,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 401,
											"end": 635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 401,
											"end": 635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 401,
											"end": 635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 635,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 401,
											"end": 635,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 401,
											"end": 635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 401,
											"end": 635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 401,
											"end": 635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 401,
											"end": 635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 635,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 401,
											"end": 635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 401,
											"end": 635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 401,
											"end": 635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 635,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 401,
											"end": 635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 401,
											"end": 635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 401,
											"end": 635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 401,
											"end": 635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 401,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 401,
											"end": 635,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 401,
											"end": 635,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 401,
											"end": 635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 401,
											"end": 635,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 297,
											"end": 397,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 297,
											"end": 397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 297,
											"end": 397,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 297,
											"end": 397,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 297,
											"end": 397,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 297,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 297,
											"end": 397,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 297,
											"end": 397,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 397,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 297,
											"end": 397,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 297,
											"end": 397,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 297,
											"end": 397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 297,
											"end": 397,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 297,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 297,
											"end": 397,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 297,
											"end": 397,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 297,
											"end": 397,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 297,
											"end": 397,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 297,
											"end": 397,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 297,
											"end": 397,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 297,
											"end": 397,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 297,
											"end": 397,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 297,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 297,
											"end": 397,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 297,
											"end": 397,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 397,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 297,
											"end": 397,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 297,
											"end": 397,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 297,
											"end": 397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 297,
											"end": 397,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 297,
											"end": 397,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 297,
											"end": 397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 297,
											"end": 397,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 297,
											"end": 397,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 297,
											"end": 397,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 297,
											"end": 397,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 297,
											"end": 397,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 297,
											"end": 397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 297,
											"end": 397,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 297,
											"end": 397,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 297,
											"end": 397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 297,
											"end": 397,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 297,
											"end": 397,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 297,
											"end": 397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 297,
											"end": 397,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 297,
											"end": 397,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 297,
											"end": 397,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 297,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 297,
											"end": 397,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 297,
											"end": 397,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 297,
											"end": 397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 297,
											"end": 397,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 297,
											"end": 397,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 297,
											"end": 397,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 297,
											"end": 397,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 297,
											"end": 397,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 297,
											"end": 397,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 297,
											"end": 397,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 297,
											"end": 397,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 297,
											"end": 397,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 297,
											"end": 397,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 297,
											"end": 397,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 297,
											"end": 397,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 297,
											"end": 397,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 297,
											"end": 397,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 297,
											"end": 397,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 297,
											"end": 397,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 297,
											"end": 397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 297,
											"end": 397,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 194,
											"end": 293,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 194,
											"end": 293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 260,
											"end": 288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 278,
											"end": 287,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 260,
											"end": 268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 273,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 269,
											"end": 272,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 260,
											"end": 273,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 260,
											"end": 273,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 260,
											"end": 273,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 260,
											"end": 273,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 260,
											"end": 273,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 260,
											"end": 273,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 260,
											"end": 273,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 260,
											"end": 273,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 260,
											"end": 273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 260,
											"end": 273,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 260,
											"end": 273,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 260,
											"end": 273,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 260,
											"end": 273,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 260,
											"end": 273,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 273,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 260,
											"end": 273,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 260,
											"end": 277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 260,
											"end": 277,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 260,
											"end": 288,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 260,
											"end": 288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 260,
											"end": 288,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 260,
											"end": 288,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 260,
											"end": 288,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 260,
											"end": 288,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 260,
											"end": 288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 244,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 244,
											"end": 257,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 253,
											"end": 256,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 244,
											"end": 257,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 244,
											"end": 257,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 244,
											"end": 257,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 244,
											"end": 257,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 244,
											"end": 257,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 244,
											"end": 257,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 244,
											"end": 257,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 244,
											"end": 257,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 244,
											"end": 257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 244,
											"end": 257,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 244,
											"end": 257,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 244,
											"end": 257,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 244,
											"end": 257,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 244,
											"end": 257,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 244,
											"end": 257,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 244,
											"end": 288,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 244,
											"end": 288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 244,
											"end": 288,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 244,
											"end": 288,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 194,
											"end": 293,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 194,
											"end": 293,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 149,
											"end": 189,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 149,
											"end": 189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 149,
											"end": 189,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 149,
											"end": 189,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 149,
											"end": 189,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 149,
											"end": 189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 149,
											"end": 189,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 149,
											"end": 189,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 149,
											"end": 189,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 149,
											"end": 189,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 149,
											"end": 189,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 149,
											"end": 189,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 149,
											"end": 189,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 149,
											"end": 189,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 149,
											"end": 189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 149,
											"end": 189,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 149,
											"end": 189,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 149,
											"end": 189,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 149,
											"end": 189,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 401,
											"end": 635,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 401,
											"end": 635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 473,
											"end": 480,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 449,
											"end": 457,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 449,
											"end": 469,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 458,
											"end": 468,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 449,
											"end": 469,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 449,
											"end": 469,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 449,
											"end": 469,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 449,
											"end": 469,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 449,
											"end": 469,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 449,
											"end": 469,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 449,
											"end": 469,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 449,
											"end": 469,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 449,
											"end": 469,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 449,
											"end": 469,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 449,
											"end": 469,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 449,
											"end": 469,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 449,
											"end": 469,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 449,
											"end": 469,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 449,
											"end": 469,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 449,
											"end": 469,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 449,
											"end": 480,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 446,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 446,
											"end": 631,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 491,
											"end": 502,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 517,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 507,
											"end": 522,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 507,
											"end": 522,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 529,
											"end": 536,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 507,
											"end": 541,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 507,
											"end": 541,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 507,
											"end": 541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 507,
											"end": 541,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 541,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 507,
											"end": 541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 507,
											"end": 541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 507,
											"end": 541,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 541,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 507,
											"end": 541,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 507,
											"end": 541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 507,
											"end": 541,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 507,
											"end": 541,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 507,
											"end": 541,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 507,
											"end": 541,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 507,
											"end": 541,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 507,
											"end": 541,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 507,
											"end": 541,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 507,
											"end": 541,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 507,
											"end": 541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 507,
											"end": 541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 507,
											"end": 541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 507,
											"end": 541,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 507,
											"end": 541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 507,
											"end": 541,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 541,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 507,
											"end": 541,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 507,
											"end": 541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 507,
											"end": 541,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 507,
											"end": 541,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 507,
											"end": 541,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 507,
											"end": 541,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 507,
											"end": 541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 507,
											"end": 541,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 507,
											"end": 541,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 507,
											"end": 541,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 507,
											"end": 541,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 507,
											"end": 541,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 507,
											"end": 541,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 507,
											"end": 541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 507,
											"end": 541,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 507,
											"end": 541,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 507,
											"end": 541,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 507,
											"end": 541,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 507,
											"end": 541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 507,
											"end": 541,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 507,
											"end": 541,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 507,
											"end": 541,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 541,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 507,
											"end": 541,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 507,
											"end": 541,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 507,
											"end": 541,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 507,
											"end": 541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 507,
											"end": 541,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 507,
											"end": 541,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 507,
											"end": 541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 507,
											"end": 541,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 507,
											"end": 541,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 507,
											"end": 541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 507,
											"end": 541,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 507,
											"end": 541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 507,
											"end": 541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 490,
											"end": 541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 490,
											"end": 541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 490,
											"end": 541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 617,
											"end": 624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 593,
											"end": 601,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 593,
											"end": 613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 602,
											"end": 612,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 593,
											"end": 613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 593,
											"end": 613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 593,
											"end": 613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 593,
											"end": 613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 593,
											"end": 613,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 593,
											"end": 613,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 593,
											"end": 613,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 593,
											"end": 613,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 593,
											"end": 613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 593,
											"end": 613,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 593,
											"end": 613,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 593,
											"end": 613,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 593,
											"end": 613,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 593,
											"end": 613,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 593,
											"end": 613,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 593,
											"end": 613,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 593,
											"end": 624,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 593,
											"end": 624,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 593,
											"end": 624,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 593,
											"end": 624,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 593,
											"end": 624,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 593,
											"end": 624,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 593,
											"end": 624,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 593,
											"end": 624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 593,
											"end": 624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 593,
											"end": 624,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 593,
											"end": 624,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 446,
											"end": 631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 446,
											"end": 631,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 446,
											"end": 631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 401,
											"end": 635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 401,
											"end": 635,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 297,
											"end": 397,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 297,
											"end": 397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 351,
											"end": 363,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 378,
											"end": 392,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 387,
											"end": 391,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 378,
											"end": 392,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 378,
											"end": 392,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 378,
											"end": 392,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 378,
											"end": 392,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 378,
											"end": 392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 378,
											"end": 392,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 378,
											"end": 392,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 378,
											"end": 392,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 378,
											"end": 392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 378,
											"end": 392,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 378,
											"end": 392,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 378,
											"end": 392,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 378,
											"end": 392,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 378,
											"end": 392,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 392,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 378,
											"end": 392,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 371,
											"end": 392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 371,
											"end": 392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 297,
											"end": 397,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 297,
											"end": 397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 297,
											"end": 397,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 297,
											"end": 397,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 161,
											"end": 342,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 161,
											"end": 342,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 219,
											"end": 226,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 239,
											"end": 248,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 255,
											"end": 256,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 251,
											"end": 252,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 251,
											"end": 256,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 239,
											"end": 256,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 239,
											"end": 256,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 280,
											"end": 281,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 275,
											"end": 276,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 275,
											"end": 281,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 275,
											"end": 281,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 267,
											"end": 313,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 267,
											"end": 313,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 267,
											"end": 313,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 267,
											"end": 313,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 267,
											"end": 313,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 267,
											"end": 313,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 267,
											"end": 313,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 267,
											"end": 313,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 267,
											"end": 313,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 267,
											"end": 313,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 267,
											"end": 313,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 267,
											"end": 313,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 267,
											"end": 313,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 267,
											"end": 313,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 267,
											"end": 313,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 267,
											"end": 313,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 267,
											"end": 313,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 267,
											"end": 313,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 267,
											"end": 313,
											"name": "PUSH",
											"source": 5,
											"value": "1B"
										},
										{
											"begin": 267,
											"end": 313,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 267,
											"end": 313,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 267,
											"end": 313,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 267,
											"end": 313,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 267,
											"end": 313,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 267,
											"end": 313,
											"name": "PUSH",
											"source": 5,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 267,
											"end": 313,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 267,
											"end": 313,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 267,
											"end": 313,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 267,
											"end": 313,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 267,
											"end": 313,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 267,
											"end": 313,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 267,
											"end": 313,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 267,
											"end": 313,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 267,
											"end": 313,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 267,
											"end": 313,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 267,
											"end": 313,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 267,
											"end": 313,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 267,
											"end": 313,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 267,
											"end": 313,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 267,
											"end": 313,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 267,
											"end": 313,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 267,
											"end": 313,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 333,
											"end": 334,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 326,
											"end": 334,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 326,
											"end": 334,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 326,
											"end": 334,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 161,
											"end": 342,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 161,
											"end": 342,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 161,
											"end": 342,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 161,
											"end": 342,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 161,
											"end": 342,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"balances(address)": "27e235e3",
							"donate(address)": "00362a95",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"donate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"shoot/ethernaut/contracts/levels/Reentrance.sol\":\"Reentrance\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"shoot/ethernaut/contracts/levels/Reentrance.sol\":{\"keccak256\":\"0xb3190987f66b9a65441da7cceb8ef286e41bf0a6ba8104b0d61bc19f6122ee0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7a6df971c52ae21d2fd3897d2d62087d749ec1797c2f713c2b261826d308679\",\"dweb:/ipfs/QmVhbUsazohYEPxeFkkDCRsytwkEhKp6u3WZhH4ojrbRgJ\"]},\"shoot/ethernaut/contracts/levels/base/SafeMath-06.sol\":{\"keccak256\":\"0x98736a085f562e1232a6975c12f784ba08bddc6682aaf57f795155989d44539d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c720ad8c836152a5b673eadd824caf4c214865042006bb8972ec789dcb89dc3\",\"dweb:/ipfs/QmRdfSNjkgoGqQx7QkyrJ779vVkjqrMY18b9Y9Eh1RD7h4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 9,
								"contract": "shoot/ethernaut/contracts/levels/Reentrance.sol:Reentrance",
								"label": "balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"shoot/ethernaut/contracts/levels/ReentranceFactory.sol": {
				"ReentranceFactory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_player",
									"type": "address"
								}
							],
							"name": "createInstance",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "insertCoin",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_instance",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_player",
									"type": "address"
								}
							],
							"name": "validateInstance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"shoot/ethernaut/contracts/levels/ReentranceFactory.sol\":116:755  contract ReentranceFactory is Level {... */\n  mstore(0x40, 0x80)\n    /* \"shoot/ethernaut/contracts/levels/ReentranceFactory.sol\":182:193  0.001 ether */\n  0x038d7ea4c68000\n    /* \"shoot/ethernaut/contracts/levels/ReentranceFactory.sol\":157:193  uint public insertCoin = 0.001 ether */\n  0x01\n  sstore\n    /* \"shoot/ethernaut/contracts/levels/ReentranceFactory.sol\":116:755  contract ReentranceFactory is Level {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":967:999  _transferOwnership(_msgSender()) */\n  tag_4\n    /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":986:998  _msgSender() */\n  tag_5\n    /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":986:996  _msgSender */\n  shl(0x20, tag_6)\n    /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":986:998  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":967:985  _transferOwnership */\n  shl(0x20, tag_7)\n    /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":967:999  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"shoot/ethernaut/contracts/levels/ReentranceFactory.sol\":116:755  contract ReentranceFactory is Level {... */\n  jump(tag_8)\n    /* \"shoot/ethernaut/contracts/levels/base/Context-06.sol\":656:754  function _msgSender() internal view virtual returns (address) {\r... */\ntag_6:\n    /* \"shoot/ethernaut/contracts/levels/base/Context-06.sol\":709:716  address */\n  0x00\n    /* \"shoot/ethernaut/contracts/levels/base/Context-06.sol\":736:746  msg.sender */\n  caller\n    /* \"shoot/ethernaut/contracts/levels/base/Context-06.sol\":729:746  return msg.sender */\n  swap1\n  pop\n    /* \"shoot/ethernaut/contracts/levels/base/Context-06.sol\":656:754  function _msgSender() internal view virtual returns (address) {\r... */\n  swap1\n  jump\t// out\n    /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":2513:2704  function _transferOwnership(address newOwner) internal virtual {\r... */\ntag_7:\n    /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":2587:2603  address oldOwner */\n  0x00\n    /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":2606:2612  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":2587:2612  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":2632:2640  newOwner */\n  dup2\n    /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":2623:2629  _owner */\n  0x00\n  dup1\n    /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":2623:2640  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":2687:2695  newOwner */\n  dup2\n    /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":2656:2696  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":2677:2685  oldOwner */\n  dup2\n    /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":2656:2696  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":2513:2704  function _transferOwnership(address newOwner) internal virtual {\r... */\n  pop\n  pop\n  jump\t// out\n    /* \"shoot/ethernaut/contracts/levels/ReentranceFactory.sol\":116:755  contract ReentranceFactory is Level {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"shoot/ethernaut/contracts/levels/ReentranceFactory.sol\":116:755  contract ReentranceFactory is Level {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x7726f776\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x90696af9\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xd38def5b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_8\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":1894:1997  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      pop\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      stop\n        /* \"shoot/ethernaut/contracts/levels/ReentranceFactory.sol\":198:505  function createInstance(address _player) override public payable returns (address) {... */\n    tag_4:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_16\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":1246:1333  function owner() public view virtual returns (address) {\r... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      pop\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"shoot/ethernaut/contracts/levels/ReentranceFactory.sol\":157:193  uint public insertCoin = 0.001 ether */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"shoot/ethernaut/contracts/levels/ReentranceFactory.sol\":509:720  function validateInstance(address payable _instance, address _player) override public returns (bool) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      pop\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_26\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":2152:2353  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_30\n      jump\t// in\n    tag_28:\n      stop\n        /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":1894:1997  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_13:\n        /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":1132:1145  _checkOwner() */\n      tag_32\n        /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":1132:1143  _checkOwner */\n      tag_33\n        /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":1132:1145  _checkOwner() */\n      jump\t// in\n    tag_32:\n        /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":1959:1989  _transferOwnership(address(0)) */\n      tag_35\n        /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":1986:1987  0 */\n      0x00\n        /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":1959:1977  _transferOwnership */\n      tag_36\n        /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":1959:1989  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_35:\n        /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":1894:1997  function renounceOwnership() public virtual onlyOwner {\r... */\n      jump\t// out\n        /* \"shoot/ethernaut/contracts/levels/ReentranceFactory.sol\":198:505  function createInstance(address _player) override public payable returns (address) {... */\n    tag_16:\n        /* \"shoot/ethernaut/contracts/levels/ReentranceFactory.sol\":272:279  address */\n      0x00\n        /* \"shoot/ethernaut/contracts/levels/ReentranceFactory.sol\":321:331  insertCoin */\n      sload(0x01)\n        /* \"shoot/ethernaut/contracts/levels/ReentranceFactory.sol\":308:317  msg.value */\n      callvalue\n        /* \"shoot/ethernaut/contracts/levels/ReentranceFactory.sol\":308:331  msg.value >= insertCoin */\n      lt\n      iszero\n        /* \"shoot/ethernaut/contracts/levels/ReentranceFactory.sol\":300:332  require(msg.value >= insertCoin) */\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n        /* \"shoot/ethernaut/contracts/levels/ReentranceFactory.sol\":338:357  Reentrance instance */\n      0x00\n        /* \"shoot/ethernaut/contracts/levels/ReentranceFactory.sol\":360:376  new Reentrance() */\n      mload(0x40)\n      tag_39\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      0x00\n      create\n      dup1\n      iszero\n      dup1\n      iszero\n      tag_41\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_41:\n      pop\n        /* \"shoot/ethernaut/contracts/levels/ReentranceFactory.sol\":338:376  Reentrance instance = new Reentrance() */\n      swap1\n      pop\n        /* \"shoot/ethernaut/contracts/levels/ReentranceFactory.sol\":415:425  insertCoin */\n      sload(0x01)\n        /* \"shoot/ethernaut/contracts/levels/ReentranceFactory.sol\":390:411  address(this).balance */\n      selfbalance\n        /* \"shoot/ethernaut/contracts/levels/ReentranceFactory.sol\":390:425  address(this).balance >= insertCoin */\n      lt\n      iszero\n        /* \"shoot/ethernaut/contracts/levels/ReentranceFactory.sol\":382:426  require(address(this).balance >= insertCoin) */\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n        /* \"shoot/ethernaut/contracts/levels/ReentranceFactory.sol\":440:448  instance */\n      dup1\n        /* \"shoot/ethernaut/contracts/levels/ReentranceFactory.sol\":432:458  address(instance).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"shoot/ethernaut/contracts/levels/ReentranceFactory.sol\":432:470  address(instance).transfer(insertCoin) */\n      0x08fc\n        /* \"shoot/ethernaut/contracts/levels/ReentranceFactory.sol\":459:469  insertCoin */\n      sload(0x01)\n        /* \"shoot/ethernaut/contracts/levels/ReentranceFactory.sol\":432:470  address(instance).transfer(insertCoin) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_44\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_44:\n      pop\n        /* \"shoot/ethernaut/contracts/levels/ReentranceFactory.sol\":491:499  instance */\n      dup1\n        /* \"shoot/ethernaut/contracts/levels/ReentranceFactory.sol\":476:500  return address(instance) */\n      swap2\n      pop\n      pop\n        /* \"shoot/ethernaut/contracts/levels/ReentranceFactory.sol\":198:505  function createInstance(address _player) override public payable returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":1246:1333  function owner() public view virtual returns (address) {\r... */\n    tag_19:\n        /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":1292:1299  address */\n      0x00\n        /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":1319:1325  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":1312:1325  return _owner */\n      swap1\n      pop\n        /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":1246:1333  function owner() public view virtual returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"shoot/ethernaut/contracts/levels/ReentranceFactory.sol\":157:193  uint public insertCoin = 0.001 ether */\n    tag_22:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"shoot/ethernaut/contracts/levels/ReentranceFactory.sol\":509:720  function validateInstance(address payable _instance, address _player) override public returns (bool) {... */\n    tag_26:\n        /* \"shoot/ethernaut/contracts/levels/ReentranceFactory.sol\":604:608  bool */\n      0x00\n        /* \"shoot/ethernaut/contracts/levels/ReentranceFactory.sol\":629:648  Reentrance instance */\n      dup1\n        /* \"shoot/ethernaut/contracts/levels/ReentranceFactory.sol\":662:671  _instance */\n      dup4\n        /* \"shoot/ethernaut/contracts/levels/ReentranceFactory.sol\":629:672  Reentrance instance = Reentrance(_instance) */\n      swap1\n      pop\n        /* \"shoot/ethernaut/contracts/levels/ReentranceFactory.sol\":714:715  0 */\n      0x00\n        /* \"shoot/ethernaut/contracts/levels/ReentranceFactory.sol\":693:701  instance */\n      dup2\n        /* \"shoot/ethernaut/contracts/levels/ReentranceFactory.sol\":685:710  address(instance).balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"shoot/ethernaut/contracts/levels/ReentranceFactory.sol\":685:715  address(instance).balance == 0 */\n      eq\n        /* \"shoot/ethernaut/contracts/levels/ReentranceFactory.sol\":678:715  return address(instance).balance == 0 */\n      swap2\n      pop\n      pop\n        /* \"shoot/ethernaut/contracts/levels/ReentranceFactory.sol\":509:720  function validateInstance(address payable _instance, address _player) override public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":2152:2353  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_30:\n        /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":1132:1145  _checkOwner() */\n      tag_48\n        /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":1132:1143  _checkOwner */\n      tag_33\n        /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":1132:1145  _checkOwner() */\n      jump\t// in\n    tag_48:\n        /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":2261:2262  0 */\n      0x00\n        /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":2241:2263  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":2241:2249  newOwner */\n      dup2\n        /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":2241:2263  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":2233:2306  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_50\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_50:\n        /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":2317:2345  _transferOwnership(newOwner) */\n      tag_51\n        /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":2336:2344  newOwner */\n      dup2\n        /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":2317:2335  _transferOwnership */\n      tag_36\n        /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":2317:2345  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_51:\n        /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":2152:2353  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":1411:1543  function _checkOwner() internal view virtual {\r... */\n    tag_33:\n        /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":1486:1498  _msgSender() */\n      tag_53\n        /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":1486:1496  _msgSender */\n      tag_54\n        /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":1486:1498  _msgSender() */\n      jump\t// in\n    tag_53:\n        /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":1475:1498  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":1475:1482  owner() */\n      tag_55\n        /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":1475:1480  owner */\n      tag_19\n        /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":1475:1482  owner() */\n      jump\t// in\n    tag_55:\n        /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":1475:1498  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":1467:1535  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_56\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_56:\n        /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":1411:1543  function _checkOwner() internal view virtual {\r... */\n      jump\t// out\n        /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":2513:2704  function _transferOwnership(address newOwner) internal virtual {\r... */\n    tag_36:\n        /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":2587:2603  address oldOwner */\n      0x00\n        /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":2606:2612  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":2587:2612  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":2632:2640  newOwner */\n      dup2\n        /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":2623:2629  _owner */\n      0x00\n      dup1\n        /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":2623:2640  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":2687:2695  newOwner */\n      dup2\n        /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":2656:2696  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":2677:2685  oldOwner */\n      dup2\n        /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":2656:2696  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":2513:2704  function _transferOwnership(address newOwner) internal virtual {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"shoot/ethernaut/contracts/levels/base/Context-06.sol\":656:754  function _msgSender() internal view virtual returns (address) {\r... */\n    tag_54:\n        /* \"shoot/ethernaut/contracts/levels/base/Context-06.sol\":709:716  address */\n      0x00\n        /* \"shoot/ethernaut/contracts/levels/base/Context-06.sol\":736:746  msg.sender */\n      caller\n        /* \"shoot/ethernaut/contracts/levels/base/Context-06.sol\":729:746  return msg.sender */\n      swap1\n      pop\n        /* \"shoot/ethernaut/contracts/levels/base/Context-06.sol\":656:754  function _msgSender() internal view virtual returns (address) {\r... */\n      swap1\n      jump\t// out\n    tag_40:\n      dataSize(sub_0)\n      dup1\n      dataOffset(sub_0)\n      dup4\n      codecopy\n      add\n      swap1\n      jump\t// out\n    stop\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n\n    sub_0: assembly {\n            /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":92:670  contract Reentrance {... */\n          mstore(0x40, 0x80)\n          callvalue\n          dup1\n          iszero\n          tag_1\n          jumpi\n          0x00\n          dup1\n          revert\n        tag_1:\n          pop\n          dataSize(sub_0)\n          dup1\n          dataOffset(sub_0)\n          0x00\n          codecopy\n          0x00\n          return\n        stop\n\n        sub_0: assembly {\n                /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":92:670  contract Reentrance {... */\n              mstore(0x40, 0x80)\n              jumpi(tag_1, lt(calldatasize, 0x04))\n              shr(0xe0, calldataload(0x00))\n              dup1\n              0x362a95\n              eq\n              tag_3\n              jumpi\n              dup1\n              0x27e235e3\n              eq\n              tag_4\n              jumpi\n              dup1\n              0x2e1a7d4d\n              eq\n              tag_5\n              jumpi\n              dup1\n              0x70a08231\n              eq\n              tag_6\n              jumpi\n              jump(tag_2)\n            tag_1:\n              jumpi(tag_2, calldatasize)\n              stop\n            tag_2:\n              0x00\n              dup1\n              revert\n                /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":194:293  function donate(address _to) public payable {... */\n            tag_3:\n              tag_9\n              0x04\n              dup1\n              calldatasize\n              sub\n              0x20\n              dup2\n              lt\n              iszero\n              tag_10\n              jumpi\n              0x00\n              dup1\n              revert\n            tag_10:\n              dup2\n              add\n              swap1\n              dup1\n              dup1\n              calldataload\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              swap1\n              0x20\n              add\n              swap1\n              swap3\n              swap2\n              swap1\n              pop\n              pop\n              pop\n              tag_11\n              jump\t// in\n            tag_9:\n              stop\n                /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":149:189  mapping(address => uint) public balances */\n            tag_4:\n              callvalue\n              dup1\n              iszero\n              tag_12\n              jumpi\n              0x00\n              dup1\n              revert\n            tag_12:\n              pop\n              tag_13\n              0x04\n              dup1\n              calldatasize\n              sub\n              0x20\n              dup2\n              lt\n              iszero\n              tag_14\n              jumpi\n              0x00\n              dup1\n              revert\n            tag_14:\n              dup2\n              add\n              swap1\n              dup1\n              dup1\n              calldataload\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              swap1\n              0x20\n              add\n              swap1\n              swap3\n              swap2\n              swap1\n              pop\n              pop\n              pop\n              tag_15\n              jump\t// in\n            tag_13:\n              mload(0x40)\n              dup1\n              dup3\n              dup2\n              mstore\n              0x20\n              add\n              swap2\n              pop\n              pop\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              return\n                /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":401:635  function withdraw(uint _amount) public {... */\n            tag_5:\n              callvalue\n              dup1\n              iszero\n              tag_16\n              jumpi\n              0x00\n              dup1\n              revert\n            tag_16:\n              pop\n              tag_17\n              0x04\n              dup1\n              calldatasize\n              sub\n              0x20\n              dup2\n              lt\n              iszero\n              tag_18\n              jumpi\n              0x00\n              dup1\n              revert\n            tag_18:\n              dup2\n              add\n              swap1\n              dup1\n              dup1\n              calldataload\n              swap1\n              0x20\n              add\n              swap1\n              swap3\n              swap2\n              swap1\n              pop\n              pop\n              pop\n              tag_19\n              jump\t// in\n            tag_17:\n              stop\n                /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":297:397  function balanceOf(address _who) public view returns (uint balance) {... */\n            tag_6:\n              callvalue\n              dup1\n              iszero\n              tag_20\n              jumpi\n              0x00\n              dup1\n              revert\n            tag_20:\n              pop\n              tag_21\n              0x04\n              dup1\n              calldatasize\n              sub\n              0x20\n              dup2\n              lt\n              iszero\n              tag_22\n              jumpi\n              0x00\n              dup1\n              revert\n            tag_22:\n              dup2\n              add\n              swap1\n              dup1\n              dup1\n              calldataload\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              swap1\n              0x20\n              add\n              swap1\n              swap3\n              swap2\n              swap1\n              pop\n              pop\n              pop\n              tag_23\n              jump\t// in\n            tag_21:\n              mload(0x40)\n              dup1\n              dup3\n              dup2\n              mstore\n              0x20\n              add\n              swap2\n              pop\n              pop\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              return\n                /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":194:293  function donate(address _to) public payable {... */\n            tag_11:\n                /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":260:288  balances[_to].add(msg.value) */\n              tag_25\n                /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":278:287  msg.value */\n              callvalue\n                /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":260:268  balances */\n              0x00\n                /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":260:273  balances[_to] */\n              dup1\n                /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":269:272  _to */\n              dup5\n                /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":260:273  balances[_to] */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              dup2\n              mstore\n              0x20\n              add\n              swap1\n              dup2\n              mstore\n              0x20\n              add\n              0x00\n              keccak256\n              sload\n                /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":260:277  balances[_to].add */\n              tag_26\n              swap1\n                /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":260:288  balances[_to].add(msg.value) */\n              swap2\n              swap1\n              0xffffffff\n              and\n              jump\t// in\n            tag_25:\n                /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":244:252  balances */\n              0x00\n                /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":244:257  balances[_to] */\n              dup1\n                /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":253:256  _to */\n              dup4\n                /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":244:257  balances[_to] */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              dup2\n              mstore\n              0x20\n              add\n              swap1\n              dup2\n              mstore\n              0x20\n              add\n              0x00\n              keccak256\n                /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":244:288  balances[_to] = balances[_to].add(msg.value) */\n              dup2\n              swap1\n              sstore\n              pop\n                /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":194:293  function donate(address _to) public payable {... */\n              pop\n              jump\t// out\n                /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":149:189  mapping(address => uint) public balances */\n            tag_15:\n              mstore(0x20, 0x00)\n              dup1\n              0x00\n              mstore\n              keccak256(0x00, 0x40)\n              0x00\n              swap2\n              pop\n              swap1\n              pop\n              sload\n              dup2\n              jump\t// out\n                /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":401:635  function withdraw(uint _amount) public {... */\n            tag_19:\n                /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":473:480  _amount */\n              dup1\n                /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":449:457  balances */\n              0x00\n                /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":449:469  balances[msg.sender] */\n              dup1\n                /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":458:468  msg.sender */\n              caller\n                /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":449:469  balances[msg.sender] */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              dup2\n              mstore\n              0x20\n              add\n              swap1\n              dup2\n              mstore\n              0x20\n              add\n              0x00\n              keccak256\n              sload\n                /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":449:480  balances[msg.sender] >= _amount */\n              lt\n                /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":446:631  if(balances[msg.sender] >= _amount) {... */\n              tag_28\n              jumpi\n                /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":491:502  bool result */\n              0x00\n                /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":507:517  msg.sender */\n              caller\n                /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":507:522  msg.sender.call */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n                /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":529:536  _amount */\n              dup3\n                /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":507:541  msg.sender.call{value:_amount}(\"\") */\n              mload(0x40)\n              dup1\n              0x00\n              add\n              swap1\n              pop\n              0x00\n              mload(0x40)\n              dup1\n              dup4\n              sub\n              dup2\n              dup6\n              dup8\n              gas\n              call\n              swap3\n              pop\n              pop\n              pop\n              returndatasize\n              dup1\n              0x00\n              dup2\n              eq\n              tag_31\n              jumpi\n              mload(0x40)\n              swap2\n              pop\n              and(add(returndatasize, 0x3f), not(0x1f))\n              dup3\n              add\n              0x40\n              mstore\n              returndatasize\n              dup3\n              mstore\n              returndatasize\n              0x00\n              0x20\n              dup5\n              add\n              returndatacopy\n              jump(tag_30)\n            tag_31:\n              0x60\n              swap2\n              pop\n            tag_30:\n              pop\n                /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":490:541  (bool result,) = msg.sender.call{value:_amount}(\"\") */\n              pop\n              swap1\n              pop\n                /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":617:624  _amount */\n              dup2\n                /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":593:601  balances */\n              0x00\n                /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":593:613  balances[msg.sender] */\n              dup1\n                /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":602:612  msg.sender */\n              caller\n                /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":593:613  balances[msg.sender] */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              dup2\n              mstore\n              0x20\n              add\n              swap1\n              dup2\n              mstore\n              0x20\n              add\n              0x00\n              keccak256\n              0x00\n                /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":593:624  balances[msg.sender] -= _amount */\n              dup3\n              dup3\n              sload\n              sub\n              swap3\n              pop\n              pop\n              dup2\n              swap1\n              sstore\n              pop\n                /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":446:631  if(balances[msg.sender] >= _amount) {... */\n              pop\n            tag_28:\n                /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":401:635  function withdraw(uint _amount) public {... */\n              pop\n              jump\t// out\n                /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":297:397  function balanceOf(address _who) public view returns (uint balance) {... */\n            tag_23:\n                /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":351:363  uint balance */\n              0x00\n                /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":378:386  balances */\n              dup1\n                /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":378:392  balances[_who] */\n              0x00\n                /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":387:391  _who */\n              dup4\n                /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":378:392  balances[_who] */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              dup2\n              mstore\n              0x20\n              add\n              swap1\n              dup2\n              mstore\n              0x20\n              add\n              0x00\n              keccak256\n              sload\n                /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":371:392  return balances[_who] */\n              swap1\n              pop\n                /* \"shoot/ethernaut/contracts/levels/Reentrance.sol\":297:397  function balanceOf(address _who) public view returns (uint balance) {... */\n              swap2\n              swap1\n              pop\n              jump\t// out\n                /* \"shoot/ethernaut/contracts/levels/base/SafeMath-06.sol\":161:342  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n            tag_26:\n                /* \"shoot/ethernaut/contracts/levels/base/SafeMath-06.sol\":219:226  uint256 */\n              0x00\n                /* \"shoot/ethernaut/contracts/levels/base/SafeMath-06.sol\":239:248  uint256 c */\n              dup1\n                /* \"shoot/ethernaut/contracts/levels/base/SafeMath-06.sol\":255:256  b */\n              dup3\n                /* \"shoot/ethernaut/contracts/levels/base/SafeMath-06.sol\":251:252  a */\n              dup5\n                /* \"shoot/ethernaut/contracts/levels/base/SafeMath-06.sol\":251:256  a + b */\n              add\n                /* \"shoot/ethernaut/contracts/levels/base/SafeMath-06.sol\":239:256  uint256 c = a + b */\n              swap1\n              pop\n                /* \"shoot/ethernaut/contracts/levels/base/SafeMath-06.sol\":280:281  a */\n              dup4\n                /* \"shoot/ethernaut/contracts/levels/base/SafeMath-06.sol\":275:276  c */\n              dup2\n                /* \"shoot/ethernaut/contracts/levels/base/SafeMath-06.sol\":275:281  c >= a */\n              lt\n              iszero\n                /* \"shoot/ethernaut/contracts/levels/base/SafeMath-06.sol\":267:313  require(c >= a, \"SafeMath: addition overflow\") */\n              tag_35\n              jumpi\n              mload(0x40)\n              0x08c379a000000000000000000000000000000000000000000000000000000000\n              dup2\n              mstore\n              0x04\n              add\n              dup1\n              dup1\n              0x20\n              add\n              dup3\n              dup2\n              sub\n              dup3\n              mstore\n              0x1b\n              dup2\n              mstore\n              0x20\n              add\n              dup1\n              0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n              dup2\n              mstore\n              pop\n              0x20\n              add\n              swap2\n              pop\n              pop\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              revert\n            tag_35:\n                /* \"shoot/ethernaut/contracts/levels/base/SafeMath-06.sol\":333:334  c */\n              dup1\n                /* \"shoot/ethernaut/contracts/levels/base/SafeMath-06.sol\":326:334  return c */\n              swap2\n              pop\n              pop\n                /* \"shoot/ethernaut/contracts/levels/base/SafeMath-06.sol\":161:342  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n              swap3\n              swap2\n              pop\n              pop\n              jump\t// out\n\n            auxdata: 0xa26469706673582212209477be2ad6342312e4d9cf42f3d05f19c34e3ea3d0e4673d6ae687fc5da5554b64736f6c634300060c0033\n        }\n    }\n\n    auxdata: 0xa2646970667358221220c3b5229bf26928c70f7981a97d92295050341aee04873a1e754a4d94913404a364736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405266038d7ea4c6800060015534801561001b57600080fd5b5061003861002d61003d60201b60201c565b61004560201b60201c565b610109565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610a24806101186000396000f3fe6080604052600436106100595760003560e01c8063715018a6146100655780637726f7761461007c5780638da5cb5b146100ea57806390696af91461012b578063d38def5b14610156578063f2fde38b146101dd57610060565b3661006057005b600080fd5b34801561007157600080fd5b5061007a61022e565b005b6100be6004803603602081101561009257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610242565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156100f657600080fd5b506100ff6102e1565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561013757600080fd5b5061014061030a565b6040518082815260200191505060405180910390f35b34801561016257600080fd5b506101c56004803603604081101561017957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610310565b60405180821515815260200191505060405180910390f35b3480156101e957600080fd5b5061022c6004803603602081101561020057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061033a565b005b6102366103d4565b6102406000610485565b565b600060015434101561025357600080fd5b600060405161026190610551565b604051809103906000f08015801561027d573d6000803e3d6000fd5b50905060015447101561028f57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc6001549081150290604051600060405180830381858888f193505050501580156102d7573d6000803e3d6000fd5b5080915050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60015481565b60008083905060008173ffffffffffffffffffffffffffffffffffffffff16311491505092915050565b6103426103d4565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156103c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806109c96026913960400191505060405180910390fd5b6103d181610485565b50565b6103dc610549565b73ffffffffffffffffffffffffffffffffffffffff166103fa6102e1565b73ffffffffffffffffffffffffffffffffffffffff1614610483576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b61046a8061055f8339019056fe608060405234801561001057600080fd5b5061044a806100206000396000f3fe6080604052600436106100425760003560e01c8062362a951461004e57806327e235e3146100925780632e1a7d4d146100f757806370a082311461013257610049565b3661004957005b600080fd5b6100906004803603602081101561006457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610197565b005b34801561009e57600080fd5b506100e1600480360360208110156100b557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061022d565b6040518082815260200191505060405180910390f35b34801561010357600080fd5b506101306004803603602081101561011a57600080fd5b8101908080359060200190929190505050610245565b005b34801561013e57600080fd5b506101816004803603602081101561015557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610344565b6040518082815260200191505060405180910390f35b6101e8346000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461038c90919063ffffffff16565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b60006020528060005260406000206000915090505481565b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054106103415760003373ffffffffffffffffffffffffffffffffffffffff168260405180600001905060006040518083038185875af1925050503d80600081146102ea576040519150601f19603f3d011682016040523d82523d6000602084013e6102ef565b606091505b50509050816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550505b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008082840190508381101561040a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b809150509291505056fea26469706673582212209477be2ad6342312e4d9cf42f3d05f19c34e3ea3d0e4673d6ae687fc5da5554b64736f6c634300060c00334f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a2646970667358221220c3b5229bf26928c70f7981a97d92295050341aee04873a1e754a4d94913404a364736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH7 0x38D7EA4C68000 PUSH1 0x1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38 PUSH2 0x2D PUSH2 0x3D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x45 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x109 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xA24 DUP1 PUSH2 0x118 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x59 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x65 JUMPI DUP1 PUSH4 0x7726F776 EQ PUSH2 0x7C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xEA JUMPI DUP1 PUSH4 0x90696AF9 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0xD38DEF5B EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1DD JUMPI PUSH2 0x60 JUMP JUMPDEST CALLDATASIZE PUSH2 0x60 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7A PUSH2 0x22E JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x242 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFF PUSH2 0x2E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x137 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x140 PUSH2 0x30A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x162 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x310 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x200 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x33A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x236 PUSH2 0x3D4 JUMP JUMPDEST PUSH2 0x240 PUSH1 0x0 PUSH2 0x485 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD CALLVALUE LT ISZERO PUSH2 0x253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x261 SWAP1 PUSH2 0x551 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x27D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP PUSH1 0x1 SLOAD SELFBALANCE LT ISZERO PUSH2 0x28F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x1 SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2D7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE EQ SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x342 PUSH2 0x3D4 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x9C9 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3D1 DUP2 PUSH2 0x485 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x3DC PUSH2 0x549 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3FA PUSH2 0x2E1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x483 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x46A DUP1 PUSH2 0x55F DUP4 CODECOPY ADD SWAP1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44A DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x42 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x362A95 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x92 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x132 JUMPI PUSH2 0x49 JUMP JUMPDEST CALLDATASIZE PUSH2 0x49 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x90 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x197 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x22D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x103 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x130 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x245 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x181 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x155 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x344 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E8 CALLVALUE PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x38C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT PUSH2 0x341 JUMPI PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x0 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2EA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2EF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP2 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x40A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 PUSH24 0xBE2AD6342312E4D9CF42F3D05F19C34E3EA3D0E4673D6AE6 DUP8 0xFC 0x5D 0xA5 SSTORE 0x4B PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373A2646970667358221220C3B5229BF269 0x28 0xC7 0xF PUSH26 0x81A97D92295050341AEE04873A1E754A4D94913404A364736F6C PUSH4 0x4300060C STOP CALLER ",
							"sourceMap": "116:639:1:-:0;;;182:11;157:36;;116:639;;;;;;;;;;967:32:4;986:12;:10;;;:12;;:::i;:::-;967:18;;;:32;;:::i;:::-;116:639:1;;656:98:2;709:7;736:10;729:17;;656:98;:::o;2513:191:4:-;2587:16;2606:6;;;;;;;;;;;2587:25;;2632:8;2623:6;;:17;;;;;;;;;;;;;;;;;;2687:8;2656:40;;2677:8;2656:40;;;;;;;;;;;;2513:191;;:::o;116:639:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100595760003560e01c8063715018a6146100655780637726f7761461007c5780638da5cb5b146100ea57806390696af91461012b578063d38def5b14610156578063f2fde38b146101dd57610060565b3661006057005b600080fd5b34801561007157600080fd5b5061007a61022e565b005b6100be6004803603602081101561009257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610242565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156100f657600080fd5b506100ff6102e1565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561013757600080fd5b5061014061030a565b6040518082815260200191505060405180910390f35b34801561016257600080fd5b506101c56004803603604081101561017957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610310565b60405180821515815260200191505060405180910390f35b3480156101e957600080fd5b5061022c6004803603602081101561020057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061033a565b005b6102366103d4565b6102406000610485565b565b600060015434101561025357600080fd5b600060405161026190610551565b604051809103906000f08015801561027d573d6000803e3d6000fd5b50905060015447101561028f57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc6001549081150290604051600060405180830381858888f193505050501580156102d7573d6000803e3d6000fd5b5080915050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60015481565b60008083905060008173ffffffffffffffffffffffffffffffffffffffff16311491505092915050565b6103426103d4565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156103c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806109c96026913960400191505060405180910390fd5b6103d181610485565b50565b6103dc610549565b73ffffffffffffffffffffffffffffffffffffffff166103fa6102e1565b73ffffffffffffffffffffffffffffffffffffffff1614610483576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b61046a8061055f8339019056fe608060405234801561001057600080fd5b5061044a806100206000396000f3fe6080604052600436106100425760003560e01c8062362a951461004e57806327e235e3146100925780632e1a7d4d146100f757806370a082311461013257610049565b3661004957005b600080fd5b6100906004803603602081101561006457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610197565b005b34801561009e57600080fd5b506100e1600480360360208110156100b557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061022d565b6040518082815260200191505060405180910390f35b34801561010357600080fd5b506101306004803603602081101561011a57600080fd5b8101908080359060200190929190505050610245565b005b34801561013e57600080fd5b506101816004803603602081101561015557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610344565b6040518082815260200191505060405180910390f35b6101e8346000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461038c90919063ffffffff16565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b60006020528060005260406000206000915090505481565b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054106103415760003373ffffffffffffffffffffffffffffffffffffffff168260405180600001905060006040518083038185875af1925050503d80600081146102ea576040519150601f19603f3d011682016040523d82523d6000602084013e6102ef565b606091505b50509050816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550505b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008082840190508381101561040a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b809150509291505056fea26469706673582212209477be2ad6342312e4d9cf42f3d05f19c34e3ea3d0e4673d6ae687fc5da5554b64736f6c634300060c00334f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a2646970667358221220c3b5229bf26928c70f7981a97d92295050341aee04873a1e754a4d94913404a364736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x59 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x65 JUMPI DUP1 PUSH4 0x7726F776 EQ PUSH2 0x7C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xEA JUMPI DUP1 PUSH4 0x90696AF9 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0xD38DEF5B EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1DD JUMPI PUSH2 0x60 JUMP JUMPDEST CALLDATASIZE PUSH2 0x60 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7A PUSH2 0x22E JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x242 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFF PUSH2 0x2E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x137 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x140 PUSH2 0x30A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x162 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x310 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x200 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x33A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x236 PUSH2 0x3D4 JUMP JUMPDEST PUSH2 0x240 PUSH1 0x0 PUSH2 0x485 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD CALLVALUE LT ISZERO PUSH2 0x253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x261 SWAP1 PUSH2 0x551 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x27D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP PUSH1 0x1 SLOAD SELFBALANCE LT ISZERO PUSH2 0x28F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x1 SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2D7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE EQ SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x342 PUSH2 0x3D4 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x9C9 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3D1 DUP2 PUSH2 0x485 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x3DC PUSH2 0x549 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3FA PUSH2 0x2E1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x483 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x46A DUP1 PUSH2 0x55F DUP4 CODECOPY ADD SWAP1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44A DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x42 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x362A95 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x92 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x132 JUMPI PUSH2 0x49 JUMP JUMPDEST CALLDATASIZE PUSH2 0x49 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x90 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x197 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x22D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x103 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x130 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x245 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x181 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x155 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x344 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E8 CALLVALUE PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x38C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT PUSH2 0x341 JUMPI PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x0 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2EA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2EF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP2 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x40A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 PUSH24 0xBE2AD6342312E4D9CF42F3D05F19C34E3EA3D0E4673D6AE6 DUP8 0xFC 0x5D 0xA5 SSTORE 0x4B PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373A2646970667358221220C3B5229BF269 0x28 0xC7 0xF PUSH26 0x81A97D92295050341AEE04873A1E754A4D94913404A364736F6C PUSH4 0x4300060C STOP CALLER ",
							"sourceMap": "116:639:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1894:103:4;;;;;;;;;;;;;:::i;:::-;;198:307:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1246:87:4;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;157:36:1;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;509:211;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2152:201:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1894:103;1132:13;:11;:13::i;:::-;1959:30:::1;1986:1;1959:18;:30::i;:::-;1894:103::o:0;198:307:1:-;272:7;321:10;;308:9;:23;;300:32;;;;;;338:19;360:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;338:38;;415:10;;390:21;:35;;382:44;;;;;;440:8;432:26;;:38;459:10;;432:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;491:8;476:24;;;198:307;;;:::o;1246:87:4:-;1292:7;1319:6;;;;;;;;;;;1312:13;;1246:87;:::o;157:36:1:-;;;;:::o;509:211::-;604:4;629:19;662:9;629:43;;714:1;693:8;685:25;;;:30;678:37;;;509:211;;;;:::o;2152:201:4:-;1132:13;:11;:13::i;:::-;2261:1:::1;2241:22;;:8;:22;;;;2233:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2317:28;2336:8;2317:18;:28::i;:::-;2152:201:::0;:::o;1411:132::-;1486:12;:10;:12::i;:::-;1475:23;;:7;:5;:7::i;:::-;:23;;;1467:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1411:132::o;2513:191::-;2587:16;2606:6;;;;;;;;;;;2587:25;;2632:8;2623:6;;:17;;;;;;;;;;;;;;;;;;2687:8;2656:40;;2677:8;2656:40;;;;;;;;;;;;2513:191;;:::o;656:98:2:-;709:7;736:10;729:17;;656:98;:::o;-1:-1:-1:-;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "519200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"createInstance(address)": "infinite",
								"insertCoin()": "1049",
								"owner()": "1077",
								"renounceOwnership()": "24376",
								"transferOwnership(address)": "infinite",
								"validateInstance(address,address)": "1138"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 116,
									"end": 755,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 116,
									"end": 755,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 116,
									"end": 755,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 182,
									"end": 193,
									"name": "PUSH",
									"source": 1,
									"value": "38D7EA4C68000"
								},
								{
									"begin": 157,
									"end": 193,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 157,
									"end": 193,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 116,
									"end": 755,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 116,
									"end": 755,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 116,
									"end": 755,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 116,
									"end": 755,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 116,
									"end": 755,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 116,
									"end": 755,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 116,
									"end": 755,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 116,
									"end": 755,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 116,
									"end": 755,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 116,
									"end": 755,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 116,
									"end": 755,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 967,
									"end": 999,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 986,
									"end": 998,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 986,
									"end": 996,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 986,
									"end": 996,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 986,
									"end": 996,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 986,
									"end": 998,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 986,
									"end": 998,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 986,
									"end": 998,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 986,
									"end": 998,
									"name": "tag",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 986,
									"end": 998,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 967,
									"end": 985,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 967,
									"end": 985,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 967,
									"end": 985,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 967,
									"end": 999,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 967,
									"end": 999,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 967,
									"end": 999,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 967,
									"end": 999,
									"name": "tag",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 967,
									"end": 999,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 116,
									"end": 755,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 116,
									"end": 755,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 656,
									"end": 754,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 656,
									"end": 754,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 736,
									"end": 746,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 729,
									"end": 746,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 729,
									"end": 746,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 656,
									"end": 754,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 656,
									"end": 754,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 2513,
									"end": 2704,
									"name": "tag",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 2513,
									"end": 2704,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2587,
									"end": 2603,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2606,
									"end": 2612,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2606,
									"end": 2612,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2606,
									"end": 2612,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2606,
									"end": 2612,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 2606,
									"end": 2612,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2606,
									"end": 2612,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 2606,
									"end": 2612,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 2606,
									"end": 2612,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2606,
									"end": 2612,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 2606,
									"end": 2612,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2606,
									"end": 2612,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2587,
									"end": 2612,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2587,
									"end": 2612,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2632,
									"end": 2640,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2623,
									"end": 2629,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2623,
									"end": 2629,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2623,
									"end": 2640,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 2623,
									"end": 2640,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 2623,
									"end": 2640,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2623,
									"end": 2640,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 2623,
									"end": 2640,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2623,
									"end": 2640,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2623,
									"end": 2640,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 2623,
									"end": 2640,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 2623,
									"end": 2640,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2623,
									"end": 2640,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2623,
									"end": 2640,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2623,
									"end": 2640,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2623,
									"end": 2640,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2623,
									"end": 2640,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 2623,
									"end": 2640,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 2623,
									"end": 2640,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2623,
									"end": 2640,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 2623,
									"end": 2640,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2687,
									"end": 2695,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2656,
									"end": 2696,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2656,
									"end": 2696,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2677,
									"end": 2685,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2656,
									"end": 2696,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2656,
									"end": 2696,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2656,
									"end": 2696,
									"name": "PUSH",
									"source": 4,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2656,
									"end": 2696,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2656,
									"end": 2696,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2656,
									"end": 2696,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2656,
									"end": 2696,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2656,
									"end": 2696,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2656,
									"end": 2696,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2656,
									"end": 2696,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 2656,
									"end": 2696,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2656,
									"end": 2696,
									"name": "LOG3",
									"source": 4
								},
								{
									"begin": 2513,
									"end": 2704,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2513,
									"end": 2704,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2513,
									"end": 2704,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 116,
									"end": 755,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 116,
									"end": 755,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 116,
									"end": 755,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 116,
									"end": 755,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 116,
									"end": 755,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 116,
									"end": 755,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 116,
									"end": 755,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 116,
									"end": 755,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 116,
									"end": 755,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c3b5229bf26928c70f7981a97d92295050341aee04873a1e754a4d94913404a364736f6c634300060c0033",
									".code": [
										{
											"begin": 116,
											"end": 755,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 116,
											"end": 755,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 116,
											"end": 755,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 116,
											"end": 755,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 116,
											"end": 755,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 116,
											"end": 755,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 116,
											"end": 755,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 116,
											"end": 755,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 116,
											"end": 755,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 116,
											"end": 755,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 116,
											"end": 755,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 116,
											"end": 755,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 116,
											"end": 755,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 116,
											"end": 755,
											"name": "PUSH",
											"source": 1,
											"value": "715018A6"
										},
										{
											"begin": 116,
											"end": 755,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 116,
											"end": 755,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 116,
											"end": 755,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 116,
											"end": 755,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 116,
											"end": 755,
											"name": "PUSH",
											"source": 1,
											"value": "7726F776"
										},
										{
											"begin": 116,
											"end": 755,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 116,
											"end": 755,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 116,
											"end": 755,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 116,
											"end": 755,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 116,
											"end": 755,
											"name": "PUSH",
											"source": 1,
											"value": "8DA5CB5B"
										},
										{
											"begin": 116,
											"end": 755,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 116,
											"end": 755,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 116,
											"end": 755,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 116,
											"end": 755,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 116,
											"end": 755,
											"name": "PUSH",
											"source": 1,
											"value": "90696AF9"
										},
										{
											"begin": 116,
											"end": 755,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 116,
											"end": 755,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 116,
											"end": 755,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 116,
											"end": 755,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 116,
											"end": 755,
											"name": "PUSH",
											"source": 1,
											"value": "D38DEF5B"
										},
										{
											"begin": 116,
											"end": 755,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 116,
											"end": 755,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 116,
											"end": 755,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 116,
											"end": 755,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 116,
											"end": 755,
											"name": "PUSH",
											"source": 1,
											"value": "F2FDE38B"
										},
										{
											"begin": 116,
											"end": 755,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 116,
											"end": 755,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 116,
											"end": 755,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 116,
											"end": 755,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 116,
											"end": 755,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 116,
											"end": 755,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 116,
											"end": 755,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 116,
											"end": 755,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 116,
											"end": 755,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 116,
											"end": 755,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 116,
											"end": 755,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 116,
											"end": 755,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 116,
											"end": 755,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 116,
											"end": 755,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 116,
											"end": 755,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 116,
											"end": 755,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 1997,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1894,
											"end": 1997,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 1997,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 1997,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 1997,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1894,
											"end": 1997,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 1997,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1894,
											"end": 1997,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 1997,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 1997,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1894,
											"end": 1997,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 1997,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1894,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 1894,
											"end": 1997,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1894,
											"end": 1997,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1894,
											"end": 1997,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 1997,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 198,
											"end": 505,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 198,
											"end": 505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 198,
											"end": 505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 198,
											"end": 505,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 198,
											"end": 505,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 198,
											"end": 505,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 198,
											"end": 505,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 198,
											"end": 505,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 198,
											"end": 505,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 198,
											"end": 505,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 198,
											"end": 505,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 198,
											"end": 505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 198,
											"end": 505,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 198,
											"end": 505,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 198,
											"end": 505,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 198,
											"end": 505,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 198,
											"end": 505,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 198,
											"end": 505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 198,
											"end": 505,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 198,
											"end": 505,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 198,
											"end": 505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 198,
											"end": 505,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 198,
											"end": 505,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 198,
											"end": 505,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 198,
											"end": 505,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 198,
											"end": 505,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 198,
											"end": 505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 198,
											"end": 505,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 198,
											"end": 505,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 198,
											"end": 505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 198,
											"end": 505,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 198,
											"end": 505,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 198,
											"end": 505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 198,
											"end": 505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 198,
											"end": 505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 198,
											"end": 505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 198,
											"end": 505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 198,
											"end": 505,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 198,
											"end": 505,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 198,
											"end": 505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 198,
											"end": 505,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 198,
											"end": 505,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 198,
											"end": 505,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 198,
											"end": 505,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 198,
											"end": 505,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 198,
											"end": 505,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 198,
											"end": 505,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 198,
											"end": 505,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 198,
											"end": 505,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 198,
											"end": 505,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 198,
											"end": 505,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 198,
											"end": 505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 198,
											"end": 505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 198,
											"end": 505,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 198,
											"end": 505,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 198,
											"end": 505,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 198,
											"end": 505,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 198,
											"end": 505,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 198,
											"end": 505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 198,
											"end": 505,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1333,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1246,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1333,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1333,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1333,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1246,
											"end": 1333,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1333,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1246,
											"end": 1333,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1333,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1333,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1246,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1333,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1246,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1246,
											"end": 1333,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1246,
											"end": 1333,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1246,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1333,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1246,
											"end": 1333,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1333,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1333,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1333,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1246,
											"end": 1333,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1333,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1333,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1333,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1246,
											"end": 1333,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1333,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1333,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1333,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1333,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1246,
											"end": 1333,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1333,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1333,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1333,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1333,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1333,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 157,
											"end": 193,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 157,
											"end": 193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 157,
											"end": 193,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 157,
											"end": 193,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 157,
											"end": 193,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 157,
											"end": 193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 157,
											"end": 193,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 157,
											"end": 193,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 157,
											"end": 193,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 157,
											"end": 193,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 157,
											"end": 193,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 157,
											"end": 193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 157,
											"end": 193,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 157,
											"end": 193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 157,
											"end": 193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 157,
											"end": 193,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 157,
											"end": 193,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 157,
											"end": 193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 157,
											"end": 193,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 157,
											"end": 193,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 157,
											"end": 193,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 157,
											"end": 193,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 157,
											"end": 193,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 157,
											"end": 193,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 157,
											"end": 193,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 157,
											"end": 193,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 157,
											"end": 193,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 157,
											"end": 193,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 157,
											"end": 193,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 157,
											"end": 193,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 157,
											"end": 193,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 157,
											"end": 193,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 157,
											"end": 193,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 157,
											"end": 193,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 157,
											"end": 193,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 157,
											"end": 193,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 509,
											"end": 720,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 509,
											"end": 720,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 509,
											"end": 720,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 509,
											"end": 720,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 509,
											"end": 720,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 509,
											"end": 720,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 509,
											"end": 720,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 509,
											"end": 720,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 509,
											"end": 720,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 509,
											"end": 720,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 509,
											"end": 720,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 509,
											"end": 720,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 509,
											"end": 720,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 509,
											"end": 720,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 509,
											"end": 720,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 509,
											"end": 720,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 509,
											"end": 720,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 509,
											"end": 720,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 509,
											"end": 720,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 509,
											"end": 720,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2152,
											"end": 2353,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 2152,
											"end": 2353,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2152,
											"end": 2353,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2152,
											"end": 2353,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2152,
											"end": 2353,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2152,
											"end": 2353,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 2152,
											"end": 2353,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2152,
											"end": 2353,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2152,
											"end": 2353,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2152,
											"end": 2353,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2152,
											"end": 2353,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 2152,
											"end": 2353,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2152,
											"end": 2353,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2152,
											"end": 2353,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 2152,
											"end": 2353,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2152,
											"end": 2353,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2152,
											"end": 2353,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2152,
											"end": 2353,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2152,
											"end": 2353,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2152,
											"end": 2353,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2152,
											"end": 2353,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2152,
											"end": 2353,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2152,
											"end": 2353,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 2152,
											"end": 2353,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2152,
											"end": 2353,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2152,
											"end": 2353,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2152,
											"end": 2353,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2152,
											"end": 2353,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 2152,
											"end": 2353,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2152,
											"end": 2353,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2152,
											"end": 2353,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2152,
											"end": 2353,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2152,
											"end": 2353,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2152,
											"end": 2353,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2152,
											"end": 2353,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 2152,
											"end": 2353,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2152,
											"end": 2353,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2152,
											"end": 2353,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2152,
											"end": 2353,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2152,
											"end": 2353,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2152,
											"end": 2353,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2152,
											"end": 2353,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2152,
											"end": 2353,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2152,
											"end": 2353,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2152,
											"end": 2353,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2152,
											"end": 2353,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2152,
											"end": 2353,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2152,
											"end": 2353,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 2152,
											"end": 2353,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2152,
											"end": 2353,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 2152,
											"end": 2353,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2152,
											"end": 2353,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 1997,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 1894,
											"end": 1997,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1132,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1132,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1132,
											"end": 1145,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1132,
											"end": 1145,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1132,
											"end": 1145,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1959,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 1986,
											"end": 1987,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1959,
											"end": 1977,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 1959,
											"end": 1989,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1959,
											"end": 1989,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 1959,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 1997,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 198,
											"end": 505,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 198,
											"end": 505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 272,
											"end": 279,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 321,
											"end": 331,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 321,
											"end": 331,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 308,
											"end": 317,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 308,
											"end": 331,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 308,
											"end": 331,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 300,
											"end": 332,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 300,
											"end": 332,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 300,
											"end": 332,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 300,
											"end": 332,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 300,
											"end": 332,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 300,
											"end": 332,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 300,
											"end": 332,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 338,
											"end": 357,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 360,
											"end": 376,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 360,
											"end": 376,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 360,
											"end": 376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 360,
											"end": 376,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 360,
											"end": 376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 360,
											"end": 376,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 360,
											"end": 376,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 360,
											"end": 376,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 360,
											"end": 376,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 360,
											"end": 376,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 360,
											"end": 376,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 360,
											"end": 376,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 360,
											"end": 376,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 360,
											"end": 376,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 360,
											"end": 376,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 360,
											"end": 376,
											"name": "CREATE",
											"source": 1
										},
										{
											"begin": 360,
											"end": 376,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 360,
											"end": 376,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 360,
											"end": 376,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 360,
											"end": 376,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 360,
											"end": 376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 360,
											"end": 376,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 360,
											"end": 376,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 360,
											"end": 376,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 360,
											"end": 376,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 360,
											"end": 376,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 360,
											"end": 376,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 360,
											"end": 376,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 360,
											"end": 376,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 360,
											"end": 376,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 360,
											"end": 376,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 360,
											"end": 376,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 338,
											"end": 376,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 338,
											"end": 376,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 415,
											"end": 425,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 415,
											"end": 425,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 390,
											"end": 411,
											"name": "SELFBALANCE",
											"source": 1
										},
										{
											"begin": 390,
											"end": 425,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 390,
											"end": 425,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 382,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 382,
											"end": 426,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 382,
											"end": 426,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 382,
											"end": 426,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 382,
											"end": 426,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 382,
											"end": 426,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 382,
											"end": 426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 440,
											"end": 448,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 432,
											"end": 458,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 432,
											"end": 458,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 432,
											"end": 470,
											"name": "PUSH",
											"source": 1,
											"value": "8FC"
										},
										{
											"begin": 459,
											"end": 469,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 459,
											"end": 469,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 432,
											"end": 470,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 432,
											"end": 470,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 432,
											"end": 470,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 432,
											"end": 470,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 432,
											"end": 470,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 432,
											"end": 470,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 432,
											"end": 470,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 432,
											"end": 470,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 432,
											"end": 470,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 432,
											"end": 470,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 432,
											"end": 470,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 432,
											"end": 470,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 432,
											"end": 470,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 432,
											"end": 470,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 432,
											"end": 470,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 432,
											"end": 470,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 432,
											"end": 470,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 432,
											"end": 470,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 432,
											"end": 470,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 432,
											"end": 470,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 432,
											"end": 470,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 432,
											"end": 470,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 432,
											"end": 470,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 432,
											"end": 470,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 432,
											"end": 470,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 432,
											"end": 470,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 432,
											"end": 470,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 432,
											"end": 470,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 432,
											"end": 470,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 432,
											"end": 470,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 432,
											"end": 470,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 432,
											"end": 470,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 432,
											"end": 470,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 432,
											"end": 470,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 432,
											"end": 470,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 432,
											"end": 470,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 432,
											"end": 470,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 432,
											"end": 470,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 491,
											"end": 499,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 476,
											"end": 500,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 476,
											"end": 500,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 476,
											"end": 500,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 198,
											"end": 505,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 198,
											"end": 505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 198,
											"end": 505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 198,
											"end": 505,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1246,
											"end": 1333,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1246,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1292,
											"end": 1299,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1319,
											"end": 1325,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1319,
											"end": 1325,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1319,
											"end": 1325,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1319,
											"end": 1325,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1319,
											"end": 1325,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1319,
											"end": 1325,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1319,
											"end": 1325,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1319,
											"end": 1325,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1319,
											"end": 1325,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1319,
											"end": 1325,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1319,
											"end": 1325,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1312,
											"end": 1325,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1312,
											"end": 1325,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1333,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1333,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 157,
											"end": 193,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 157,
											"end": 193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 157,
											"end": 193,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 157,
											"end": 193,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 157,
											"end": 193,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 157,
											"end": 193,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 509,
											"end": 720,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 509,
											"end": 720,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 604,
											"end": 608,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 648,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 662,
											"end": 671,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 629,
											"end": 672,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 629,
											"end": 672,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 714,
											"end": 715,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 693,
											"end": 701,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 685,
											"end": 710,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 685,
											"end": 710,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 685,
											"end": 710,
											"name": "BALANCE",
											"source": 1
										},
										{
											"begin": 685,
											"end": 715,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 678,
											"end": 715,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 678,
											"end": 715,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 678,
											"end": 715,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 720,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2152,
											"end": 2353,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 2152,
											"end": 2353,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1132,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1132,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1132,
											"end": 1145,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1132,
											"end": 1145,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1132,
											"end": 1145,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2262,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2241,
											"end": 2263,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2241,
											"end": 2263,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2241,
											"end": 2249,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2241,
											"end": 2263,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2241,
											"end": 2263,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2241,
											"end": 2263,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2241,
											"end": 2263,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 2233,
											"end": 2306,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2306,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2233,
											"end": 2306,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2306,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2233,
											"end": 2306,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2306,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2306,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2233,
											"end": 2306,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2306,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2306,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2306,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2306,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2306,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2306,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2306,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2306,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2306,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2306,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 2233,
											"end": 2306,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2306,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2306,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2306,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2306,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2306,
											"name": "PUSH data",
											"source": 4,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 2233,
											"end": 2306,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 2233,
											"end": 2306,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2306,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2306,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2233,
											"end": 2306,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2306,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2306,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2306,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2306,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2233,
											"end": 2306,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2306,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2306,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2306,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2306,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2306,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2306,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 2233,
											"end": 2306,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2317,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 2336,
											"end": 2344,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2317,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2317,
											"end": 2345,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2317,
											"end": 2345,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 2317,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2152,
											"end": 2353,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2152,
											"end": 2353,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1411,
											"end": 1543,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1411,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1486,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1486,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1486,
											"end": 1498,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1486,
											"end": 1498,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1486,
											"end": 1498,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1475,
											"end": 1498,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1475,
											"end": 1498,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1475,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1475,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1475,
											"end": 1482,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1475,
											"end": 1482,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1475,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1475,
											"end": 1498,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1475,
											"end": 1498,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1475,
											"end": 1498,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 1467,
											"end": 1535,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1535,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1467,
											"end": 1535,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1535,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1467,
											"end": 1535,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1535,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1535,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1467,
											"end": 1535,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1535,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1535,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1535,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1467,
											"end": 1535,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1535,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1535,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1535,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1535,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1535,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1535,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1467,
											"end": 1535,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1535,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1535,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1467,
											"end": 1535,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1535,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1535,
											"name": "PUSH",
											"source": 4,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1467,
											"end": 1535,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1535,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1535,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1535,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1467,
											"end": 1535,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1535,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1535,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1535,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1535,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1467,
											"end": 1535,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1535,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1535,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1535,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1535,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1535,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1467,
											"end": 1535,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 1467,
											"end": 1535,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1411,
											"end": 1543,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2513,
											"end": 2704,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2513,
											"end": 2704,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2587,
											"end": 2603,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2606,
											"end": 2612,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2606,
											"end": 2612,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2606,
											"end": 2612,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2606,
											"end": 2612,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2606,
											"end": 2612,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2606,
											"end": 2612,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2606,
											"end": 2612,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2606,
											"end": 2612,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2606,
											"end": 2612,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2606,
											"end": 2612,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2606,
											"end": 2612,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2587,
											"end": 2612,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2587,
											"end": 2612,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2632,
											"end": 2640,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2623,
											"end": 2629,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2623,
											"end": 2629,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2623,
											"end": 2640,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2623,
											"end": 2640,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2623,
											"end": 2640,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2623,
											"end": 2640,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2623,
											"end": 2640,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2623,
											"end": 2640,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2623,
											"end": 2640,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2623,
											"end": 2640,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2623,
											"end": 2640,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2623,
											"end": 2640,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2623,
											"end": 2640,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2623,
											"end": 2640,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2623,
											"end": 2640,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2623,
											"end": 2640,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2623,
											"end": 2640,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2623,
											"end": 2640,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2623,
											"end": 2640,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2623,
											"end": 2640,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2687,
											"end": 2695,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2696,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2656,
											"end": 2696,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2685,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2696,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2656,
											"end": 2696,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2696,
											"name": "PUSH",
											"source": 4,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2656,
											"end": 2696,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2656,
											"end": 2696,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2696,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2656,
											"end": 2696,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2696,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2696,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2696,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2696,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2696,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2704,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2704,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2704,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 656,
											"end": 754,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 656,
											"end": 754,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 729,
											"end": 746,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 729,
											"end": 746,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 754,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 656,
											"end": 754,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH #[$]",
											"source": -1,
											"value": "0000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [$]",
											"source": -1,
											"value": "0000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										}
									],
									".data": {
										"0": {
											".code": [
												{
													"begin": 92,
													"end": 670,
													"name": "PUSH",
													"source": 0,
													"value": "80"
												},
												{
													"begin": 92,
													"end": 670,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 92,
													"end": 670,
													"name": "MSTORE",
													"source": 0
												},
												{
													"begin": 92,
													"end": 670,
													"name": "CALLVALUE",
													"source": 0
												},
												{
													"begin": 92,
													"end": 670,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 92,
													"end": 670,
													"name": "ISZERO",
													"source": 0
												},
												{
													"begin": 92,
													"end": 670,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "1"
												},
												{
													"begin": 92,
													"end": 670,
													"name": "JUMPI",
													"source": 0
												},
												{
													"begin": 92,
													"end": 670,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 92,
													"end": 670,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 92,
													"end": 670,
													"name": "REVERT",
													"source": 0
												},
												{
													"begin": 92,
													"end": 670,
													"name": "tag",
													"source": 0,
													"value": "1"
												},
												{
													"begin": 92,
													"end": 670,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 92,
													"end": 670,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 92,
													"end": 670,
													"name": "PUSH #[$]",
													"source": 0,
													"value": "0000000000000000000000000000000000000000000000000000000000000000"
												},
												{
													"begin": 92,
													"end": 670,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 92,
													"end": 670,
													"name": "PUSH [$]",
													"source": 0,
													"value": "0000000000000000000000000000000000000000000000000000000000000000"
												},
												{
													"begin": 92,
													"end": 670,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 92,
													"end": 670,
													"name": "CODECOPY",
													"source": 0
												},
												{
													"begin": 92,
													"end": 670,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 92,
													"end": 670,
													"name": "RETURN",
													"source": 0
												}
											],
											".data": {
												"0": {
													".auxdata": "a26469706673582212209477be2ad6342312e4d9cf42f3d05f19c34e3ea3d0e4673d6ae687fc5da5554b64736f6c634300060c0033",
													".code": [
														{
															"begin": 92,
															"end": 670,
															"name": "PUSH",
															"source": 0,
															"value": "80"
														},
														{
															"begin": 92,
															"end": 670,
															"name": "PUSH",
															"source": 0,
															"value": "40"
														},
														{
															"begin": 92,
															"end": 670,
															"name": "MSTORE",
															"source": 0
														},
														{
															"begin": 92,
															"end": 670,
															"name": "PUSH",
															"source": 0,
															"value": "4"
														},
														{
															"begin": 92,
															"end": 670,
															"name": "CALLDATASIZE",
															"source": 0
														},
														{
															"begin": 92,
															"end": 670,
															"name": "LT",
															"source": 0
														},
														{
															"begin": 92,
															"end": 670,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "1"
														},
														{
															"begin": 92,
															"end": 670,
															"name": "JUMPI",
															"source": 0
														},
														{
															"begin": 92,
															"end": 670,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 92,
															"end": 670,
															"name": "CALLDATALOAD",
															"source": 0
														},
														{
															"begin": 92,
															"end": 670,
															"name": "PUSH",
															"source": 0,
															"value": "E0"
														},
														{
															"begin": 92,
															"end": 670,
															"name": "SHR",
															"source": 0
														},
														{
															"begin": 92,
															"end": 670,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 92,
															"end": 670,
															"name": "PUSH",
															"source": 0,
															"value": "362A95"
														},
														{
															"begin": 92,
															"end": 670,
															"name": "EQ",
															"source": 0
														},
														{
															"begin": 92,
															"end": 670,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "3"
														},
														{
															"begin": 92,
															"end": 670,
															"name": "JUMPI",
															"source": 0
														},
														{
															"begin": 92,
															"end": 670,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 92,
															"end": 670,
															"name": "PUSH",
															"source": 0,
															"value": "27E235E3"
														},
														{
															"begin": 92,
															"end": 670,
															"name": "EQ",
															"source": 0
														},
														{
															"begin": 92,
															"end": 670,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "4"
														},
														{
															"begin": 92,
															"end": 670,
															"name": "JUMPI",
															"source": 0
														},
														{
															"begin": 92,
															"end": 670,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 92,
															"end": 670,
															"name": "PUSH",
															"source": 0,
															"value": "2E1A7D4D"
														},
														{
															"begin": 92,
															"end": 670,
															"name": "EQ",
															"source": 0
														},
														{
															"begin": 92,
															"end": 670,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "5"
														},
														{
															"begin": 92,
															"end": 670,
															"name": "JUMPI",
															"source": 0
														},
														{
															"begin": 92,
															"end": 670,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 92,
															"end": 670,
															"name": "PUSH",
															"source": 0,
															"value": "70A08231"
														},
														{
															"begin": 92,
															"end": 670,
															"name": "EQ",
															"source": 0
														},
														{
															"begin": 92,
															"end": 670,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "6"
														},
														{
															"begin": 92,
															"end": 670,
															"name": "JUMPI",
															"source": 0
														},
														{
															"begin": 92,
															"end": 670,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "2"
														},
														{
															"begin": 92,
															"end": 670,
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 92,
															"end": 670,
															"name": "tag",
															"source": 0,
															"value": "1"
														},
														{
															"begin": 92,
															"end": 670,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 92,
															"end": 670,
															"name": "CALLDATASIZE",
															"source": 0
														},
														{
															"begin": 92,
															"end": 670,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "2"
														},
														{
															"begin": 92,
															"end": 670,
															"name": "JUMPI",
															"source": 0
														},
														{
															"begin": 92,
															"end": 670,
															"name": "STOP",
															"source": 0
														},
														{
															"begin": 92,
															"end": 670,
															"name": "tag",
															"source": 0,
															"value": "2"
														},
														{
															"begin": 92,
															"end": 670,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 92,
															"end": 670,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 92,
															"end": 670,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 92,
															"end": 670,
															"name": "REVERT",
															"source": 0
														},
														{
															"begin": 194,
															"end": 293,
															"name": "tag",
															"source": 0,
															"value": "3"
														},
														{
															"begin": 194,
															"end": 293,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 194,
															"end": 293,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "9"
														},
														{
															"begin": 194,
															"end": 293,
															"name": "PUSH",
															"source": 0,
															"value": "4"
														},
														{
															"begin": 194,
															"end": 293,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 194,
															"end": 293,
															"name": "CALLDATASIZE",
															"source": 0
														},
														{
															"begin": 194,
															"end": 293,
															"name": "SUB",
															"source": 0
														},
														{
															"begin": 194,
															"end": 293,
															"name": "PUSH",
															"source": 0,
															"value": "20"
														},
														{
															"begin": 194,
															"end": 293,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 194,
															"end": 293,
															"name": "LT",
															"source": 0
														},
														{
															"begin": 194,
															"end": 293,
															"name": "ISZERO",
															"source": 0
														},
														{
															"begin": 194,
															"end": 293,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "10"
														},
														{
															"begin": 194,
															"end": 293,
															"name": "JUMPI",
															"source": 0
														},
														{
															"begin": 194,
															"end": 293,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 194,
															"end": 293,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 194,
															"end": 293,
															"name": "REVERT",
															"source": 0
														},
														{
															"begin": 194,
															"end": 293,
															"name": "tag",
															"source": 0,
															"value": "10"
														},
														{
															"begin": 194,
															"end": 293,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 194,
															"end": 293,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 194,
															"end": 293,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 194,
															"end": 293,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 194,
															"end": 293,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 194,
															"end": 293,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 194,
															"end": 293,
															"name": "CALLDATALOAD",
															"source": 0
														},
														{
															"begin": 194,
															"end": 293,
															"name": "PUSH",
															"source": 0,
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 194,
															"end": 293,
															"name": "AND",
															"source": 0
														},
														{
															"begin": 194,
															"end": 293,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 194,
															"end": 293,
															"name": "PUSH",
															"source": 0,
															"value": "20"
														},
														{
															"begin": 194,
															"end": 293,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 194,
															"end": 293,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 194,
															"end": 293,
															"name": "SWAP3",
															"source": 0
														},
														{
															"begin": 194,
															"end": 293,
															"name": "SWAP2",
															"source": 0
														},
														{
															"begin": 194,
															"end": 293,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 194,
															"end": 293,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 194,
															"end": 293,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 194,
															"end": 293,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 194,
															"end": 293,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "11"
														},
														{
															"begin": 194,
															"end": 293,
															"name": "JUMP",
															"source": 0,
															"value": "[in]"
														},
														{
															"begin": 194,
															"end": 293,
															"name": "tag",
															"source": 0,
															"value": "9"
														},
														{
															"begin": 194,
															"end": 293,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 194,
															"end": 293,
															"name": "STOP",
															"source": 0
														},
														{
															"begin": 149,
															"end": 189,
															"name": "tag",
															"source": 0,
															"value": "4"
														},
														{
															"begin": 149,
															"end": 189,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 149,
															"end": 189,
															"name": "CALLVALUE",
															"source": 0
														},
														{
															"begin": 149,
															"end": 189,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 149,
															"end": 189,
															"name": "ISZERO",
															"source": 0
														},
														{
															"begin": 149,
															"end": 189,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "12"
														},
														{
															"begin": 149,
															"end": 189,
															"name": "JUMPI",
															"source": 0
														},
														{
															"begin": 149,
															"end": 189,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 149,
															"end": 189,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 149,
															"end": 189,
															"name": "REVERT",
															"source": 0
														},
														{
															"begin": 149,
															"end": 189,
															"name": "tag",
															"source": 0,
															"value": "12"
														},
														{
															"begin": 149,
															"end": 189,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 149,
															"end": 189,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 149,
															"end": 189,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "13"
														},
														{
															"begin": 149,
															"end": 189,
															"name": "PUSH",
															"source": 0,
															"value": "4"
														},
														{
															"begin": 149,
															"end": 189,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 149,
															"end": 189,
															"name": "CALLDATASIZE",
															"source": 0
														},
														{
															"begin": 149,
															"end": 189,
															"name": "SUB",
															"source": 0
														},
														{
															"begin": 149,
															"end": 189,
															"name": "PUSH",
															"source": 0,
															"value": "20"
														},
														{
															"begin": 149,
															"end": 189,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 149,
															"end": 189,
															"name": "LT",
															"source": 0
														},
														{
															"begin": 149,
															"end": 189,
															"name": "ISZERO",
															"source": 0
														},
														{
															"begin": 149,
															"end": 189,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "14"
														},
														{
															"begin": 149,
															"end": 189,
															"name": "JUMPI",
															"source": 0
														},
														{
															"begin": 149,
															"end": 189,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 149,
															"end": 189,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 149,
															"end": 189,
															"name": "REVERT",
															"source": 0
														},
														{
															"begin": 149,
															"end": 189,
															"name": "tag",
															"source": 0,
															"value": "14"
														},
														{
															"begin": 149,
															"end": 189,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 149,
															"end": 189,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 149,
															"end": 189,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 149,
															"end": 189,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 149,
															"end": 189,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 149,
															"end": 189,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 149,
															"end": 189,
															"name": "CALLDATALOAD",
															"source": 0
														},
														{
															"begin": 149,
															"end": 189,
															"name": "PUSH",
															"source": 0,
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 149,
															"end": 189,
															"name": "AND",
															"source": 0
														},
														{
															"begin": 149,
															"end": 189,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 149,
															"end": 189,
															"name": "PUSH",
															"source": 0,
															"value": "20"
														},
														{
															"begin": 149,
															"end": 189,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 149,
															"end": 189,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 149,
															"end": 189,
															"name": "SWAP3",
															"source": 0
														},
														{
															"begin": 149,
															"end": 189,
															"name": "SWAP2",
															"source": 0
														},
														{
															"begin": 149,
															"end": 189,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 149,
															"end": 189,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 149,
															"end": 189,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 149,
															"end": 189,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 149,
															"end": 189,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "15"
														},
														{
															"begin": 149,
															"end": 189,
															"name": "JUMP",
															"source": 0,
															"value": "[in]"
														},
														{
															"begin": 149,
															"end": 189,
															"name": "tag",
															"source": 0,
															"value": "13"
														},
														{
															"begin": 149,
															"end": 189,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 149,
															"end": 189,
															"name": "PUSH",
															"source": 0,
															"value": "40"
														},
														{
															"begin": 149,
															"end": 189,
															"name": "MLOAD",
															"source": 0
														},
														{
															"begin": 149,
															"end": 189,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 149,
															"end": 189,
															"name": "DUP3",
															"source": 0
														},
														{
															"begin": 149,
															"end": 189,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 149,
															"end": 189,
															"name": "MSTORE",
															"source": 0
														},
														{
															"begin": 149,
															"end": 189,
															"name": "PUSH",
															"source": 0,
															"value": "20"
														},
														{
															"begin": 149,
															"end": 189,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 149,
															"end": 189,
															"name": "SWAP2",
															"source": 0
														},
														{
															"begin": 149,
															"end": 189,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 149,
															"end": 189,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 149,
															"end": 189,
															"name": "PUSH",
															"source": 0,
															"value": "40"
														},
														{
															"begin": 149,
															"end": 189,
															"name": "MLOAD",
															"source": 0
														},
														{
															"begin": 149,
															"end": 189,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 149,
															"end": 189,
															"name": "SWAP2",
															"source": 0
														},
														{
															"begin": 149,
															"end": 189,
															"name": "SUB",
															"source": 0
														},
														{
															"begin": 149,
															"end": 189,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 149,
															"end": 189,
															"name": "RETURN",
															"source": 0
														},
														{
															"begin": 401,
															"end": 635,
															"name": "tag",
															"source": 0,
															"value": "5"
														},
														{
															"begin": 401,
															"end": 635,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 401,
															"end": 635,
															"name": "CALLVALUE",
															"source": 0
														},
														{
															"begin": 401,
															"end": 635,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 401,
															"end": 635,
															"name": "ISZERO",
															"source": 0
														},
														{
															"begin": 401,
															"end": 635,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "16"
														},
														{
															"begin": 401,
															"end": 635,
															"name": "JUMPI",
															"source": 0
														},
														{
															"begin": 401,
															"end": 635,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 401,
															"end": 635,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 401,
															"end": 635,
															"name": "REVERT",
															"source": 0
														},
														{
															"begin": 401,
															"end": 635,
															"name": "tag",
															"source": 0,
															"value": "16"
														},
														{
															"begin": 401,
															"end": 635,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 401,
															"end": 635,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 401,
															"end": 635,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "17"
														},
														{
															"begin": 401,
															"end": 635,
															"name": "PUSH",
															"source": 0,
															"value": "4"
														},
														{
															"begin": 401,
															"end": 635,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 401,
															"end": 635,
															"name": "CALLDATASIZE",
															"source": 0
														},
														{
															"begin": 401,
															"end": 635,
															"name": "SUB",
															"source": 0
														},
														{
															"begin": 401,
															"end": 635,
															"name": "PUSH",
															"source": 0,
															"value": "20"
														},
														{
															"begin": 401,
															"end": 635,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 401,
															"end": 635,
															"name": "LT",
															"source": 0
														},
														{
															"begin": 401,
															"end": 635,
															"name": "ISZERO",
															"source": 0
														},
														{
															"begin": 401,
															"end": 635,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "18"
														},
														{
															"begin": 401,
															"end": 635,
															"name": "JUMPI",
															"source": 0
														},
														{
															"begin": 401,
															"end": 635,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 401,
															"end": 635,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 401,
															"end": 635,
															"name": "REVERT",
															"source": 0
														},
														{
															"begin": 401,
															"end": 635,
															"name": "tag",
															"source": 0,
															"value": "18"
														},
														{
															"begin": 401,
															"end": 635,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 401,
															"end": 635,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 401,
															"end": 635,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 401,
															"end": 635,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 401,
															"end": 635,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 401,
															"end": 635,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 401,
															"end": 635,
															"name": "CALLDATALOAD",
															"source": 0
														},
														{
															"begin": 401,
															"end": 635,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 401,
															"end": 635,
															"name": "PUSH",
															"source": 0,
															"value": "20"
														},
														{
															"begin": 401,
															"end": 635,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 401,
															"end": 635,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 401,
															"end": 635,
															"name": "SWAP3",
															"source": 0
														},
														{
															"begin": 401,
															"end": 635,
															"name": "SWAP2",
															"source": 0
														},
														{
															"begin": 401,
															"end": 635,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 401,
															"end": 635,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 401,
															"end": 635,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 401,
															"end": 635,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 401,
															"end": 635,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "19"
														},
														{
															"begin": 401,
															"end": 635,
															"name": "JUMP",
															"source": 0,
															"value": "[in]"
														},
														{
															"begin": 401,
															"end": 635,
															"name": "tag",
															"source": 0,
															"value": "17"
														},
														{
															"begin": 401,
															"end": 635,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 401,
															"end": 635,
															"name": "STOP",
															"source": 0
														},
														{
															"begin": 297,
															"end": 397,
															"name": "tag",
															"source": 0,
															"value": "6"
														},
														{
															"begin": 297,
															"end": 397,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 297,
															"end": 397,
															"name": "CALLVALUE",
															"source": 0
														},
														{
															"begin": 297,
															"end": 397,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 297,
															"end": 397,
															"name": "ISZERO",
															"source": 0
														},
														{
															"begin": 297,
															"end": 397,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "20"
														},
														{
															"begin": 297,
															"end": 397,
															"name": "JUMPI",
															"source": 0
														},
														{
															"begin": 297,
															"end": 397,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 297,
															"end": 397,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 297,
															"end": 397,
															"name": "REVERT",
															"source": 0
														},
														{
															"begin": 297,
															"end": 397,
															"name": "tag",
															"source": 0,
															"value": "20"
														},
														{
															"begin": 297,
															"end": 397,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 297,
															"end": 397,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 297,
															"end": 397,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "21"
														},
														{
															"begin": 297,
															"end": 397,
															"name": "PUSH",
															"source": 0,
															"value": "4"
														},
														{
															"begin": 297,
															"end": 397,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 297,
															"end": 397,
															"name": "CALLDATASIZE",
															"source": 0
														},
														{
															"begin": 297,
															"end": 397,
															"name": "SUB",
															"source": 0
														},
														{
															"begin": 297,
															"end": 397,
															"name": "PUSH",
															"source": 0,
															"value": "20"
														},
														{
															"begin": 297,
															"end": 397,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 297,
															"end": 397,
															"name": "LT",
															"source": 0
														},
														{
															"begin": 297,
															"end": 397,
															"name": "ISZERO",
															"source": 0
														},
														{
															"begin": 297,
															"end": 397,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "22"
														},
														{
															"begin": 297,
															"end": 397,
															"name": "JUMPI",
															"source": 0
														},
														{
															"begin": 297,
															"end": 397,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 297,
															"end": 397,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 297,
															"end": 397,
															"name": "REVERT",
															"source": 0
														},
														{
															"begin": 297,
															"end": 397,
															"name": "tag",
															"source": 0,
															"value": "22"
														},
														{
															"begin": 297,
															"end": 397,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 297,
															"end": 397,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 297,
															"end": 397,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 297,
															"end": 397,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 297,
															"end": 397,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 297,
															"end": 397,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 297,
															"end": 397,
															"name": "CALLDATALOAD",
															"source": 0
														},
														{
															"begin": 297,
															"end": 397,
															"name": "PUSH",
															"source": 0,
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 297,
															"end": 397,
															"name": "AND",
															"source": 0
														},
														{
															"begin": 297,
															"end": 397,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 297,
															"end": 397,
															"name": "PUSH",
															"source": 0,
															"value": "20"
														},
														{
															"begin": 297,
															"end": 397,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 297,
															"end": 397,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 297,
															"end": 397,
															"name": "SWAP3",
															"source": 0
														},
														{
															"begin": 297,
															"end": 397,
															"name": "SWAP2",
															"source": 0
														},
														{
															"begin": 297,
															"end": 397,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 297,
															"end": 397,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 297,
															"end": 397,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 297,
															"end": 397,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 297,
															"end": 397,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "23"
														},
														{
															"begin": 297,
															"end": 397,
															"name": "JUMP",
															"source": 0,
															"value": "[in]"
														},
														{
															"begin": 297,
															"end": 397,
															"name": "tag",
															"source": 0,
															"value": "21"
														},
														{
															"begin": 297,
															"end": 397,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 297,
															"end": 397,
															"name": "PUSH",
															"source": 0,
															"value": "40"
														},
														{
															"begin": 297,
															"end": 397,
															"name": "MLOAD",
															"source": 0
														},
														{
															"begin": 297,
															"end": 397,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 297,
															"end": 397,
															"name": "DUP3",
															"source": 0
														},
														{
															"begin": 297,
															"end": 397,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 297,
															"end": 397,
															"name": "MSTORE",
															"source": 0
														},
														{
															"begin": 297,
															"end": 397,
															"name": "PUSH",
															"source": 0,
															"value": "20"
														},
														{
															"begin": 297,
															"end": 397,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 297,
															"end": 397,
															"name": "SWAP2",
															"source": 0
														},
														{
															"begin": 297,
															"end": 397,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 297,
															"end": 397,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 297,
															"end": 397,
															"name": "PUSH",
															"source": 0,
															"value": "40"
														},
														{
															"begin": 297,
															"end": 397,
															"name": "MLOAD",
															"source": 0
														},
														{
															"begin": 297,
															"end": 397,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 297,
															"end": 397,
															"name": "SWAP2",
															"source": 0
														},
														{
															"begin": 297,
															"end": 397,
															"name": "SUB",
															"source": 0
														},
														{
															"begin": 297,
															"end": 397,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 297,
															"end": 397,
															"name": "RETURN",
															"source": 0
														},
														{
															"begin": 194,
															"end": 293,
															"name": "tag",
															"source": 0,
															"value": "11"
														},
														{
															"begin": 194,
															"end": 293,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 260,
															"end": 288,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "25"
														},
														{
															"begin": 278,
															"end": 287,
															"name": "CALLVALUE",
															"source": 0
														},
														{
															"begin": 260,
															"end": 268,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 260,
															"end": 273,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 269,
															"end": 272,
															"name": "DUP5",
															"source": 0
														},
														{
															"begin": 260,
															"end": 273,
															"name": "PUSH",
															"source": 0,
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 260,
															"end": 273,
															"name": "AND",
															"source": 0
														},
														{
															"begin": 260,
															"end": 273,
															"name": "PUSH",
															"source": 0,
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 260,
															"end": 273,
															"name": "AND",
															"source": 0
														},
														{
															"begin": 260,
															"end": 273,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 260,
															"end": 273,
															"name": "MSTORE",
															"source": 0
														},
														{
															"begin": 260,
															"end": 273,
															"name": "PUSH",
															"source": 0,
															"value": "20"
														},
														{
															"begin": 260,
															"end": 273,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 260,
															"end": 273,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 260,
															"end": 273,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 260,
															"end": 273,
															"name": "MSTORE",
															"source": 0
														},
														{
															"begin": 260,
															"end": 273,
															"name": "PUSH",
															"source": 0,
															"value": "20"
														},
														{
															"begin": 260,
															"end": 273,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 260,
															"end": 273,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 260,
															"end": 273,
															"name": "KECCAK256",
															"source": 0
														},
														{
															"begin": 260,
															"end": 273,
															"name": "SLOAD",
															"source": 0
														},
														{
															"begin": 260,
															"end": 277,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "26"
														},
														{
															"begin": 260,
															"end": 277,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 260,
															"end": 288,
															"name": "SWAP2",
															"source": 0
														},
														{
															"begin": 260,
															"end": 288,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 260,
															"end": 288,
															"name": "PUSH",
															"source": 0,
															"value": "FFFFFFFF"
														},
														{
															"begin": 260,
															"end": 288,
															"name": "AND",
															"source": 0
														},
														{
															"begin": 260,
															"end": 288,
															"name": "JUMP",
															"source": 0,
															"value": "[in]"
														},
														{
															"begin": 260,
															"end": 288,
															"name": "tag",
															"source": 0,
															"value": "25"
														},
														{
															"begin": 260,
															"end": 288,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 244,
															"end": 252,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 244,
															"end": 257,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 253,
															"end": 256,
															"name": "DUP4",
															"source": 0
														},
														{
															"begin": 244,
															"end": 257,
															"name": "PUSH",
															"source": 0,
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 244,
															"end": 257,
															"name": "AND",
															"source": 0
														},
														{
															"begin": 244,
															"end": 257,
															"name": "PUSH",
															"source": 0,
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 244,
															"end": 257,
															"name": "AND",
															"source": 0
														},
														{
															"begin": 244,
															"end": 257,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 244,
															"end": 257,
															"name": "MSTORE",
															"source": 0
														},
														{
															"begin": 244,
															"end": 257,
															"name": "PUSH",
															"source": 0,
															"value": "20"
														},
														{
															"begin": 244,
															"end": 257,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 244,
															"end": 257,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 244,
															"end": 257,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 244,
															"end": 257,
															"name": "MSTORE",
															"source": 0
														},
														{
															"begin": 244,
															"end": 257,
															"name": "PUSH",
															"source": 0,
															"value": "20"
														},
														{
															"begin": 244,
															"end": 257,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 244,
															"end": 257,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 244,
															"end": 257,
															"name": "KECCAK256",
															"source": 0
														},
														{
															"begin": 244,
															"end": 288,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 244,
															"end": 288,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 244,
															"end": 288,
															"name": "SSTORE",
															"source": 0
														},
														{
															"begin": 244,
															"end": 288,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 194,
															"end": 293,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 194,
															"end": 293,
															"name": "JUMP",
															"source": 0,
															"value": "[out]"
														},
														{
															"begin": 149,
															"end": 189,
															"name": "tag",
															"source": 0,
															"value": "15"
														},
														{
															"begin": 149,
															"end": 189,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 149,
															"end": 189,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 149,
															"end": 189,
															"name": "PUSH",
															"source": 0,
															"value": "20"
														},
														{
															"begin": 149,
															"end": 189,
															"name": "MSTORE",
															"source": 0
														},
														{
															"begin": 149,
															"end": 189,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 149,
															"end": 189,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 149,
															"end": 189,
															"name": "MSTORE",
															"source": 0
														},
														{
															"begin": 149,
															"end": 189,
															"name": "PUSH",
															"source": 0,
															"value": "40"
														},
														{
															"begin": 149,
															"end": 189,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 149,
															"end": 189,
															"name": "KECCAK256",
															"source": 0
														},
														{
															"begin": 149,
															"end": 189,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 149,
															"end": 189,
															"name": "SWAP2",
															"source": 0
														},
														{
															"begin": 149,
															"end": 189,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 149,
															"end": 189,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 149,
															"end": 189,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 149,
															"end": 189,
															"name": "SLOAD",
															"source": 0
														},
														{
															"begin": 149,
															"end": 189,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 149,
															"end": 189,
															"name": "JUMP",
															"source": 0,
															"value": "[out]"
														},
														{
															"begin": 401,
															"end": 635,
															"name": "tag",
															"source": 0,
															"value": "19"
														},
														{
															"begin": 401,
															"end": 635,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 473,
															"end": 480,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 449,
															"end": 457,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 449,
															"end": 469,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 458,
															"end": 468,
															"name": "CALLER",
															"source": 0
														},
														{
															"begin": 449,
															"end": 469,
															"name": "PUSH",
															"source": 0,
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 449,
															"end": 469,
															"name": "AND",
															"source": 0
														},
														{
															"begin": 449,
															"end": 469,
															"name": "PUSH",
															"source": 0,
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 449,
															"end": 469,
															"name": "AND",
															"source": 0
														},
														{
															"begin": 449,
															"end": 469,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 449,
															"end": 469,
															"name": "MSTORE",
															"source": 0
														},
														{
															"begin": 449,
															"end": 469,
															"name": "PUSH",
															"source": 0,
															"value": "20"
														},
														{
															"begin": 449,
															"end": 469,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 449,
															"end": 469,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 449,
															"end": 469,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 449,
															"end": 469,
															"name": "MSTORE",
															"source": 0
														},
														{
															"begin": 449,
															"end": 469,
															"name": "PUSH",
															"source": 0,
															"value": "20"
														},
														{
															"begin": 449,
															"end": 469,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 449,
															"end": 469,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 449,
															"end": 469,
															"name": "KECCAK256",
															"source": 0
														},
														{
															"begin": 449,
															"end": 469,
															"name": "SLOAD",
															"source": 0
														},
														{
															"begin": 449,
															"end": 480,
															"name": "LT",
															"source": 0
														},
														{
															"begin": 446,
															"end": 631,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "28"
														},
														{
															"begin": 446,
															"end": 631,
															"name": "JUMPI",
															"source": 0
														},
														{
															"begin": 491,
															"end": 502,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 507,
															"end": 517,
															"name": "CALLER",
															"source": 0
														},
														{
															"begin": 507,
															"end": 522,
															"name": "PUSH",
															"source": 0,
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 507,
															"end": 522,
															"name": "AND",
															"source": 0
														},
														{
															"begin": 529,
															"end": 536,
															"name": "DUP3",
															"source": 0
														},
														{
															"begin": 507,
															"end": 541,
															"name": "PUSH",
															"source": 0,
															"value": "40"
														},
														{
															"begin": 507,
															"end": 541,
															"name": "MLOAD",
															"source": 0
														},
														{
															"begin": 507,
															"end": 541,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 507,
															"end": 541,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 507,
															"end": 541,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 507,
															"end": 541,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 507,
															"end": 541,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 507,
															"end": 541,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 507,
															"end": 541,
															"name": "PUSH",
															"source": 0,
															"value": "40"
														},
														{
															"begin": 507,
															"end": 541,
															"name": "MLOAD",
															"source": 0
														},
														{
															"begin": 507,
															"end": 541,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 507,
															"end": 541,
															"name": "DUP4",
															"source": 0
														},
														{
															"begin": 507,
															"end": 541,
															"name": "SUB",
															"source": 0
														},
														{
															"begin": 507,
															"end": 541,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 507,
															"end": 541,
															"name": "DUP6",
															"source": 0
														},
														{
															"begin": 507,
															"end": 541,
															"name": "DUP8",
															"source": 0
														},
														{
															"begin": 507,
															"end": 541,
															"name": "GAS",
															"source": 0
														},
														{
															"begin": 507,
															"end": 541,
															"name": "CALL",
															"source": 0
														},
														{
															"begin": 507,
															"end": 541,
															"name": "SWAP3",
															"source": 0
														},
														{
															"begin": 507,
															"end": 541,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 507,
															"end": 541,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 507,
															"end": 541,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 507,
															"end": 541,
															"name": "RETURNDATASIZE",
															"source": 0
														},
														{
															"begin": 507,
															"end": 541,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 507,
															"end": 541,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 507,
															"end": 541,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 507,
															"end": 541,
															"name": "EQ",
															"source": 0
														},
														{
															"begin": 507,
															"end": 541,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "31"
														},
														{
															"begin": 507,
															"end": 541,
															"name": "JUMPI",
															"source": 0
														},
														{
															"begin": 507,
															"end": 541,
															"name": "PUSH",
															"source": 0,
															"value": "40"
														},
														{
															"begin": 507,
															"end": 541,
															"name": "MLOAD",
															"source": 0
														},
														{
															"begin": 507,
															"end": 541,
															"name": "SWAP2",
															"source": 0
														},
														{
															"begin": 507,
															"end": 541,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 507,
															"end": 541,
															"name": "PUSH",
															"source": 0,
															"value": "1F"
														},
														{
															"begin": 507,
															"end": 541,
															"name": "NOT",
															"source": 0
														},
														{
															"begin": 507,
															"end": 541,
															"name": "PUSH",
															"source": 0,
															"value": "3F"
														},
														{
															"begin": 507,
															"end": 541,
															"name": "RETURNDATASIZE",
															"source": 0
														},
														{
															"begin": 507,
															"end": 541,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 507,
															"end": 541,
															"name": "AND",
															"source": 0
														},
														{
															"begin": 507,
															"end": 541,
															"name": "DUP3",
															"source": 0
														},
														{
															"begin": 507,
															"end": 541,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 507,
															"end": 541,
															"name": "PUSH",
															"source": 0,
															"value": "40"
														},
														{
															"begin": 507,
															"end": 541,
															"name": "MSTORE",
															"source": 0
														},
														{
															"begin": 507,
															"end": 541,
															"name": "RETURNDATASIZE",
															"source": 0
														},
														{
															"begin": 507,
															"end": 541,
															"name": "DUP3",
															"source": 0
														},
														{
															"begin": 507,
															"end": 541,
															"name": "MSTORE",
															"source": 0
														},
														{
															"begin": 507,
															"end": 541,
															"name": "RETURNDATASIZE",
															"source": 0
														},
														{
															"begin": 507,
															"end": 541,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 507,
															"end": 541,
															"name": "PUSH",
															"source": 0,
															"value": "20"
														},
														{
															"begin": 507,
															"end": 541,
															"name": "DUP5",
															"source": 0
														},
														{
															"begin": 507,
															"end": 541,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 507,
															"end": 541,
															"name": "RETURNDATACOPY",
															"source": 0
														},
														{
															"begin": 507,
															"end": 541,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "30"
														},
														{
															"begin": 507,
															"end": 541,
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 507,
															"end": 541,
															"name": "tag",
															"source": 0,
															"value": "31"
														},
														{
															"begin": 507,
															"end": 541,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 507,
															"end": 541,
															"name": "PUSH",
															"source": 0,
															"value": "60"
														},
														{
															"begin": 507,
															"end": 541,
															"name": "SWAP2",
															"source": 0
														},
														{
															"begin": 507,
															"end": 541,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 507,
															"end": 541,
															"name": "tag",
															"source": 0,
															"value": "30"
														},
														{
															"begin": 507,
															"end": 541,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 507,
															"end": 541,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 490,
															"end": 541,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 490,
															"end": 541,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 490,
															"end": 541,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 617,
															"end": 624,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 593,
															"end": 601,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 593,
															"end": 613,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 602,
															"end": 612,
															"name": "CALLER",
															"source": 0
														},
														{
															"begin": 593,
															"end": 613,
															"name": "PUSH",
															"source": 0,
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 593,
															"end": 613,
															"name": "AND",
															"source": 0
														},
														{
															"begin": 593,
															"end": 613,
															"name": "PUSH",
															"source": 0,
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 593,
															"end": 613,
															"name": "AND",
															"source": 0
														},
														{
															"begin": 593,
															"end": 613,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 593,
															"end": 613,
															"name": "MSTORE",
															"source": 0
														},
														{
															"begin": 593,
															"end": 613,
															"name": "PUSH",
															"source": 0,
															"value": "20"
														},
														{
															"begin": 593,
															"end": 613,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 593,
															"end": 613,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 593,
															"end": 613,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 593,
															"end": 613,
															"name": "MSTORE",
															"source": 0
														},
														{
															"begin": 593,
															"end": 613,
															"name": "PUSH",
															"source": 0,
															"value": "20"
														},
														{
															"begin": 593,
															"end": 613,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 593,
															"end": 613,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 593,
															"end": 613,
															"name": "KECCAK256",
															"source": 0
														},
														{
															"begin": 593,
															"end": 613,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 593,
															"end": 624,
															"name": "DUP3",
															"source": 0
														},
														{
															"begin": 593,
															"end": 624,
															"name": "DUP3",
															"source": 0
														},
														{
															"begin": 593,
															"end": 624,
															"name": "SLOAD",
															"source": 0
														},
														{
															"begin": 593,
															"end": 624,
															"name": "SUB",
															"source": 0
														},
														{
															"begin": 593,
															"end": 624,
															"name": "SWAP3",
															"source": 0
														},
														{
															"begin": 593,
															"end": 624,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 593,
															"end": 624,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 593,
															"end": 624,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 593,
															"end": 624,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 593,
															"end": 624,
															"name": "SSTORE",
															"source": 0
														},
														{
															"begin": 593,
															"end": 624,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 446,
															"end": 631,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 446,
															"end": 631,
															"name": "tag",
															"source": 0,
															"value": "28"
														},
														{
															"begin": 446,
															"end": 631,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 401,
															"end": 635,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 401,
															"end": 635,
															"name": "JUMP",
															"source": 0,
															"value": "[out]"
														},
														{
															"begin": 297,
															"end": 397,
															"name": "tag",
															"source": 0,
															"value": "23"
														},
														{
															"begin": 297,
															"end": 397,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 351,
															"end": 363,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 378,
															"end": 386,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 378,
															"end": 392,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 387,
															"end": 391,
															"name": "DUP4",
															"source": 0
														},
														{
															"begin": 378,
															"end": 392,
															"name": "PUSH",
															"source": 0,
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 378,
															"end": 392,
															"name": "AND",
															"source": 0
														},
														{
															"begin": 378,
															"end": 392,
															"name": "PUSH",
															"source": 0,
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 378,
															"end": 392,
															"name": "AND",
															"source": 0
														},
														{
															"begin": 378,
															"end": 392,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 378,
															"end": 392,
															"name": "MSTORE",
															"source": 0
														},
														{
															"begin": 378,
															"end": 392,
															"name": "PUSH",
															"source": 0,
															"value": "20"
														},
														{
															"begin": 378,
															"end": 392,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 378,
															"end": 392,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 378,
															"end": 392,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 378,
															"end": 392,
															"name": "MSTORE",
															"source": 0
														},
														{
															"begin": 378,
															"end": 392,
															"name": "PUSH",
															"source": 0,
															"value": "20"
														},
														{
															"begin": 378,
															"end": 392,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 378,
															"end": 392,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 378,
															"end": 392,
															"name": "KECCAK256",
															"source": 0
														},
														{
															"begin": 378,
															"end": 392,
															"name": "SLOAD",
															"source": 0
														},
														{
															"begin": 371,
															"end": 392,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 371,
															"end": 392,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 297,
															"end": 397,
															"name": "SWAP2",
															"source": 0
														},
														{
															"begin": 297,
															"end": 397,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 297,
															"end": 397,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 297,
															"end": 397,
															"name": "JUMP",
															"source": 0,
															"value": "[out]"
														},
														{
															"begin": 161,
															"end": 342,
															"name": "tag",
															"source": 5,
															"value": "26"
														},
														{
															"begin": 161,
															"end": 342,
															"name": "JUMPDEST",
															"source": 5
														},
														{
															"begin": 219,
															"end": 226,
															"name": "PUSH",
															"source": 5,
															"value": "0"
														},
														{
															"begin": 239,
															"end": 248,
															"name": "DUP1",
															"source": 5
														},
														{
															"begin": 255,
															"end": 256,
															"name": "DUP3",
															"source": 5
														},
														{
															"begin": 251,
															"end": 252,
															"name": "DUP5",
															"source": 5
														},
														{
															"begin": 251,
															"end": 256,
															"name": "ADD",
															"source": 5
														},
														{
															"begin": 239,
															"end": 256,
															"name": "SWAP1",
															"source": 5
														},
														{
															"begin": 239,
															"end": 256,
															"name": "POP",
															"source": 5
														},
														{
															"begin": 280,
															"end": 281,
															"name": "DUP4",
															"source": 5
														},
														{
															"begin": 275,
															"end": 276,
															"name": "DUP2",
															"source": 5
														},
														{
															"begin": 275,
															"end": 281,
															"name": "LT",
															"source": 5
														},
														{
															"begin": 275,
															"end": 281,
															"name": "ISZERO",
															"source": 5
														},
														{
															"begin": 267,
															"end": 313,
															"name": "PUSH [tag]",
															"source": 5,
															"value": "35"
														},
														{
															"begin": 267,
															"end": 313,
															"name": "JUMPI",
															"source": 5
														},
														{
															"begin": 267,
															"end": 313,
															"name": "PUSH",
															"source": 5,
															"value": "40"
														},
														{
															"begin": 267,
															"end": 313,
															"name": "MLOAD",
															"source": 5
														},
														{
															"begin": 267,
															"end": 313,
															"name": "PUSH",
															"source": 5,
															"value": "8C379A000000000000000000000000000000000000000000000000000000000"
														},
														{
															"begin": 267,
															"end": 313,
															"name": "DUP2",
															"source": 5
														},
														{
															"begin": 267,
															"end": 313,
															"name": "MSTORE",
															"source": 5
														},
														{
															"begin": 267,
															"end": 313,
															"name": "PUSH",
															"source": 5,
															"value": "4"
														},
														{
															"begin": 267,
															"end": 313,
															"name": "ADD",
															"source": 5
														},
														{
															"begin": 267,
															"end": 313,
															"name": "DUP1",
															"source": 5
														},
														{
															"begin": 267,
															"end": 313,
															"name": "DUP1",
															"source": 5
														},
														{
															"begin": 267,
															"end": 313,
															"name": "PUSH",
															"source": 5,
															"value": "20"
														},
														{
															"begin": 267,
															"end": 313,
															"name": "ADD",
															"source": 5
														},
														{
															"begin": 267,
															"end": 313,
															"name": "DUP3",
															"source": 5
														},
														{
															"begin": 267,
															"end": 313,
															"name": "DUP2",
															"source": 5
														},
														{
															"begin": 267,
															"end": 313,
															"name": "SUB",
															"source": 5
														},
														{
															"begin": 267,
															"end": 313,
															"name": "DUP3",
															"source": 5
														},
														{
															"begin": 267,
															"end": 313,
															"name": "MSTORE",
															"source": 5
														},
														{
															"begin": 267,
															"end": 313,
															"name": "PUSH",
															"source": 5,
															"value": "1B"
														},
														{
															"begin": 267,
															"end": 313,
															"name": "DUP2",
															"source": 5
														},
														{
															"begin": 267,
															"end": 313,
															"name": "MSTORE",
															"source": 5
														},
														{
															"begin": 267,
															"end": 313,
															"name": "PUSH",
															"source": 5,
															"value": "20"
														},
														{
															"begin": 267,
															"end": 313,
															"name": "ADD",
															"source": 5
														},
														{
															"begin": 267,
															"end": 313,
															"name": "DUP1",
															"source": 5
														},
														{
															"begin": 267,
															"end": 313,
															"name": "PUSH",
															"source": 5,
															"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
														},
														{
															"begin": 267,
															"end": 313,
															"name": "DUP2",
															"source": 5
														},
														{
															"begin": 267,
															"end": 313,
															"name": "MSTORE",
															"source": 5
														},
														{
															"begin": 267,
															"end": 313,
															"name": "POP",
															"source": 5
														},
														{
															"begin": 267,
															"end": 313,
															"name": "PUSH",
															"source": 5,
															"value": "20"
														},
														{
															"begin": 267,
															"end": 313,
															"name": "ADD",
															"source": 5
														},
														{
															"begin": 267,
															"end": 313,
															"name": "SWAP2",
															"source": 5
														},
														{
															"begin": 267,
															"end": 313,
															"name": "POP",
															"source": 5
														},
														{
															"begin": 267,
															"end": 313,
															"name": "POP",
															"source": 5
														},
														{
															"begin": 267,
															"end": 313,
															"name": "PUSH",
															"source": 5,
															"value": "40"
														},
														{
															"begin": 267,
															"end": 313,
															"name": "MLOAD",
															"source": 5
														},
														{
															"begin": 267,
															"end": 313,
															"name": "DUP1",
															"source": 5
														},
														{
															"begin": 267,
															"end": 313,
															"name": "SWAP2",
															"source": 5
														},
														{
															"begin": 267,
															"end": 313,
															"name": "SUB",
															"source": 5
														},
														{
															"begin": 267,
															"end": 313,
															"name": "SWAP1",
															"source": 5
														},
														{
															"begin": 267,
															"end": 313,
															"name": "REVERT",
															"source": 5
														},
														{
															"begin": 267,
															"end": 313,
															"name": "tag",
															"source": 5,
															"value": "35"
														},
														{
															"begin": 267,
															"end": 313,
															"name": "JUMPDEST",
															"source": 5
														},
														{
															"begin": 333,
															"end": 334,
															"name": "DUP1",
															"source": 5
														},
														{
															"begin": 326,
															"end": 334,
															"name": "SWAP2",
															"source": 5
														},
														{
															"begin": 326,
															"end": 334,
															"name": "POP",
															"source": 5
														},
														{
															"begin": 326,
															"end": 334,
															"name": "POP",
															"source": 5
														},
														{
															"begin": 161,
															"end": 342,
															"name": "SWAP3",
															"source": 5
														},
														{
															"begin": 161,
															"end": 342,
															"name": "SWAP2",
															"source": 5
														},
														{
															"begin": 161,
															"end": 342,
															"name": "POP",
															"source": 5
														},
														{
															"begin": 161,
															"end": 342,
															"name": "POP",
															"source": 5
														},
														{
															"begin": 161,
															"end": 342,
															"name": "JUMP",
															"source": 5,
															"value": "[out]"
														}
													]
												}
											}
										},
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373"
									}
								}
							}
						},
						"methodIdentifiers": {
							"createInstance(address)": "7726f776",
							"insertCoin()": "90696af9",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"validateInstance(address,address)": "d38def5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_player\",\"type\":\"address\"}],\"name\":\"createInstance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"insertCoin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_instance\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_player\",\"type\":\"address\"}],\"name\":\"validateInstance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"shoot/ethernaut/contracts/levels/ReentranceFactory.sol\":\"ReentranceFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"shoot/ethernaut/contracts/levels/Reentrance.sol\":{\"keccak256\":\"0xb3190987f66b9a65441da7cceb8ef286e41bf0a6ba8104b0d61bc19f6122ee0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7a6df971c52ae21d2fd3897d2d62087d749ec1797c2f713c2b261826d308679\",\"dweb:/ipfs/QmVhbUsazohYEPxeFkkDCRsytwkEhKp6u3WZhH4ojrbRgJ\"]},\"shoot/ethernaut/contracts/levels/ReentranceFactory.sol\":{\"keccak256\":\"0x3da127e89ed1095269bfe11fcf8a2627a12f8a896492ae4dc729b8760382cc82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://74734e514ace00abec28e7a4665f78dceeb2302b34d222568615cc02749d7964\",\"dweb:/ipfs/QmaFChtLtDKgQ1MM7Aovs2RoYB6BnZhrKauhUau9fMp8VX\"]},\"shoot/ethernaut/contracts/levels/base/Context-06.sol\":{\"keccak256\":\"0x8ac237c12cc7ab06bbd433838ea1d5c3c47e376fa81a68900eb9749c1ea8c6b7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c8c274942a569fe22e47bb68c9ae92f3431938f6b1cfc65432669b780f5d892\",\"dweb:/ipfs/QmabyU2SyatPcbSzvZCUfpWGSgDT7CWHEzeoUu74ZBTKc1\"]},\"shoot/ethernaut/contracts/levels/base/Level-06.sol\":{\"keccak256\":\"0x050fa542096be1fc0e1fcd0fa1d6b02bbee46133cb698dc0be60df9956c587d1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8055d8b6a652a64b53c1491ed7167efb46d06da91d04f4b910ef1f8eaa86156d\",\"dweb:/ipfs/QmQeE6UzpuZeFzXqu2gnWxHgFKEG3FP3qq2o1Pysqxgci8\"]},\"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":{\"keccak256\":\"0x4fc12b2f7f94df92f932d8bc95c9eb0627607b70585a8e5f12fdefdb3a870f3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f97e8fdf85ce1ae167dd35597d58cae83f261f901c3465d786e46e1247a5834\",\"dweb:/ipfs/QmVSonqgm8ZJg4DNmGwAwLxMm62DZ9NtheKQjKSYaMQtus\"]},\"shoot/ethernaut/contracts/levels/base/SafeMath-06.sol\":{\"keccak256\":\"0x98736a085f562e1232a6975c12f784ba08bddc6682aaf57f795155989d44539d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c720ad8c836152a5b673eadd824caf4c214865042006bb8972ec789dcb89dc3\",\"dweb:/ipfs/QmRdfSNjkgoGqQx7QkyrJ779vVkjqrMY18b9Y9Eh1RD7h4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 220,
								"contract": "shoot/ethernaut/contracts/levels/ReentranceFactory.sol:ReentranceFactory",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 89,
								"contract": "shoot/ethernaut/contracts/levels/ReentranceFactory.sol:ReentranceFactory",
								"label": "insertCoin",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"shoot/ethernaut/contracts/levels/base/Context-06.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"shoot/ethernaut/contracts/levels/base/Context-06.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"shoot/ethernaut/contracts/levels/base/Context-06.sol\":{\"keccak256\":\"0x8ac237c12cc7ab06bbd433838ea1d5c3c47e376fa81a68900eb9749c1ea8c6b7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c8c274942a569fe22e47bb68c9ae92f3431938f6b1cfc65432669b780f5d892\",\"dweb:/ipfs/QmabyU2SyatPcbSzvZCUfpWGSgDT7CWHEzeoUu74ZBTKc1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"shoot/ethernaut/contracts/levels/base/Level-06.sol": {
				"Level": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_player",
									"type": "address"
								}
							],
							"name": "createInstance",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_instance",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_player",
									"type": "address"
								}
							],
							"name": "validateInstance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"createInstance(address)": "7726f776",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"validateInstance(address,address)": "d38def5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_player\",\"type\":\"address\"}],\"name\":\"createInstance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_instance\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_player\",\"type\":\"address\"}],\"name\":\"validateInstance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"shoot/ethernaut/contracts/levels/base/Level-06.sol\":\"Level\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"shoot/ethernaut/contracts/levels/base/Context-06.sol\":{\"keccak256\":\"0x8ac237c12cc7ab06bbd433838ea1d5c3c47e376fa81a68900eb9749c1ea8c6b7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c8c274942a569fe22e47bb68c9ae92f3431938f6b1cfc65432669b780f5d892\",\"dweb:/ipfs/QmabyU2SyatPcbSzvZCUfpWGSgDT7CWHEzeoUu74ZBTKc1\"]},\"shoot/ethernaut/contracts/levels/base/Level-06.sol\":{\"keccak256\":\"0x050fa542096be1fc0e1fcd0fa1d6b02bbee46133cb698dc0be60df9956c587d1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8055d8b6a652a64b53c1491ed7167efb46d06da91d04f4b910ef1f8eaa86156d\",\"dweb:/ipfs/QmQeE6UzpuZeFzXqu2gnWxHgFKEG3FP3qq2o1Pysqxgci8\"]},\"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":{\"keccak256\":\"0x4fc12b2f7f94df92f932d8bc95c9eb0627607b70585a8e5f12fdefdb3a870f3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f97e8fdf85ce1ae167dd35597d58cae83f261f901c3465d786e46e1247a5834\",\"dweb:/ipfs/QmVSonqgm8ZJg4DNmGwAwLxMm62DZ9NtheKQjKSYaMQtus\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 220,
								"contract": "shoot/ethernaut/contracts/levels/base/Level-06.sol:Level",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"shoot/ethernaut/contracts/levels/base/Ownable-06.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"shoot/ethernaut/contracts/levels/base/Context-06.sol\":{\"keccak256\":\"0x8ac237c12cc7ab06bbd433838ea1d5c3c47e376fa81a68900eb9749c1ea8c6b7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c8c274942a569fe22e47bb68c9ae92f3431938f6b1cfc65432669b780f5d892\",\"dweb:/ipfs/QmabyU2SyatPcbSzvZCUfpWGSgDT7CWHEzeoUu74ZBTKc1\"]},\"shoot/ethernaut/contracts/levels/base/Ownable-06.sol\":{\"keccak256\":\"0x4fc12b2f7f94df92f932d8bc95c9eb0627607b70585a8e5f12fdefdb3a870f3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f97e8fdf85ce1ae167dd35597d58cae83f261f901c3465d786e46e1247a5834\",\"dweb:/ipfs/QmVSonqgm8ZJg4DNmGwAwLxMm62DZ9NtheKQjKSYaMQtus\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 220,
								"contract": "shoot/ethernaut/contracts/levels/base/Ownable-06.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"shoot/ethernaut/contracts/levels/base/SafeMath-06.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"shoot/ethernaut/contracts/levels/base/SafeMath-06.sol\":137:1138  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"shoot/ethernaut/contracts/levels/base/SafeMath-06.sol\":137:1138  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212207aef3d7c0bab40cb752234445c55e64cedadceef0f337e8828406cf41a1de02064736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207aef3d7c0bab40cb752234445c55e64cedadceef0f337e8828406cf41a1de02064736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH27 0xEF3D7C0BAB40CB752234445C55E64CEDADCEEF0F337E8828406CF4 BYTE SAR 0xE0 KECCAK256 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "137:1001:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207aef3d7c0bab40cb752234445c55e64cedadceef0f337e8828406cf41a1de02064736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH27 0xEF3D7C0BAB40CB752234445C55E64CEDADCEEF0F337E8828406CF4 BYTE SAR 0xE0 KECCAK256 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "137:1001:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 137,
									"end": 1138,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 137,
									"end": 1138,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 137,
									"end": 1138,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 137,
									"end": 1138,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 137,
									"end": 1138,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 137,
									"end": 1138,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 137,
									"end": 1138,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 137,
									"end": 1138,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 137,
									"end": 1138,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 137,
									"end": 1138,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 1138,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 137,
									"end": 1138,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 137,
									"end": 1138,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 137,
									"end": 1138,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 137,
									"end": 1138,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 137,
									"end": 1138,
									"name": "INVALID",
									"source": 5
								},
								{
									"begin": 137,
									"end": 1138,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 137,
									"end": 1138,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 137,
									"end": 1138,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 137,
									"end": 1138,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 1138,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 137,
									"end": 1138,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 137,
									"end": 1138,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 137,
									"end": 1138,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 137,
									"end": 1138,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 137,
									"end": 1138,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 137,
									"end": 1138,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207aef3d7c0bab40cb752234445c55e64cedadceef0f337e8828406cf41a1de02064736f6c634300060c0033",
									".code": [
										{
											"begin": 137,
											"end": 1138,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 137,
											"end": 1138,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 137,
											"end": 1138,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 137,
											"end": 1138,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 137,
											"end": 1138,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 137,
											"end": 1138,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 137,
											"end": 1138,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 137,
											"end": 1138,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 137,
											"end": 1138,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"shoot/ethernaut/contracts/levels/base/SafeMath-06.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"shoot/ethernaut/contracts/levels/base/SafeMath-06.sol\":{\"keccak256\":\"0x98736a085f562e1232a6975c12f784ba08bddc6682aaf57f795155989d44539d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c720ad8c836152a5b673eadd824caf4c214865042006bb8972ec789dcb89dc3\",\"dweb:/ipfs/QmRdfSNjkgoGqQx7QkyrJ779vVkjqrMY18b9Y9Eh1RD7h4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "shoot/ethernaut/contracts/levels/base/Context-06.sol:21:5: Warning: Function state mutability can be restricted to pure\n    function _msgData() internal view virtual returns (bytes calldata) {\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 863,
					"file": "shoot/ethernaut/contracts/levels/base/Context-06.sol",
					"start": 762
				},
				"type": "Warning"
			}
		],
		"sources": {
			"shoot/ethernaut/contracts/levels/Reentrance.sol": {
				"ast": {
					"absolutePath": "shoot/ethernaut/contracts/levels/Reentrance.sol",
					"exportedSymbols": {
						"Reentrance": [
							80
						]
					},
					"id": 81,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"absolutePath": "shoot/ethernaut/contracts/levels/base/SafeMath-06.sol",
							"file": "./base/SafeMath-06.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 81,
							"sourceUnit": 459,
							"src": "58:32:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 80,
							"linearizedBaseContracts": [
								80
							],
							"name": "Reentrance",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 5,
									"libraryName": {
										"contractScope": null,
										"id": 3,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 458,
										"src": "125:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$458",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "119:27:0",
									"typeName": {
										"id": 4,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "138:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "27e235e3",
									"id": 9,
									"mutability": "mutable",
									"name": "balances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 80,
									"src": "149:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 8,
										"keyType": {
											"id": 6,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "157:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "149:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 7,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "168:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 26,
										"nodeType": "Block",
										"src": "238:55:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 14,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "244:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 16,
														"indexExpression": {
															"argumentTypes": null,
															"id": 15,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "253:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "244:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 21,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "278:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 22,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "278:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 17,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "260:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 19,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 18,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "269:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "260:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 20,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 352,
															"src": "260:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 23,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "260:28:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "244:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 25,
												"nodeType": "ExpressionStatement",
												"src": "244:44:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "00362a95",
									"id": 27,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "donate",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 27,
												"src": "210:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "210:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "209:13:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "238:0:0"
									},
									"scope": 80,
									"src": "194:99:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 38,
										"nodeType": "Block",
										"src": "365:32:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 34,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "378:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 36,
													"indexExpression": {
														"argumentTypes": null,
														"id": 35,
														"name": "_who",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "387:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "378:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 33,
												"id": 37,
												"nodeType": "Return",
												"src": "371:21:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "70a08231",
									"id": 39,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "_who",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 39,
												"src": "316:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "316:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "315:14:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "balance",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 39,
												"src": "351:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "351:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "350:14:0"
									},
									"scope": 80,
									"src": "297:100:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 74,
										"nodeType": "Block",
										"src": "440:195:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 44,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "449:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 47,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 45,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "458:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 46,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "458:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "449:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 48,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "473:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "449:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 73,
												"nodeType": "IfStatement",
												"src": "446:185:0",
												"trueBody": {
													"id": 72,
													"nodeType": "Block",
													"src": "482:149:0",
													"statements": [
														{
															"assignments": [
																51,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 51,
																	"mutability": "mutable",
																	"name": "result",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 72,
																	"src": "491:11:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 50,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "491:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																},
																null
															],
															"id": 59,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "",
																		"id": 57,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "538:2:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 52,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -15,
																				"src": "507:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 53,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "507:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"id": 54,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "call",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "507:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																		}
																	},
																	"id": 56,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"argumentTypes": null,
																			"id": 55,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 41,
																			"src": "529:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "507:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 58,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "507:34:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "490:51:0"
														},
														{
															"condition": {
																"argumentTypes": null,
																"id": 60,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 51,
																"src": "552:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 64,
															"nodeType": "IfStatement",
															"src": "549:37:0",
															"trueBody": {
																"id": 63,
																"nodeType": "Block",
																"src": "560:26:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 61,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 41,
																			"src": "570:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 62,
																		"nodeType": "ExpressionStatement",
																		"src": "570:7:0"
																	}
																]
															}
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 70,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 65,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 9,
																		"src": "593:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 68,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 66,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "602:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 67,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "602:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "593:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 69,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 41,
																	"src": "617:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "593:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 71,
															"nodeType": "ExpressionStatement",
															"src": "593:31:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"functionSelector": "2e1a7d4d",
									"id": 75,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 75,
												"src": "419:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "419:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "418:14:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "440:0:0"
									},
									"scope": 80,
									"src": "401:234:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 78,
										"nodeType": "Block",
										"src": "666:2:0",
										"statements": []
									},
									"documentation": null,
									"id": 79,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "646:2:0"
									},
									"returnParameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "666:0:0"
									},
									"scope": 80,
									"src": "639:29:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 81,
							"src": "92:578:0"
						}
					],
					"src": "32:639:0"
				},
				"id": 0
			},
			"shoot/ethernaut/contracts/levels/ReentranceFactory.sol": {
				"ast": {
					"absolutePath": "shoot/ethernaut/contracts/levels/ReentranceFactory.sol",
					"exportedSymbols": {
						"ReentranceFactory": [
							168
						]
					},
					"id": 169,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 82,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"absolutePath": "shoot/ethernaut/contracts/levels/base/Level-06.sol",
							"file": "./base/Level-06.sol",
							"id": 83,
							"nodeType": "ImportDirective",
							"scope": 169,
							"sourceUnit": 213,
							"src": "58:29:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "shoot/ethernaut/contracts/levels/Reentrance.sol",
							"file": "./Reentrance.sol",
							"id": 84,
							"nodeType": "ImportDirective",
							"scope": 169,
							"sourceUnit": 81,
							"src": "88:26:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 85,
										"name": "Level",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 212,
										"src": "146:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Level_$212",
											"typeString": "contract Level"
										}
									},
									"id": 86,
									"nodeType": "InheritanceSpecifier",
									"src": "146:5:1"
								}
							],
							"contractDependencies": [
								80,
								190,
								212,
								325
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 168,
							"linearizedBaseContracts": [
								168,
								212,
								325,
								190
							],
							"name": "ReentranceFactory",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "90696af9",
									"id": 89,
									"mutability": "mutable",
									"name": "insertCoin",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 168,
									"src": "157:36:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 87,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "157:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "302e303031",
										"id": 88,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "182:11:1",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000_by_1",
											"typeString": "int_const 1000000000000000"
										},
										"value": "0.001"
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										202
									],
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "281:224:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 97,
													"name": "_player",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 91,
													"src": "287:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 98,
												"nodeType": "ExpressionStatement",
												"src": "287:7:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 100,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "308:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 101,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "308:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 102,
																"name": "insertCoin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 89,
																"src": "321:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "308:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 99,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "300:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "300:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 105,
												"nodeType": "ExpressionStatement",
												"src": "300:32:1"
											},
											{
												"assignments": [
													107
												],
												"declarations": [
													{
														"constant": false,
														"id": 107,
														"mutability": "mutable",
														"name": "instance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 135,
														"src": "338:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Reentrance_$80",
															"typeString": "contract Reentrance"
														},
														"typeName": {
															"contractScope": null,
															"id": 106,
															"name": "Reentrance",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 80,
															"src": "338:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Reentrance_$80",
																"typeString": "contract Reentrance"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 111,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 109,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "360:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Reentrance_$80_$",
															"typeString": "function () returns (contract Reentrance)"
														},
														"typeName": {
															"contractScope": null,
															"id": 108,
															"name": "Reentrance",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 80,
															"src": "364:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Reentrance_$80",
																"typeString": "contract Reentrance"
															}
														}
													},
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "360:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Reentrance_$80",
														"typeString": "contract Reentrance"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "338:38:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 115,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "398:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ReentranceFactory_$168",
																				"typeString": "contract ReentranceFactory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_ReentranceFactory_$168",
																				"typeString": "contract ReentranceFactory"
																			}
																		],
																		"id": 114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "390:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 113,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "390:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 116,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "390:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "390:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 118,
																"name": "insertCoin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 89,
																"src": "415:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "390:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 112,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "382:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "382:44:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 121,
												"nodeType": "ExpressionStatement",
												"src": "382:44:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 127,
															"name": "insertCoin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "459:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 124,
																	"name": "instance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 107,
																	"src": "440:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Reentrance_$80",
																		"typeString": "contract Reentrance"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Reentrance_$80",
																		"typeString": "contract Reentrance"
																	}
																],
																"id": 123,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "432:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 122,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "432:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "432:17:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 126,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "432:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "432:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "432:38:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 132,
															"name": "instance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 107,
															"src": "491:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Reentrance_$80",
																"typeString": "contract Reentrance"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_Reentrance_$80",
																"typeString": "contract Reentrance"
															}
														],
														"id": 131,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "483:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 130,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "483:7:1",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "483:17:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 96,
												"id": 134,
												"nodeType": "Return",
												"src": "476:24:1"
											}
										]
									},
									"documentation": null,
									"functionSelector": "7726f776",
									"id": 136,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createInstance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 93,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "239:8:1"
									},
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "_player",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 136,
												"src": "222:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "222:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "221:17:1"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 136,
												"src": "272:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "272:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "271:9:1"
									},
									"scope": 168,
									"src": "198:307:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										211
									],
									"body": {
										"id": 162,
										"nodeType": "Block",
										"src": "610:110:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 146,
													"name": "_player",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 140,
													"src": "616:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 147,
												"nodeType": "ExpressionStatement",
												"src": "616:7:1"
											},
											{
												"assignments": [
													149
												],
												"declarations": [
													{
														"constant": false,
														"id": 149,
														"mutability": "mutable",
														"name": "instance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 162,
														"src": "629:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Reentrance_$80",
															"typeString": "contract Reentrance"
														},
														"typeName": {
															"contractScope": null,
															"id": 148,
															"name": "Reentrance",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 80,
															"src": "629:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Reentrance_$80",
																"typeString": "contract Reentrance"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 153,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 151,
															"name": "_instance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 138,
															"src": "662:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 150,
														"name": "Reentrance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "651:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_Reentrance_$80_$",
															"typeString": "type(contract Reentrance)"
														}
													},
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "651:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Reentrance_$80",
														"typeString": "contract Reentrance"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "629:43:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 156,
																	"name": "instance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 149,
																	"src": "693:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Reentrance_$80",
																		"typeString": "contract Reentrance"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Reentrance_$80",
																		"typeString": "contract Reentrance"
																	}
																],
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "685:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 154,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "685:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "685:17:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 158,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "685:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 159,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "714:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "685:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 145,
												"id": 161,
												"nodeType": "Return",
												"src": "678:37:1"
											}
										]
									},
									"documentation": null,
									"functionSelector": "d38def5b",
									"id": 163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "validateInstance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 142,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "579:8:1"
									},
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "_instance",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 163,
												"src": "535:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "535:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "_player",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 163,
												"src": "562:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "562:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "534:44:1"
									},
									"returnParameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 163,
												"src": "604:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 143,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "604:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "603:6:1"
									},
									"scope": 168,
									"src": "509:211:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 166,
										"nodeType": "Block",
										"src": "751:2:1",
										"statements": []
									},
									"documentation": null,
									"id": 167,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "731:2:1"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "751:0:1"
									},
									"scope": 168,
									"src": "724:29:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 169,
							"src": "116:639:1"
						}
					],
					"src": "33:723:1"
				},
				"id": 1
			},
			"shoot/ethernaut/contracts/levels/base/Context-06.sol": {
				"ast": {
					"absolutePath": "shoot/ethernaut/contracts/levels/base/Context-06.sol",
					"exportedSymbols": {
						"Context": [
							190
						]
					},
					"id": 191,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 170,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "89:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 171,
								"nodeType": "StructuredDocumentation",
								"src": "116:505:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 190,
							"linearizedBaseContracts": [
								190
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 179,
										"nodeType": "Block",
										"src": "718:36:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 176,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "736:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "736:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 175,
												"id": 178,
												"nodeType": "Return",
												"src": "729:17:2"
											}
										]
									},
									"documentation": null,
									"id": 180,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:2"
									},
									"returnParameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 180,
												"src": "709:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "708:9:2"
									},
									"scope": 190,
									"src": "656:98:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "829:34:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 185,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "847:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "847:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 184,
												"id": 187,
												"nodeType": "Return",
												"src": "840:15:2"
											}
										]
									},
									"documentation": null,
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "779:2:2"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 189,
												"src": "813:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 182,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "813:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "812:16:2"
									},
									"scope": 190,
									"src": "762:101:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 191,
							"src": "623:243:2"
						}
					],
					"src": "89:779:2"
				},
				"id": 2
			},
			"shoot/ethernaut/contracts/levels/base/Level-06.sol": {
				"ast": {
					"absolutePath": "shoot/ethernaut/contracts/levels/base/Level-06.sol",
					"exportedSymbols": {
						"Level": [
							212
						]
					},
					"id": 213,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 192,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:3"
						},
						{
							"absolutePath": "shoot/ethernaut/contracts/levels/base/Ownable-06.sol",
							"file": "./Ownable-06.sol",
							"id": 193,
							"nodeType": "ImportDirective",
							"scope": 213,
							"sourceUnit": 326,
							"src": "58:26:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 194,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 325,
										"src": "113:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$325",
											"typeString": "contract Ownable"
										}
									},
									"id": 195,
									"nodeType": "InheritanceSpecifier",
									"src": "113:7:3"
								}
							],
							"contractDependencies": [
								190,
								325
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": false,
							"id": 212,
							"linearizedBaseContracts": [
								212,
								325,
								190
							],
							"name": "Level",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "7726f776",
									"id": 202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createInstance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "_player",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 202,
												"src": "149:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "149:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "148:17:3"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 202,
												"src": "198:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "198:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "197:9:3"
									},
									"scope": 212,
									"src": "125:82:3",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "d38def5b",
									"id": 211,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "validateInstance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "_instance",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 211,
												"src": "236:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "236:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "_player",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 211,
												"src": "263:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "263:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "235:44:3"
									},
									"returnParameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 211,
												"src": "304:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 208,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "304:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "303:6:3"
									},
									"scope": 212,
									"src": "210:100:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 213,
							"src": "86:226:3"
						}
					],
					"src": "33:280:3"
				},
				"id": 3
			},
			"shoot/ethernaut/contracts/levels/base/Ownable-06.sol": {
				"ast": {
					"absolutePath": "shoot/ethernaut/contracts/levels/base/Ownable-06.sol",
					"exportedSymbols": {
						"Ownable": [
							325
						]
					},
					"id": 326,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 214,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:4"
						},
						{
							"absolutePath": "shoot/ethernaut/contracts/levels/base/Context-06.sol",
							"file": "./Context-06.sol",
							"id": 215,
							"nodeType": "ImportDirective",
							"scope": 326,
							"sourceUnit": 191,
							"src": "132:26:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 217,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 190,
										"src": "698:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$190",
											"typeString": "contract Context"
										}
									},
									"id": 218,
									"nodeType": "InheritanceSpecifier",
									"src": "698:7:4"
								}
							],
							"contractDependencies": [
								190
							],
							"contractKind": "contract",
							"documentation": {
								"id": 216,
								"nodeType": "StructuredDocumentation",
								"src": "162:505:4",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 325,
							"linearizedBaseContracts": [
								325,
								190
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 220,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 325,
									"src": "713:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 219,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "713:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 226,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 226,
												"src": "771:29:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "771:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 226,
												"src": "802:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "802:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "770:57:4"
									},
									"src": "744:84:4"
								},
								{
									"body": {
										"id": 235,
										"nodeType": "Block",
										"src": "956:51:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 231,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 180,
																"src": "986:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "986:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 230,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "967:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "967:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 234,
												"nodeType": "ExpressionStatement",
												"src": "967:32:4"
											}
										]
									},
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "836:93:4",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 236,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "946:2:4"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "956:0:4"
									},
									"scope": 325,
									"src": "935:72:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 243,
										"nodeType": "Block",
										"src": "1121:44:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 239,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 267,
														"src": "1132:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1132:13:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 241,
												"nodeType": "ExpressionStatement",
												"src": "1132:13:4"
											},
											{
												"id": 242,
												"nodeType": "PlaceholderStatement",
												"src": "1156:1:4"
											}
										]
									},
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "1015:79:4",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 244,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1118:2:4"
									},
									"src": "1100:65:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 252,
										"nodeType": "Block",
										"src": "1301:32:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 250,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 220,
													"src": "1319:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 249,
												"id": 251,
												"nodeType": "Return",
												"src": "1312:13:4"
											}
										]
									},
									"documentation": {
										"id": 245,
										"nodeType": "StructuredDocumentation",
										"src": "1173:67:4",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1260:2:4"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 253,
												"src": "1292:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1292:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1291:9:4"
									},
									"scope": 325,
									"src": "1246:87:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "1456:87:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 258,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 253,
																	"src": "1475:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 259,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1475:7:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 260,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 180,
																	"src": "1486:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 261,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1486:12:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1475:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1500:34:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 257,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1467:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1467:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 265,
												"nodeType": "ExpressionStatement",
												"src": "1467:68:4"
											}
										]
									},
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "1341:64:4",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1431:2:4"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1456:0:4"
									},
									"scope": 325,
									"src": "1411:132:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 280,
										"nodeType": "Block",
										"src": "1948:49:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1986:1:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 275,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1978:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 274,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1978:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1978:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 273,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1959:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1959:30:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 279,
												"nodeType": "ExpressionStatement",
												"src": "1959:30:4"
											}
										]
									},
									"documentation": {
										"id": 268,
										"nodeType": "StructuredDocumentation",
										"src": "1551:337:4",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 281,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 271,
											"modifierName": {
												"argumentTypes": null,
												"id": 270,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 244,
												"src": "1938:9:4",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1938:9:4"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1920:2:4"
									},
									"returnParameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1948:0:4"
									},
									"scope": 325,
									"src": "1894:103:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 303,
										"nodeType": "Block",
										"src": "2222:131:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 290,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 284,
																"src": "2241:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2261:1:4",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2253:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 291,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2253:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2253:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2241:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2265:40:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 289,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2233:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2233:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "2233:73:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 300,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 284,
															"src": "2336:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 299,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "2317:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "2317:28:4"
											}
										]
									},
									"documentation": {
										"id": 282,
										"nodeType": "StructuredDocumentation",
										"src": "2005:141:4",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 304,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 287,
											"modifierName": {
												"argumentTypes": null,
												"id": 286,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 244,
												"src": "2212:9:4",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2212:9:4"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 304,
												"src": "2179:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2179:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2178:18:4"
									},
									"returnParameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2222:0:4"
									},
									"scope": 325,
									"src": "2152:201:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 323,
										"nodeType": "Block",
										"src": "2576:128:4",
										"statements": [
											{
												"assignments": [
													311
												],
												"declarations": [
													{
														"constant": false,
														"id": 311,
														"mutability": "mutable",
														"name": "oldOwner",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 323,
														"src": "2587:16:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 310,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2587:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 313,
												"initialValue": {
													"argumentTypes": null,
													"id": 312,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 220,
													"src": "2606:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2587:25:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 314,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 220,
														"src": "2623:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 315,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "2632:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2623:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 317,
												"nodeType": "ExpressionStatement",
												"src": "2623:17:4"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 319,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 311,
															"src": "2677:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 320,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "2687:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 318,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 226,
														"src": "2656:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2656:40:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 322,
												"nodeType": "EmitStatement",
												"src": "2651:45:4"
											}
										]
									},
									"documentation": {
										"id": 305,
										"nodeType": "StructuredDocumentation",
										"src": "2361:146:4",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 324,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 324,
												"src": "2541:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2541:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2540:18:4"
									},
									"returnParameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2576:0:4"
									},
									"scope": 325,
									"src": "2513:191:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 326,
							"src": "669:2038:4"
						}
					],
					"src": "105:2604:4"
				},
				"id": 4
			},
			"shoot/ethernaut/contracts/levels/base/SafeMath-06.sol": {
				"ast": {
					"absolutePath": "shoot/ethernaut/contracts/levels/base/SafeMath-06.sol",
					"exportedSymbols": {
						"SafeMath": [
							458
						]
					},
					"id": 459,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 327,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 458,
							"linearizedBaseContracts": [
								458
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 351,
										"nodeType": "Block",
										"src": "228:114:5",
										"statements": [
											{
												"assignments": [
													337
												],
												"declarations": [
													{
														"constant": false,
														"id": 337,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 351,
														"src": "239:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 336,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "239:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 341,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 338,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 329,
														"src": "251:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 339,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 331,
														"src": "255:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "251:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "239:17:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 343,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 337,
																"src": "275:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 344,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 329,
																"src": "280:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "275:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "283:29:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 342,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "267:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "267:46:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 348,
												"nodeType": "ExpressionStatement",
												"src": "267:46:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 349,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 337,
													"src": "333:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 335,
												"id": 350,
												"nodeType": "Return",
												"src": "326:8:5"
											}
										]
									},
									"documentation": null,
									"id": 352,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 352,
												"src": "174:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "174:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 352,
												"src": "185:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "185:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "173:22:5"
									},
									"returnParameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 352,
												"src": "219:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "219:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "218:9:5"
									},
									"scope": 458,
									"src": "161:181:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 376,
										"nodeType": "Block",
										"src": "417:117:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 362,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 356,
																"src": "436:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 363,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 354,
																"src": "441:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "436:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 365,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "444:32:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 361,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "428:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "428:49:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 367,
												"nodeType": "ExpressionStatement",
												"src": "428:49:5"
											},
											{
												"assignments": [
													369
												],
												"declarations": [
													{
														"constant": false,
														"id": 369,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 376,
														"src": "488:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 368,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "488:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 373,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 370,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 354,
														"src": "500:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 371,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 356,
														"src": "504:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "500:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "488:17:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 374,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 369,
													"src": "525:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 360,
												"id": 375,
												"nodeType": "Return",
												"src": "518:8:5"
											}
										]
									},
									"documentation": null,
									"id": 377,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 377,
												"src": "363:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "363:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 377,
												"src": "374:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "362:22:5"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 377,
												"src": "408:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "408:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "407:9:5"
									},
									"scope": 458,
									"src": "350:184:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 410,
										"nodeType": "Block",
										"src": "609:183:5",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 386,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 379,
														"src": "624:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 387,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "629:1:5",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "624:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 392,
												"nodeType": "IfStatement",
												"src": "620:47:5",
												"trueBody": {
													"id": 391,
													"nodeType": "Block",
													"src": "632:35:5",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 389,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "654:1:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 385,
															"id": 390,
															"nodeType": "Return",
															"src": "647:8:5"
														}
													]
												}
											},
											{
												"assignments": [
													394
												],
												"declarations": [
													{
														"constant": false,
														"id": 394,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 410,
														"src": "679:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 393,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "679:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 398,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 395,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 379,
														"src": "691:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 396,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "695:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "691:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "679:17:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 402,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 400,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 394,
																	"src": "715:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 401,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 379,
																	"src": "719:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "715:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 403,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 381,
																"src": "724:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "715:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 405,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "727:35:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 399,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "707:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "707:56:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 407,
												"nodeType": "ExpressionStatement",
												"src": "707:56:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 408,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 394,
													"src": "783:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 385,
												"id": 409,
												"nodeType": "Return",
												"src": "776:8:5"
											}
										]
									},
									"documentation": null,
									"id": 411,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 411,
												"src": "555:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "555:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 411,
												"src": "566:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "566:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "554:22:5"
									},
									"returnParameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 411,
												"src": "600:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "600:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "599:9:5"
									},
									"scope": 458,
									"src": "542:250:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 435,
										"nodeType": "Block",
										"src": "865:112:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 421,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 415,
																"src": "884:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 422,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "888:1:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "884:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 424,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "891:28:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 420,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "876:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "876:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 426,
												"nodeType": "ExpressionStatement",
												"src": "876:44:5"
											},
											{
												"assignments": [
													428
												],
												"declarations": [
													{
														"constant": false,
														"id": 428,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 435,
														"src": "931:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 427,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "931:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 432,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 429,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 413,
														"src": "943:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 430,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 415,
														"src": "947:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "943:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "931:17:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 433,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 428,
													"src": "968:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 419,
												"id": 434,
												"nodeType": "Return",
												"src": "961:8:5"
											}
										]
									},
									"documentation": null,
									"id": 436,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 436,
												"src": "811:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "811:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 436,
												"src": "822:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "810:22:5"
									},
									"returnParameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 436,
												"src": "856:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "856:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "855:9:5"
									},
									"scope": 458,
									"src": "798:179:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 456,
										"nodeType": "Block",
										"src": "1050:85:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 446,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 440,
																"src": "1069:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 447,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1074:1:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1069:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1077:26:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 445,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1061:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1061:43:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 451,
												"nodeType": "ExpressionStatement",
												"src": "1061:43:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 452,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 438,
														"src": "1122:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 453,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "1126:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1122:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 444,
												"id": 455,
												"nodeType": "Return",
												"src": "1115:12:5"
											}
										]
									},
									"documentation": null,
									"id": 457,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 457,
												"src": "996:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "996:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 457,
												"src": "1007:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1007:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "995:22:5"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 457,
												"src": "1041:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1041:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1040:9:5"
									},
									"scope": 458,
									"src": "983:152:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 459,
							"src": "137:1001:5"
						}
					],
					"src": "110:1030:5"
				},
				"id": 5
			}
		}
	}
}