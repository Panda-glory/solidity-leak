{
	"compiler": {
		"version": "0.8.21+commit.d9974bed"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "createInstance",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address payable",
						"name": "_instance",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_player",
						"type": "address"
					}
				],
				"name": "validateInstance",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"shoot/ethernaut/contracts/levels/PuzzleWalletFactory.sol": "PuzzleWalletFactory"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"OpenZeppelin-code/openzeppelin-contracts/contracts/access/Ownable.sol": {
			"keccak256": "0xee2b6bc803215b66037612da0fe9f23ec3c99ff89db4ff05449a8df17c9befc5",
			"license": "MIT",
			"urls": [
				"bzz-raw://127be279bb6b2f6106127ea6b431cfc879f9018dd76b7575841821be9eef3488",
				"dweb:/ipfs/QmfXqvL6sKx256hrVuQcSnNtirZrpm4JUbDFXwGHKgrrXU"
			]
		},
		"OpenZeppelin-code/openzeppelin-contracts/contracts/proxy/Proxy.sol": {
			"keccak256": "0x62c6b919abeeb4c9146ffbb325fc03b5f2d55a29b8e719b8ff62daab48123565",
			"license": "MIT",
			"urls": [
				"bzz-raw://296143200e46ef2d62d089f9e7be424ebd49c37ab44c7ac24da3c2c89a0226d5",
				"dweb:/ipfs/Qmd3g6y6MU3Udk2z7onjyVdifjTANp7CvFYkJNGGQBDBvB"
			]
		},
		"OpenZeppelin-code/openzeppelin-contracts/contracts/utils/Address.sol": {
			"keccak256": "0xa41d7d2dbbeff548760b06a89ab596ff495f4ae91dcd17d4d13e8a3b3853c9fa",
			"license": "MIT",
			"urls": [
				"bzz-raw://db62d884d97bc0f540d01cbb204225316cfd9c07f9c39e37ee66406d9abf74c6",
				"dweb:/ipfs/QmfZ7RAJ76mDgxB6u37kJrpcdaxAhT2ot6bimp8yjHetpf"
			]
		},
		"OpenZeppelin-code/openzeppelin-contracts/contracts/utils/Context.sol": {
			"keccak256": "0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94",
			"license": "MIT",
			"urls": [
				"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2",
				"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn"
			]
		},
		"shoot/ethernaut/contracts/helpers/UpgradeableProxy-08.sol": {
			"keccak256": "0x4829b73b0e57467d372e19528019c1a926937197e5381752ca1613e6b54677cd",
			"license": "MIT",
			"urls": [
				"bzz-raw://5016b8573750db99263ac0148fb6869d7dc92b2145cc7dae444a9f1bea3d561a",
				"dweb:/ipfs/QmP7pWdGwtjBvgpXji5zkYrx9zANBhRR8AUVJ5hSPuVzEF"
			]
		},
		"shoot/ethernaut/contracts/levels/PuzzleWallet.sol": {
			"keccak256": "0xf3174e9b9805eee8e5268e62dc3e92677b8636245bc1b56e3aeb4ddf7814325f",
			"license": "MIT",
			"urls": [
				"bzz-raw://c0fe580da551c6bf857072b45b2078823386e8d05c176b0128fb53e2fedc081f",
				"dweb:/ipfs/QmaDFXxAyiyHp68XPi8qUdS6mZb5GcSv8hArQgcQrDKuoj"
			]
		},
		"shoot/ethernaut/contracts/levels/PuzzleWalletFactory.sol": {
			"keccak256": "0x4725467807a6fef44d75be80087e24de602e41b19912cc3e53914b1facd8ed0b",
			"license": "MIT",
			"urls": [
				"bzz-raw://48963b7d9010129a69a5e4776add6dcf53baae8a146a91d829be71d96830b3cb",
				"dweb:/ipfs/QmXiKiuyv1RYiWcf8G4TwvLsFRangC19pmfxiJxn2xQBSw"
			]
		},
		"shoot/ethernaut/contracts/levels/base/Level.sol": {
			"keccak256": "0xe6fe8b9de98a6378d8f629d51acf0267c259b68720e976ca57c122d3e3a29dd3",
			"license": "MIT",
			"urls": [
				"bzz-raw://153f48302e587fa379fcad9715233339c764f0e17759cdef7efd74a099e50c61",
				"dweb:/ipfs/QmQgSexPQs525QERrPmTytfj5jtvfK9ctyAPNg44x688FH"
			]
		}
	},
	"version": 1
}