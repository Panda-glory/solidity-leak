{
	"id": "eb2baf5f15713cb3f627e35c561cb6d3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.26",
	"solcLongVersion": "0.4.26+commit.4563c3fc",
	"input": {
		"language": "Solidity",
		"sources": {
			"shoot/2/重入/1.sol": {
				"content": "// 为了完成此挑战，你需要先执行initWithValue()函数，随后，想办法套空合约里的这0.001ether\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.4.19;\r\n\r\ncontract Reentrance{\r\n    address _owner;\r\n    mapping (address => uint256) balances;\r\n    uint256 public score;\r\n    bool public isInit;\r\n\r\n    \r\n    constructor() public payable {\r\n        _owner = msg.sender;\r\n    }\r\n\r\n    //初始状态：0.001ether\r\n    function initWithValue() public payable{\r\n        if(!isInit){\r\n            require(address(this).balance == 1000000000000000 wei, \"should init with 0.001 ether\");\r\n            isInit = true;\r\n        }\r\n    }\r\n\r\n    function withdraw(uint256 amount) public payable{\r\n        require(balances[msg.sender] >= amount);\r\n        require(address(this).balance >= amount);\r\n        msg.sender.call.value(amount)();\r\n        balances[msg.sender] -= amount;\r\n    }\r\n\r\n    function deposit() public payable{\r\n        balances[msg.sender] += msg.value;\r\n    }\r\n\r\n    function balanceOf(address adre) public view returns(uint256){\r\n        return balances[adre];\r\n    }\r\n\r\n    function wallet() public  view returns(uint256 result){\r\n        return address(this).balance;\r\n    }\r\n\r\n    function isCompleted() public {\r\n        require(isInit, \"You can't do it without init\");\r\n        score = 0;\r\n        if(isContract(msg.sender)){\r\n            score = 25;\r\n        }\r\n        if(address(this).balance == 0){\r\n            score = 100;\r\n        }\r\n    }\r\n\r\n    function isContract(address addr) private view returns (bool) {\r\n        uint size;\r\n        assembly { size := extcodesize(addr) }\r\n        return size > 0;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"shoot/2/重入/1.sol": {
				"Reentrance": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "wallet",
							"outputs": [
								{
									"name": "result",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "adre",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "isInit",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "score",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "initWithValue",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "isCompleted",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"shoot/2/重入/1.sol\":181:1658  contract Reentrance{\r... */\n  mstore(0x40, 0x80)\n    /* \"shoot/2/重入/1.sol\":381:391  msg.sender */\n  caller\n    /* \"shoot/2/重入/1.sol\":372:378  _owner */\n  0x0\n  dup1\n    /* \"shoot/2/重入/1.sol\":372:391  _owner = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"shoot/2/重入/1.sol\":181:1658  contract Reentrance{\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"shoot/2/重入/1.sol\":181:1658  contract Reentrance{\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x521eb273\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xb145a5b8\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xd0e30db0\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xefedc669\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf8ef1085\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xfa391c64\n      eq\n      tag_9\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"shoot/2/重入/1.sol\":657:897  function withdraw(uint256 amount) public payable{\r... */\n    tag_2:\n      tag_10\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_11)\n    tag_10:\n      stop\n        /* \"shoot/2/重入/1.sol\":1107:1208  function wallet() public  view returns(uint256 result){\r... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_12\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_12:\n        /* \"shoot/2/重入/1.sol\":1107:1208  function wallet() public  view returns(uint256 result){\r... */\n      pop\n      tag_13\n      jump(tag_14)\n    tag_13:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"shoot/2/重入/1.sol\":998:1099  function balanceOf(address adre) public view returns(uint256){\r... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_15\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_15:\n        /* \"shoot/2/重入/1.sol\":998:1099  function balanceOf(address adre) public view returns(uint256){\r... */\n      pop\n      tag_16\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_17)\n    tag_16:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"shoot/2/重入/1.sol\":299:317  bool public isInit */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_18\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_18:\n        /* \"shoot/2/重入/1.sol\":299:317  bool public isInit */\n      pop\n      tag_19\n      jump(tag_20)\n    tag_19:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"shoot/2/重入/1.sol\":905:990  function deposit() public payable{\r... */\n    tag_6:\n      tag_21\n      jump(tag_22)\n    tag_21:\n      stop\n        /* \"shoot/2/重入/1.sol\":272:292  uint256 public score */\n    tag_7:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_23\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_23:\n        /* \"shoot/2/重入/1.sol\":272:292  uint256 public score */\n      pop\n      tag_24\n      jump(tag_25)\n    tag_24:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"shoot/2/重入/1.sol\":440:649  function initWithValue() public payable{\r... */\n    tag_8:\n      tag_26\n      jump(tag_27)\n    tag_26:\n      stop\n        /* \"shoot/2/重入/1.sol\":1216:1483  function isCompleted() public {\r... */\n    tag_9:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_28\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_28:\n        /* \"shoot/2/重入/1.sol\":1216:1483  function isCompleted() public {\r... */\n      pop\n      tag_29\n      jump(tag_30)\n    tag_29:\n      stop\n        /* \"shoot/2/重入/1.sol\":657:897  function withdraw(uint256 amount) public payable{\r... */\n    tag_11:\n        /* \"shoot/2/重入/1.sol\":748:754  amount */\n      dup1\n        /* \"shoot/2/重入/1.sol\":724:732  balances */\n      0x1\n        /* \"shoot/2/重入/1.sol\":724:744  balances[msg.sender] */\n      0x0\n        /* \"shoot/2/重入/1.sol\":733:743  msg.sender */\n      caller\n        /* \"shoot/2/重入/1.sol\":724:744  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"shoot/2/重入/1.sol\":724:754  balances[msg.sender] >= amount */\n      lt\n      iszero\n        /* \"shoot/2/重入/1.sol\":716:755  require(balances[msg.sender] >= amount) */\n      iszero\n      iszero\n      tag_32\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_32:\n        /* \"shoot/2/重入/1.sol\":799:805  amount */\n      dup1\n        /* \"shoot/2/重入/1.sol\":782:786  this */\n      address\n        /* \"shoot/2/重入/1.sol\":774:795  address(this).balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"shoot/2/重入/1.sol\":774:805  address(this).balance >= amount */\n      lt\n      iszero\n        /* \"shoot/2/重入/1.sol\":766:806  require(address(this).balance >= amount) */\n      iszero\n      iszero\n      tag_33\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_33:\n        /* \"shoot/2/重入/1.sol\":817:827  msg.sender */\n      caller\n        /* \"shoot/2/重入/1.sol\":817:832  msg.sender.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"shoot/2/重入/1.sol\":839:845  amount */\n      dup2\n        /* \"shoot/2/重入/1.sol\":817:848  msg.sender.call.value(amount)() */\n      mload(0x40)\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      pop\n        /* \"shoot/2/重入/1.sol\":883:889  amount */\n      dup1\n        /* \"shoot/2/重入/1.sol\":859:867  balances */\n      0x1\n        /* \"shoot/2/重入/1.sol\":859:879  balances[msg.sender] */\n      0x0\n        /* \"shoot/2/重入/1.sol\":868:878  msg.sender */\n      caller\n        /* \"shoot/2/重入/1.sol\":859:879  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n        /* \"shoot/2/重入/1.sol\":859:889  balances[msg.sender] -= amount */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"shoot/2/重入/1.sol\":657:897  function withdraw(uint256 amount) public payable{\r... */\n      pop\n      jump\t// out\n        /* \"shoot/2/重入/1.sol\":1107:1208  function wallet() public  view returns(uint256 result){\r... */\n    tag_14:\n        /* \"shoot/2/重入/1.sol\":1146:1160  uint256 result */\n      0x0\n        /* \"shoot/2/重入/1.sol\":1187:1191  this */\n      address\n        /* \"shoot/2/重入/1.sol\":1179:1200  address(this).balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"shoot/2/重入/1.sol\":1172:1200  return address(this).balance */\n      swap1\n      pop\n        /* \"shoot/2/重入/1.sol\":1107:1208  function wallet() public  view returns(uint256 result){\r... */\n      swap1\n      jump\t// out\n        /* \"shoot/2/重入/1.sol\":998:1099  function balanceOf(address adre) public view returns(uint256){\r... */\n    tag_17:\n        /* \"shoot/2/重入/1.sol\":1051:1058  uint256 */\n      0x0\n        /* \"shoot/2/重入/1.sol\":1077:1085  balances */\n      0x1\n        /* \"shoot/2/重入/1.sol\":1077:1091  balances[adre] */\n      0x0\n        /* \"shoot/2/重入/1.sol\":1086:1090  adre */\n      dup4\n        /* \"shoot/2/重入/1.sol\":1077:1091  balances[adre] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"shoot/2/重入/1.sol\":1070:1091  return balances[adre] */\n      swap1\n      pop\n        /* \"shoot/2/重入/1.sol\":998:1099  function balanceOf(address adre) public view returns(uint256){\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"shoot/2/重入/1.sol\":299:317  bool public isInit */\n    tag_20:\n      0x3\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"shoot/2/重入/1.sol\":905:990  function deposit() public payable{\r... */\n    tag_22:\n        /* \"shoot/2/重入/1.sol\":973:982  msg.value */\n      callvalue\n        /* \"shoot/2/重入/1.sol\":949:957  balances */\n      0x1\n        /* \"shoot/2/重入/1.sol\":949:969  balances[msg.sender] */\n      0x0\n        /* \"shoot/2/重入/1.sol\":958:968  msg.sender */\n      caller\n        /* \"shoot/2/重入/1.sol\":949:969  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n        /* \"shoot/2/重入/1.sol\":949:982  balances[msg.sender] += msg.value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"shoot/2/重入/1.sol\":905:990  function deposit() public payable{\r... */\n      jump\t// out\n        /* \"shoot/2/重入/1.sol\":272:292  uint256 public score */\n    tag_25:\n      sload(0x2)\n      dup2\n      jump\t// out\n        /* \"shoot/2/重入/1.sol\":440:649  function initWithValue() public payable{\r... */\n    tag_27:\n        /* \"shoot/2/重入/1.sol\":494:500  isInit */\n      0x3\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"shoot/2/重入/1.sol\":493:500  !isInit */\n      iszero\n        /* \"shoot/2/重入/1.sol\":490:642  if(!isInit){\r... */\n      iszero\n      tag_38\n      jumpi\n        /* \"shoot/2/重入/1.sol\":549:569  1000000000000000 wei */\n      0x38d7ea4c68000\n        /* \"shoot/2/重入/1.sol\":532:536  this */\n      address\n        /* \"shoot/2/重入/1.sol\":524:545  address(this).balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"shoot/2/重入/1.sol\":524:569  address(this).balance == 1000000000000000 wei */\n      eq\n        /* \"shoot/2/重入/1.sol\":516:602  require(address(this).balance == 1000000000000000 wei, \"should init with 0.001 ether\") */\n      iszero\n      iszero\n      tag_39\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1c\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x73686f756c6420696e6974207769746820302e30303120657468657200000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_39:\n        /* \"shoot/2/重入/1.sol\":626:630  true */\n      0x1\n        /* \"shoot/2/重入/1.sol\":617:623  isInit */\n      0x3\n      0x0\n        /* \"shoot/2/重入/1.sol\":617:630  isInit = true */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"shoot/2/重入/1.sol\":490:642  if(!isInit){\r... */\n    tag_38:\n        /* \"shoot/2/重入/1.sol\":440:649  function initWithValue() public payable{\r... */\n      jump\t// out\n        /* \"shoot/2/重入/1.sol\":1216:1483  function isCompleted() public {\r... */\n    tag_30:\n        /* \"shoot/2/重入/1.sol\":1265:1271  isInit */\n      0x3\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"shoot/2/重入/1.sol\":1257:1304  require(isInit, \"You can't do it without init\") */\n      iszero\n      iszero\n      tag_41\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1c\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x596f752063616e277420646f20697420776974686f757420696e697400000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_41:\n        /* \"shoot/2/重入/1.sol\":1323:1324  0 */\n      0x0\n        /* \"shoot/2/重入/1.sol\":1315:1320  score */\n      0x2\n        /* \"shoot/2/重入/1.sol\":1315:1324  score = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"shoot/2/重入/1.sol\":1338:1360  isContract(msg.sender) */\n      tag_42\n        /* \"shoot/2/重入/1.sol\":1349:1359  msg.sender */\n      caller\n        /* \"shoot/2/重入/1.sol\":1338:1348  isContract */\n      tag_43\n        /* \"shoot/2/重入/1.sol\":1338:1360  isContract(msg.sender) */\n      jump\t// in\n    tag_42:\n        /* \"shoot/2/重入/1.sol\":1335:1398  if(isContract(msg.sender)){\r... */\n      iszero\n      tag_44\n      jumpi\n        /* \"shoot/2/重入/1.sol\":1384:1386  25 */\n      0x19\n        /* \"shoot/2/重入/1.sol\":1376:1381  score */\n      0x2\n        /* \"shoot/2/重入/1.sol\":1376:1386  score = 25 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"shoot/2/重入/1.sol\":1335:1398  if(isContract(msg.sender)){\r... */\n    tag_44:\n        /* \"shoot/2/重入/1.sol\":1436:1437  0 */\n      0x0\n        /* \"shoot/2/重入/1.sol\":1419:1423  this */\n      address\n        /* \"shoot/2/重入/1.sol\":1411:1432  address(this).balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"shoot/2/重入/1.sol\":1411:1437  address(this).balance == 0 */\n      eq\n        /* \"shoot/2/重入/1.sol\":1408:1476  if(address(this).balance == 0){\r... */\n      iszero\n      tag_45\n      jumpi\n        /* \"shoot/2/重入/1.sol\":1461:1464  100 */\n      0x64\n        /* \"shoot/2/重入/1.sol\":1453:1458  score */\n      0x2\n        /* \"shoot/2/重入/1.sol\":1453:1464  score = 100 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"shoot/2/重入/1.sol\":1408:1476  if(address(this).balance == 0){\r... */\n    tag_45:\n        /* \"shoot/2/重入/1.sol\":1216:1483  function isCompleted() public {\r... */\n      jump\t// out\n        /* \"shoot/2/重入/1.sol\":1491:1655  function isContract(address addr) private view returns (bool) {\r... */\n    tag_43:\n        /* \"shoot/2/重入/1.sol\":1547:1551  bool */\n      0x0\n        /* \"shoot/2/重入/1.sol\":1564:1573  uint size */\n      dup1\n        /* \"shoot/2/重入/1.sol\":1615:1619  addr */\n      dup3\n        /* \"shoot/2/重入/1.sol\":1603:1620  extcodesize(addr) */\n      extcodesize\n        /* \"shoot/2/重入/1.sol\":1595:1620  size := extcodesize(addr) */\n      swap1\n      pop\n        /* \"shoot/2/重入/1.sol\":1646:1647  0 */\n      0x0\n        /* \"shoot/2/重入/1.sol\":1639:1643  size */\n      dup2\n        /* \"shoot/2/重入/1.sol\":1639:1647  size > 0 */\n      gt\n        /* \"shoot/2/重入/1.sol\":1632:1647  return size > 0 */\n      swap2\n      pop\n        /* \"shoot/2/重入/1.sol\":1491:1655  function isContract(address addr) private view returns (bool) {\r... */\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a7230582029292cbbb5ea6fc6ef6ea8db4d14706c9dea461248801d5959757397461b7cd20029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610551806100536000396000f30060806040526004361061008e576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632e1a7d4d14610093578063521eb273146100b357806370a08231146100de578063b145a5b814610135578063d0e30db014610164578063efedc6691461016e578063f8ef108514610199578063fa391c64146101a3575b600080fd5b6100b1600480360381019080803590602001909291905050506101ba565b005b3480156100bf57600080fd5b506100c86102ab565b6040518082815260200191505060405180910390f35b3480156100ea57600080fd5b5061011f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102ca565b6040518082815260200191505060405180910390f35b34801561014157600080fd5b5061014a610313565b604051808215151515815260200191505060405180910390f35b61016c610326565b005b34801561017a57600080fd5b50610183610375565b6040518082815260200191505060405180910390f35b6101a161037b565b005b3480156101af57600080fd5b506101b8610444565b005b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015151561020857600080fd5b803073ffffffffffffffffffffffffffffffffffffffff16311015151561022e57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff168160405160006040518083038185875af1925050505080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555050565b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600360009054906101000a900460ff1681565b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550565b60025481565b600360009054906101000a900460ff1615156104425766038d7ea4c680003073ffffffffffffffffffffffffffffffffffffffff1631141515610426576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f73686f756c6420696e6974207769746820302e3030312065746865720000000081525060200191505060405180910390fd5b6001600360006101000a81548160ff0219169083151502179055505b565b600360009054906101000a900460ff1615156104c8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f596f752063616e277420646f20697420776974686f757420696e69740000000081525060200191505060405180910390fd5b60006002819055506104d933610512565b156104e75760196002819055505b60003073ffffffffffffffffffffffffffffffffffffffff163114156105105760646002819055505b565b600080823b9050600081119150509190505600a165627a7a7230582029292cbbb5ea6fc6ef6ea8db4d14706c9dea461248801d5959757397461b7cd20029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x551 DUP1 PUSH2 0x53 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x8E JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x93 JUMPI DUP1 PUSH4 0x521EB273 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0xB145A5B8 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0xEFEDC669 EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0xF8EF1085 EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0xFA391C64 EQ PUSH2 0x1A3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1BA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC8 PUSH2 0x2AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14A PUSH2 0x313 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH2 0x326 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x183 PUSH2 0x375 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A1 PUSH2 0x37B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH2 0x444 JUMP JUMPDEST STOP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO ISZERO ISZERO PUSH2 0x208 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE LT ISZERO ISZERO ISZERO PUSH2 0x22E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP POP DUP1 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x442 JUMPI PUSH7 0x38D7EA4C68000 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE EQ ISZERO ISZERO PUSH2 0x426 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x73686F756C6420696E6974207769746820302E30303120657468657200000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x4C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x596F752063616E277420646F20697420776974686F757420696E697400000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x4D9 CALLER PUSH2 0x512 JUMP JUMPDEST ISZERO PUSH2 0x4E7 JUMPI PUSH1 0x19 PUSH1 0x2 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE EQ ISZERO PUSH2 0x510 JUMPI PUSH1 0x64 PUSH1 0x2 DUP2 SWAP1 SSTORE POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0x29 0x29 0x2c 0xbb 0xb5 0xea PUSH16 0xC6EF6EA8DB4D14706C9DEA461248801D MSIZE MSIZE PUSH22 0x7397461B7CD200290000000000000000000000000000 ",
							"sourceMap": "181:1477:0:-;;;381:10;372:6;;:19;;;;;;;;;;;;;;;;;;181:1477;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "60806040526004361061008e576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632e1a7d4d14610093578063521eb273146100b357806370a08231146100de578063b145a5b814610135578063d0e30db014610164578063efedc6691461016e578063f8ef108514610199578063fa391c64146101a3575b600080fd5b6100b1600480360381019080803590602001909291905050506101ba565b005b3480156100bf57600080fd5b506100c86102ab565b6040518082815260200191505060405180910390f35b3480156100ea57600080fd5b5061011f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102ca565b6040518082815260200191505060405180910390f35b34801561014157600080fd5b5061014a610313565b604051808215151515815260200191505060405180910390f35b61016c610326565b005b34801561017a57600080fd5b50610183610375565b6040518082815260200191505060405180910390f35b6101a161037b565b005b3480156101af57600080fd5b506101b8610444565b005b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015151561020857600080fd5b803073ffffffffffffffffffffffffffffffffffffffff16311015151561022e57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff168160405160006040518083038185875af1925050505080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555050565b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600360009054906101000a900460ff1681565b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550565b60025481565b600360009054906101000a900460ff1615156104425766038d7ea4c680003073ffffffffffffffffffffffffffffffffffffffff1631141515610426576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f73686f756c6420696e6974207769746820302e3030312065746865720000000081525060200191505060405180910390fd5b6001600360006101000a81548160ff0219169083151502179055505b565b600360009054906101000a900460ff1615156104c8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f596f752063616e277420646f20697420776974686f757420696e69740000000081525060200191505060405180910390fd5b60006002819055506104d933610512565b156104e75760196002819055505b60003073ffffffffffffffffffffffffffffffffffffffff163114156105105760646002819055505b565b600080823b9050600081119150509190505600a165627a7a7230582029292cbbb5ea6fc6ef6ea8db4d14706c9dea461248801d5959757397461b7cd20029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x8E JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x93 JUMPI DUP1 PUSH4 0x521EB273 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0xB145A5B8 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0xEFEDC669 EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0xF8EF1085 EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0xFA391C64 EQ PUSH2 0x1A3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1BA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC8 PUSH2 0x2AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14A PUSH2 0x313 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH2 0x326 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x183 PUSH2 0x375 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A1 PUSH2 0x37B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH2 0x444 JUMP JUMPDEST STOP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO ISZERO ISZERO PUSH2 0x208 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE LT ISZERO ISZERO ISZERO PUSH2 0x22E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP POP DUP1 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x442 JUMPI PUSH7 0x38D7EA4C68000 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE EQ ISZERO ISZERO PUSH2 0x426 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x73686F756C6420696E6974207769746820302E30303120657468657200000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x4C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x596F752063616E277420646F20697420776974686F757420696E697400000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x4D9 CALLER PUSH2 0x512 JUMP JUMPDEST ISZERO PUSH2 0x4E7 JUMPI PUSH1 0x19 PUSH1 0x2 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE EQ ISZERO PUSH2 0x510 JUMPI PUSH1 0x64 PUSH1 0x2 DUP2 SWAP1 SSTORE POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0x29 0x29 0x2c 0xbb 0xb5 0xea PUSH16 0xC6EF6EA8DB4D14706C9DEA461248801D MSIZE MSIZE PUSH22 0x7397461B7CD200290000000000000000000000000000 ",
							"sourceMap": "181:1477:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;657:240;;;;;;;;;;;;;;;;;;;;;;;;;;1107:101;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1107:101:0;;;;;;;;;;;;;;;;;;;;;;;998;;8:9:-1;5:2;;;30:1;27;20:12;5:2;998:101:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;299:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;299:18:0;;;;;;;;;;;;;;;;;;;;;;;;;;;905:85;;;;;;272:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;272:20:0;;;;;;;;;;;;;;;;;;;;;;;440:209;;;;;;1216:267;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1216:267:0;;;;;;657:240;748:6;724:8;:20;733:10;724:20;;;;;;;;;;;;;;;;:30;;716:39;;;;;;;;799:6;782:4;774:21;;;:31;;766:40;;;;;;;;817:10;:15;;839:6;817:31;;;;;;;;;;;;;;;;;;883:6;859:8;:20;868:10;859:20;;;;;;;;;;;;;;;;:30;;;;;;;;;;;657:240;:::o;1107:101::-;1146:14;1187:4;1179:21;;;1172:28;;1107:101;:::o;998:::-;1051:7;1077:8;:14;1086:4;1077:14;;;;;;;;;;;;;;;;1070:21;;998:101;;;:::o;299:18::-;;;;;;;;;;;;;:::o;905:85::-;973:9;949:8;:20;958:10;949:20;;;;;;;;;;;;;;;;:33;;;;;;;;;;;905:85::o;272:20::-;;;;:::o;440:209::-;494:6;;;;;;;;;;;493:7;490:152;;;549:20;532:4;524:21;;;:45;516:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;626:4;617:6;;:13;;;;;;;;;;;;;;;;;;490:152;440:209::o;1216:267::-;1265:6;;;;;;;;;;;1257:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1323:1;1315:5;:9;;;;1338:22;1349:10;1338;:22::i;:::-;1335:63;;;1384:2;1376:5;:10;;;;1335:63;1436:1;1419:4;1411:21;;;:26;1408:68;;;1461:3;1453:5;:11;;;;1408:68;1216:267::o;1491:164::-;1547:4;1564:9;1615:4;1603:17;1595:25;;1646:1;1639:4;:8;1632:15;;1491:164;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "272200",
								"executionCost": "20554",
								"totalCost": "292754"
							},
							"external": {
								"balanceOf(address)": "603",
								"deposit()": "20518",
								"initWithValue()": "21201",
								"isCompleted()": "31800",
								"isInit()": "508",
								"score()": "504",
								"wallet()": "629",
								"withdraw(uint256)": "infinite"
							},
							"internal": {
								"isContract(address)": "747"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 181,
									"end": 1658,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 181,
									"end": 1658,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 181,
									"end": 1658,
									"name": "MSTORE"
								},
								{
									"begin": 381,
									"end": 391,
									"name": "CALLER"
								},
								{
									"begin": 372,
									"end": 378,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 372,
									"end": 378,
									"name": "DUP1"
								},
								{
									"begin": 372,
									"end": 391,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 372,
									"end": 391,
									"name": "EXP"
								},
								{
									"begin": 372,
									"end": 391,
									"name": "DUP2"
								},
								{
									"begin": 372,
									"end": 391,
									"name": "SLOAD"
								},
								{
									"begin": 372,
									"end": 391,
									"name": "DUP2"
								},
								{
									"begin": 372,
									"end": 391,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 372,
									"end": 391,
									"name": "MUL"
								},
								{
									"begin": 372,
									"end": 391,
									"name": "NOT"
								},
								{
									"begin": 372,
									"end": 391,
									"name": "AND"
								},
								{
									"begin": 372,
									"end": 391,
									"name": "SWAP1"
								},
								{
									"begin": 372,
									"end": 391,
									"name": "DUP4"
								},
								{
									"begin": 372,
									"end": 391,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 372,
									"end": 391,
									"name": "AND"
								},
								{
									"begin": 372,
									"end": 391,
									"name": "MUL"
								},
								{
									"begin": 372,
									"end": 391,
									"name": "OR"
								},
								{
									"begin": 372,
									"end": 391,
									"name": "SWAP1"
								},
								{
									"begin": 372,
									"end": 391,
									"name": "SSTORE"
								},
								{
									"begin": 372,
									"end": 391,
									"name": "POP"
								},
								{
									"begin": 181,
									"end": 1658,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 181,
									"end": 1658,
									"name": "DUP1"
								},
								{
									"begin": 181,
									"end": 1658,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 181,
									"end": 1658,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 181,
									"end": 1658,
									"name": "CODECOPY"
								},
								{
									"begin": 181,
									"end": 1658,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 181,
									"end": 1658,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a7230582029292cbbb5ea6fc6ef6ea8db4d14706c9dea461248801d5959757397461b7cd20029",
									".code": [
										{
											"begin": 181,
											"end": 1658,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 181,
											"end": 1658,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 181,
											"end": 1658,
											"name": "MSTORE"
										},
										{
											"begin": 181,
											"end": 1658,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 181,
											"end": 1658,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 181,
											"end": 1658,
											"name": "LT"
										},
										{
											"begin": 181,
											"end": 1658,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 181,
											"end": 1658,
											"name": "JUMPI"
										},
										{
											"begin": 181,
											"end": 1658,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 181,
											"end": 1658,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 181,
											"end": 1658,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 181,
											"end": 1658,
											"name": "SWAP1"
										},
										{
											"begin": 181,
											"end": 1658,
											"name": "DIV"
										},
										{
											"begin": 181,
											"end": 1658,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 181,
											"end": 1658,
											"name": "AND"
										},
										{
											"begin": 181,
											"end": 1658,
											"name": "DUP1"
										},
										{
											"begin": 181,
											"end": 1658,
											"name": "PUSH",
											"value": "2E1A7D4D"
										},
										{
											"begin": 181,
											"end": 1658,
											"name": "EQ"
										},
										{
											"begin": 181,
											"end": 1658,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 181,
											"end": 1658,
											"name": "JUMPI"
										},
										{
											"begin": 181,
											"end": 1658,
											"name": "DUP1"
										},
										{
											"begin": 181,
											"end": 1658,
											"name": "PUSH",
											"value": "521EB273"
										},
										{
											"begin": 181,
											"end": 1658,
											"name": "EQ"
										},
										{
											"begin": 181,
											"end": 1658,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 181,
											"end": 1658,
											"name": "JUMPI"
										},
										{
											"begin": 181,
											"end": 1658,
											"name": "DUP1"
										},
										{
											"begin": 181,
											"end": 1658,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 181,
											"end": 1658,
											"name": "EQ"
										},
										{
											"begin": 181,
											"end": 1658,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 181,
											"end": 1658,
											"name": "JUMPI"
										},
										{
											"begin": 181,
											"end": 1658,
											"name": "DUP1"
										},
										{
											"begin": 181,
											"end": 1658,
											"name": "PUSH",
											"value": "B145A5B8"
										},
										{
											"begin": 181,
											"end": 1658,
											"name": "EQ"
										},
										{
											"begin": 181,
											"end": 1658,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 181,
											"end": 1658,
											"name": "JUMPI"
										},
										{
											"begin": 181,
											"end": 1658,
											"name": "DUP1"
										},
										{
											"begin": 181,
											"end": 1658,
											"name": "PUSH",
											"value": "D0E30DB0"
										},
										{
											"begin": 181,
											"end": 1658,
											"name": "EQ"
										},
										{
											"begin": 181,
											"end": 1658,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 181,
											"end": 1658,
											"name": "JUMPI"
										},
										{
											"begin": 181,
											"end": 1658,
											"name": "DUP1"
										},
										{
											"begin": 181,
											"end": 1658,
											"name": "PUSH",
											"value": "EFEDC669"
										},
										{
											"begin": 181,
											"end": 1658,
											"name": "EQ"
										},
										{
											"begin": 181,
											"end": 1658,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 181,
											"end": 1658,
											"name": "JUMPI"
										},
										{
											"begin": 181,
											"end": 1658,
											"name": "DUP1"
										},
										{
											"begin": 181,
											"end": 1658,
											"name": "PUSH",
											"value": "F8EF1085"
										},
										{
											"begin": 181,
											"end": 1658,
											"name": "EQ"
										},
										{
											"begin": 181,
											"end": 1658,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 181,
											"end": 1658,
											"name": "JUMPI"
										},
										{
											"begin": 181,
											"end": 1658,
											"name": "DUP1"
										},
										{
											"begin": 181,
											"end": 1658,
											"name": "PUSH",
											"value": "FA391C64"
										},
										{
											"begin": 181,
											"end": 1658,
											"name": "EQ"
										},
										{
											"begin": 181,
											"end": 1658,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 181,
											"end": 1658,
											"name": "JUMPI"
										},
										{
											"begin": 181,
											"end": 1658,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 181,
											"end": 1658,
											"name": "JUMPDEST"
										},
										{
											"begin": 181,
											"end": 1658,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 181,
											"end": 1658,
											"name": "DUP1"
										},
										{
											"begin": 181,
											"end": 1658,
											"name": "REVERT"
										},
										{
											"begin": 657,
											"end": 897,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 657,
											"end": 897,
											"name": "JUMPDEST"
										},
										{
											"begin": 657,
											"end": 897,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 657,
											"end": 897,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 657,
											"end": 897,
											"name": "DUP1"
										},
										{
											"begin": 657,
											"end": 897,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 657,
											"end": 897,
											"name": "SUB"
										},
										{
											"begin": 657,
											"end": 897,
											"name": "DUP2"
										},
										{
											"begin": 657,
											"end": 897,
											"name": "ADD"
										},
										{
											"begin": 657,
											"end": 897,
											"name": "SWAP1"
										},
										{
											"begin": 657,
											"end": 897,
											"name": "DUP1"
										},
										{
											"begin": 657,
											"end": 897,
											"name": "DUP1"
										},
										{
											"begin": 657,
											"end": 897,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 657,
											"end": 897,
											"name": "SWAP1"
										},
										{
											"begin": 657,
											"end": 897,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 657,
											"end": 897,
											"name": "ADD"
										},
										{
											"begin": 657,
											"end": 897,
											"name": "SWAP1"
										},
										{
											"begin": 657,
											"end": 897,
											"name": "SWAP3"
										},
										{
											"begin": 657,
											"end": 897,
											"name": "SWAP2"
										},
										{
											"begin": 657,
											"end": 897,
											"name": "SWAP1"
										},
										{
											"begin": 657,
											"end": 897,
											"name": "POP"
										},
										{
											"begin": 657,
											"end": 897,
											"name": "POP"
										},
										{
											"begin": 657,
											"end": 897,
											"name": "POP"
										},
										{
											"begin": 657,
											"end": 897,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 657,
											"end": 897,
											"name": "JUMP"
										},
										{
											"begin": 657,
											"end": 897,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 657,
											"end": 897,
											"name": "JUMPDEST"
										},
										{
											"begin": 657,
											"end": 897,
											"name": "STOP"
										},
										{
											"begin": 1107,
											"end": 1208,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 1107,
											"end": 1208,
											"name": "JUMPDEST"
										},
										{
											"begin": 1107,
											"end": 1208,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1107,
											"end": 1208,
											"name": "POP"
										},
										{
											"begin": 1107,
											"end": 1208,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 1107,
											"end": 1208,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 1107,
											"end": 1208,
											"name": "JUMP"
										},
										{
											"begin": 1107,
											"end": 1208,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 1107,
											"end": 1208,
											"name": "JUMPDEST"
										},
										{
											"begin": 1107,
											"end": 1208,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1107,
											"end": 1208,
											"name": "MLOAD"
										},
										{
											"begin": 1107,
											"end": 1208,
											"name": "DUP1"
										},
										{
											"begin": 1107,
											"end": 1208,
											"name": "DUP3"
										},
										{
											"begin": 1107,
											"end": 1208,
											"name": "DUP2"
										},
										{
											"begin": 1107,
											"end": 1208,
											"name": "MSTORE"
										},
										{
											"begin": 1107,
											"end": 1208,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1107,
											"end": 1208,
											"name": "ADD"
										},
										{
											"begin": 1107,
											"end": 1208,
											"name": "SWAP2"
										},
										{
											"begin": 1107,
											"end": 1208,
											"name": "POP"
										},
										{
											"begin": 1107,
											"end": 1208,
											"name": "POP"
										},
										{
											"begin": 1107,
											"end": 1208,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1107,
											"end": 1208,
											"name": "MLOAD"
										},
										{
											"begin": 1107,
											"end": 1208,
											"name": "DUP1"
										},
										{
											"begin": 1107,
											"end": 1208,
											"name": "SWAP2"
										},
										{
											"begin": 1107,
											"end": 1208,
											"name": "SUB"
										},
										{
											"begin": 1107,
											"end": 1208,
											"name": "SWAP1"
										},
										{
											"begin": 1107,
											"end": 1208,
											"name": "RETURN"
										},
										{
											"begin": 998,
											"end": 1099,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 998,
											"end": 1099,
											"name": "JUMPDEST"
										},
										{
											"begin": 998,
											"end": 1099,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 998,
											"end": 1099,
											"name": "POP"
										},
										{
											"begin": 998,
											"end": 1099,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 998,
											"end": 1099,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 998,
											"end": 1099,
											"name": "DUP1"
										},
										{
											"begin": 998,
											"end": 1099,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 998,
											"end": 1099,
											"name": "SUB"
										},
										{
											"begin": 998,
											"end": 1099,
											"name": "DUP2"
										},
										{
											"begin": 998,
											"end": 1099,
											"name": "ADD"
										},
										{
											"begin": 998,
											"end": 1099,
											"name": "SWAP1"
										},
										{
											"begin": 998,
											"end": 1099,
											"name": "DUP1"
										},
										{
											"begin": 998,
											"end": 1099,
											"name": "DUP1"
										},
										{
											"begin": 998,
											"end": 1099,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 998,
											"end": 1099,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 998,
											"end": 1099,
											"name": "AND"
										},
										{
											"begin": 998,
											"end": 1099,
											"name": "SWAP1"
										},
										{
											"begin": 998,
											"end": 1099,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 998,
											"end": 1099,
											"name": "ADD"
										},
										{
											"begin": 998,
											"end": 1099,
											"name": "SWAP1"
										},
										{
											"begin": 998,
											"end": 1099,
											"name": "SWAP3"
										},
										{
											"begin": 998,
											"end": 1099,
											"name": "SWAP2"
										},
										{
											"begin": 998,
											"end": 1099,
											"name": "SWAP1"
										},
										{
											"begin": 998,
											"end": 1099,
											"name": "POP"
										},
										{
											"begin": 998,
											"end": 1099,
											"name": "POP"
										},
										{
											"begin": 998,
											"end": 1099,
											"name": "POP"
										},
										{
											"begin": 998,
											"end": 1099,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 998,
											"end": 1099,
											"name": "JUMP"
										},
										{
											"begin": 998,
											"end": 1099,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 998,
											"end": 1099,
											"name": "JUMPDEST"
										},
										{
											"begin": 998,
											"end": 1099,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 998,
											"end": 1099,
											"name": "MLOAD"
										},
										{
											"begin": 998,
											"end": 1099,
											"name": "DUP1"
										},
										{
											"begin": 998,
											"end": 1099,
											"name": "DUP3"
										},
										{
											"begin": 998,
											"end": 1099,
											"name": "DUP2"
										},
										{
											"begin": 998,
											"end": 1099,
											"name": "MSTORE"
										},
										{
											"begin": 998,
											"end": 1099,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 998,
											"end": 1099,
											"name": "ADD"
										},
										{
											"begin": 998,
											"end": 1099,
											"name": "SWAP2"
										},
										{
											"begin": 998,
											"end": 1099,
											"name": "POP"
										},
										{
											"begin": 998,
											"end": 1099,
											"name": "POP"
										},
										{
											"begin": 998,
											"end": 1099,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 998,
											"end": 1099,
											"name": "MLOAD"
										},
										{
											"begin": 998,
											"end": 1099,
											"name": "DUP1"
										},
										{
											"begin": 998,
											"end": 1099,
											"name": "SWAP2"
										},
										{
											"begin": 998,
											"end": 1099,
											"name": "SUB"
										},
										{
											"begin": 998,
											"end": 1099,
											"name": "SWAP1"
										},
										{
											"begin": 998,
											"end": 1099,
											"name": "RETURN"
										},
										{
											"begin": 299,
											"end": 317,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 299,
											"end": 317,
											"name": "JUMPDEST"
										},
										{
											"begin": 299,
											"end": 317,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 299,
											"end": 317,
											"name": "POP"
										},
										{
											"begin": 299,
											"end": 317,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 299,
											"end": 317,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 299,
											"end": 317,
											"name": "JUMP"
										},
										{
											"begin": 299,
											"end": 317,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 299,
											"end": 317,
											"name": "JUMPDEST"
										},
										{
											"begin": 299,
											"end": 317,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 299,
											"end": 317,
											"name": "MLOAD"
										},
										{
											"begin": 299,
											"end": 317,
											"name": "DUP1"
										},
										{
											"begin": 299,
											"end": 317,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 317,
											"name": "ISZERO"
										},
										{
											"begin": 299,
											"end": 317,
											"name": "ISZERO"
										},
										{
											"begin": 299,
											"end": 317,
											"name": "ISZERO"
										},
										{
											"begin": 299,
											"end": 317,
											"name": "ISZERO"
										},
										{
											"begin": 299,
											"end": 317,
											"name": "DUP2"
										},
										{
											"begin": 299,
											"end": 317,
											"name": "MSTORE"
										},
										{
											"begin": 299,
											"end": 317,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 299,
											"end": 317,
											"name": "ADD"
										},
										{
											"begin": 299,
											"end": 317,
											"name": "SWAP2"
										},
										{
											"begin": 299,
											"end": 317,
											"name": "POP"
										},
										{
											"begin": 299,
											"end": 317,
											"name": "POP"
										},
										{
											"begin": 299,
											"end": 317,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 299,
											"end": 317,
											"name": "MLOAD"
										},
										{
											"begin": 299,
											"end": 317,
											"name": "DUP1"
										},
										{
											"begin": 299,
											"end": 317,
											"name": "SWAP2"
										},
										{
											"begin": 299,
											"end": 317,
											"name": "SUB"
										},
										{
											"begin": 299,
											"end": 317,
											"name": "SWAP1"
										},
										{
											"begin": 299,
											"end": 317,
											"name": "RETURN"
										},
										{
											"begin": 905,
											"end": 990,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 905,
											"end": 990,
											"name": "JUMPDEST"
										},
										{
											"begin": 905,
											"end": 990,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 905,
											"end": 990,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 905,
											"end": 990,
											"name": "JUMP"
										},
										{
											"begin": 905,
											"end": 990,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 905,
											"end": 990,
											"name": "JUMPDEST"
										},
										{
											"begin": 905,
											"end": 990,
											"name": "STOP"
										},
										{
											"begin": 272,
											"end": 292,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 272,
											"end": 292,
											"name": "JUMPDEST"
										},
										{
											"begin": 272,
											"end": 292,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 272,
											"end": 292,
											"name": "POP"
										},
										{
											"begin": 272,
											"end": 292,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 272,
											"end": 292,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 272,
											"end": 292,
											"name": "JUMP"
										},
										{
											"begin": 272,
											"end": 292,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 272,
											"end": 292,
											"name": "JUMPDEST"
										},
										{
											"begin": 272,
											"end": 292,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 272,
											"end": 292,
											"name": "MLOAD"
										},
										{
											"begin": 272,
											"end": 292,
											"name": "DUP1"
										},
										{
											"begin": 272,
											"end": 292,
											"name": "DUP3"
										},
										{
											"begin": 272,
											"end": 292,
											"name": "DUP2"
										},
										{
											"begin": 272,
											"end": 292,
											"name": "MSTORE"
										},
										{
											"begin": 272,
											"end": 292,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 272,
											"end": 292,
											"name": "ADD"
										},
										{
											"begin": 272,
											"end": 292,
											"name": "SWAP2"
										},
										{
											"begin": 272,
											"end": 292,
											"name": "POP"
										},
										{
											"begin": 272,
											"end": 292,
											"name": "POP"
										},
										{
											"begin": 272,
											"end": 292,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 272,
											"end": 292,
											"name": "MLOAD"
										},
										{
											"begin": 272,
											"end": 292,
											"name": "DUP1"
										},
										{
											"begin": 272,
											"end": 292,
											"name": "SWAP2"
										},
										{
											"begin": 272,
											"end": 292,
											"name": "SUB"
										},
										{
											"begin": 272,
											"end": 292,
											"name": "SWAP1"
										},
										{
											"begin": 272,
											"end": 292,
											"name": "RETURN"
										},
										{
											"begin": 440,
											"end": 649,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 440,
											"end": 649,
											"name": "JUMPDEST"
										},
										{
											"begin": 440,
											"end": 649,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 440,
											"end": 649,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 440,
											"end": 649,
											"name": "JUMP"
										},
										{
											"begin": 440,
											"end": 649,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 440,
											"end": 649,
											"name": "JUMPDEST"
										},
										{
											"begin": 440,
											"end": 649,
											"name": "STOP"
										},
										{
											"begin": 1216,
											"end": 1483,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 1216,
											"end": 1483,
											"name": "JUMPDEST"
										},
										{
											"begin": 1216,
											"end": 1483,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1216,
											"end": 1483,
											"name": "POP"
										},
										{
											"begin": 1216,
											"end": 1483,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 1216,
											"end": 1483,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 1216,
											"end": 1483,
											"name": "JUMP"
										},
										{
											"begin": 1216,
											"end": 1483,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 1216,
											"end": 1483,
											"name": "JUMPDEST"
										},
										{
											"begin": 1216,
											"end": 1483,
											"name": "STOP"
										},
										{
											"begin": 657,
											"end": 897,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 657,
											"end": 897,
											"name": "JUMPDEST"
										},
										{
											"begin": 748,
											"end": 754,
											"name": "DUP1"
										},
										{
											"begin": 724,
											"end": 732,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 724,
											"end": 744,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 733,
											"end": 743,
											"name": "CALLER"
										},
										{
											"begin": 724,
											"end": 744,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 724,
											"end": 744,
											"name": "AND"
										},
										{
											"begin": 724,
											"end": 744,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 724,
											"end": 744,
											"name": "AND"
										},
										{
											"begin": 724,
											"end": 744,
											"name": "DUP2"
										},
										{
											"begin": 724,
											"end": 744,
											"name": "MSTORE"
										},
										{
											"begin": 724,
											"end": 744,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 724,
											"end": 744,
											"name": "ADD"
										},
										{
											"begin": 724,
											"end": 744,
											"name": "SWAP1"
										},
										{
											"begin": 724,
											"end": 744,
											"name": "DUP2"
										},
										{
											"begin": 724,
											"end": 744,
											"name": "MSTORE"
										},
										{
											"begin": 724,
											"end": 744,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 724,
											"end": 744,
											"name": "ADD"
										},
										{
											"begin": 724,
											"end": 744,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 724,
											"end": 744,
											"name": "KECCAK256"
										},
										{
											"begin": 724,
											"end": 744,
											"name": "SLOAD"
										},
										{
											"begin": 724,
											"end": 754,
											"name": "LT"
										},
										{
											"begin": 724,
											"end": 754,
											"name": "ISZERO"
										},
										{
											"begin": 716,
											"end": 755,
											"name": "ISZERO"
										},
										{
											"begin": 716,
											"end": 755,
											"name": "ISZERO"
										},
										{
											"begin": 716,
											"end": 755,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 716,
											"end": 755,
											"name": "JUMPI"
										},
										{
											"begin": 716,
											"end": 755,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 716,
											"end": 755,
											"name": "DUP1"
										},
										{
											"begin": 716,
											"end": 755,
											"name": "REVERT"
										},
										{
											"begin": 716,
											"end": 755,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 716,
											"end": 755,
											"name": "JUMPDEST"
										},
										{
											"begin": 799,
											"end": 805,
											"name": "DUP1"
										},
										{
											"begin": 782,
											"end": 786,
											"name": "ADDRESS"
										},
										{
											"begin": 774,
											"end": 795,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 774,
											"end": 795,
											"name": "AND"
										},
										{
											"begin": 774,
											"end": 795,
											"name": "BALANCE"
										},
										{
											"begin": 774,
											"end": 805,
											"name": "LT"
										},
										{
											"begin": 774,
											"end": 805,
											"name": "ISZERO"
										},
										{
											"begin": 766,
											"end": 806,
											"name": "ISZERO"
										},
										{
											"begin": 766,
											"end": 806,
											"name": "ISZERO"
										},
										{
											"begin": 766,
											"end": 806,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 766,
											"end": 806,
											"name": "JUMPI"
										},
										{
											"begin": 766,
											"end": 806,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 766,
											"end": 806,
											"name": "DUP1"
										},
										{
											"begin": 766,
											"end": 806,
											"name": "REVERT"
										},
										{
											"begin": 766,
											"end": 806,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 766,
											"end": 806,
											"name": "JUMPDEST"
										},
										{
											"begin": 817,
											"end": 827,
											"name": "CALLER"
										},
										{
											"begin": 817,
											"end": 832,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 832,
											"name": "AND"
										},
										{
											"begin": 839,
											"end": 845,
											"name": "DUP2"
										},
										{
											"begin": 817,
											"end": 848,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 817,
											"end": 848,
											"name": "MLOAD"
										},
										{
											"begin": 817,
											"end": 848,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 817,
											"end": 848,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 817,
											"end": 848,
											"name": "MLOAD"
										},
										{
											"begin": 817,
											"end": 848,
											"name": "DUP1"
										},
										{
											"begin": 817,
											"end": 848,
											"name": "DUP4"
										},
										{
											"begin": 817,
											"end": 848,
											"name": "SUB"
										},
										{
											"begin": 817,
											"end": 848,
											"name": "DUP2"
										},
										{
											"begin": 817,
											"end": 848,
											"name": "DUP6"
										},
										{
											"begin": 817,
											"end": 848,
											"name": "DUP8"
										},
										{
											"begin": 817,
											"end": 848,
											"name": "GAS"
										},
										{
											"begin": 817,
											"end": 848,
											"name": "CALL"
										},
										{
											"begin": 817,
											"end": 848,
											"name": "SWAP3"
										},
										{
											"begin": 817,
											"end": 848,
											"name": "POP"
										},
										{
											"begin": 817,
											"end": 848,
											"name": "POP"
										},
										{
											"begin": 817,
											"end": 848,
											"name": "POP"
										},
										{
											"begin": 817,
											"end": 848,
											"name": "POP"
										},
										{
											"begin": 883,
											"end": 889,
											"name": "DUP1"
										},
										{
											"begin": 859,
											"end": 867,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 859,
											"end": 879,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 868,
											"end": 878,
											"name": "CALLER"
										},
										{
											"begin": 859,
											"end": 879,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 859,
											"end": 879,
											"name": "AND"
										},
										{
											"begin": 859,
											"end": 879,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 859,
											"end": 879,
											"name": "AND"
										},
										{
											"begin": 859,
											"end": 879,
											"name": "DUP2"
										},
										{
											"begin": 859,
											"end": 879,
											"name": "MSTORE"
										},
										{
											"begin": 859,
											"end": 879,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 859,
											"end": 879,
											"name": "ADD"
										},
										{
											"begin": 859,
											"end": 879,
											"name": "SWAP1"
										},
										{
											"begin": 859,
											"end": 879,
											"name": "DUP2"
										},
										{
											"begin": 859,
											"end": 879,
											"name": "MSTORE"
										},
										{
											"begin": 859,
											"end": 879,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 859,
											"end": 879,
											"name": "ADD"
										},
										{
											"begin": 859,
											"end": 879,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 859,
											"end": 879,
											"name": "KECCAK256"
										},
										{
											"begin": 859,
											"end": 879,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 859,
											"end": 889,
											"name": "DUP3"
										},
										{
											"begin": 859,
											"end": 889,
											"name": "DUP3"
										},
										{
											"begin": 859,
											"end": 889,
											"name": "SLOAD"
										},
										{
											"begin": 859,
											"end": 889,
											"name": "SUB"
										},
										{
											"begin": 859,
											"end": 889,
											"name": "SWAP3"
										},
										{
											"begin": 859,
											"end": 889,
											"name": "POP"
										},
										{
											"begin": 859,
											"end": 889,
											"name": "POP"
										},
										{
											"begin": 859,
											"end": 889,
											"name": "DUP2"
										},
										{
											"begin": 859,
											"end": 889,
											"name": "SWAP1"
										},
										{
											"begin": 859,
											"end": 889,
											"name": "SSTORE"
										},
										{
											"begin": 859,
											"end": 889,
											"name": "POP"
										},
										{
											"begin": 657,
											"end": 897,
											"name": "POP"
										},
										{
											"begin": 657,
											"end": 897,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1107,
											"end": 1208,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 1107,
											"end": 1208,
											"name": "JUMPDEST"
										},
										{
											"begin": 1146,
											"end": 1160,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1187,
											"end": 1191,
											"name": "ADDRESS"
										},
										{
											"begin": 1179,
											"end": 1200,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1179,
											"end": 1200,
											"name": "AND"
										},
										{
											"begin": 1179,
											"end": 1200,
											"name": "BALANCE"
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "SWAP1"
										},
										{
											"begin": 1172,
											"end": 1200,
											"name": "POP"
										},
										{
											"begin": 1107,
											"end": 1208,
											"name": "SWAP1"
										},
										{
											"begin": 1107,
											"end": 1208,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 998,
											"end": 1099,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 998,
											"end": 1099,
											"name": "JUMPDEST"
										},
										{
											"begin": 1051,
											"end": 1058,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1077,
											"end": 1085,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1077,
											"end": 1091,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1086,
											"end": 1090,
											"name": "DUP4"
										},
										{
											"begin": 1077,
											"end": 1091,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1077,
											"end": 1091,
											"name": "AND"
										},
										{
											"begin": 1077,
											"end": 1091,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1077,
											"end": 1091,
											"name": "AND"
										},
										{
											"begin": 1077,
											"end": 1091,
											"name": "DUP2"
										},
										{
											"begin": 1077,
											"end": 1091,
											"name": "MSTORE"
										},
										{
											"begin": 1077,
											"end": 1091,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1077,
											"end": 1091,
											"name": "ADD"
										},
										{
											"begin": 1077,
											"end": 1091,
											"name": "SWAP1"
										},
										{
											"begin": 1077,
											"end": 1091,
											"name": "DUP2"
										},
										{
											"begin": 1077,
											"end": 1091,
											"name": "MSTORE"
										},
										{
											"begin": 1077,
											"end": 1091,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1077,
											"end": 1091,
											"name": "ADD"
										},
										{
											"begin": 1077,
											"end": 1091,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1077,
											"end": 1091,
											"name": "KECCAK256"
										},
										{
											"begin": 1077,
											"end": 1091,
											"name": "SLOAD"
										},
										{
											"begin": 1070,
											"end": 1091,
											"name": "SWAP1"
										},
										{
											"begin": 1070,
											"end": 1091,
											"name": "POP"
										},
										{
											"begin": 998,
											"end": 1099,
											"name": "SWAP2"
										},
										{
											"begin": 998,
											"end": 1099,
											"name": "SWAP1"
										},
										{
											"begin": 998,
											"end": 1099,
											"name": "POP"
										},
										{
											"begin": 998,
											"end": 1099,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 299,
											"end": 317,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 299,
											"end": 317,
											"name": "JUMPDEST"
										},
										{
											"begin": 299,
											"end": 317,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 299,
											"end": 317,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 299,
											"end": 317,
											"name": "SWAP1"
										},
										{
											"begin": 299,
											"end": 317,
											"name": "SLOAD"
										},
										{
											"begin": 299,
											"end": 317,
											"name": "SWAP1"
										},
										{
											"begin": 299,
											"end": 317,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 299,
											"end": 317,
											"name": "EXP"
										},
										{
											"begin": 299,
											"end": 317,
											"name": "SWAP1"
										},
										{
											"begin": 299,
											"end": 317,
											"name": "DIV"
										},
										{
											"begin": 299,
											"end": 317,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 299,
											"end": 317,
											"name": "AND"
										},
										{
											"begin": 299,
											"end": 317,
											"name": "DUP2"
										},
										{
											"begin": 299,
											"end": 317,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 905,
											"end": 990,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 905,
											"end": 990,
											"name": "JUMPDEST"
										},
										{
											"begin": 973,
											"end": 982,
											"name": "CALLVALUE"
										},
										{
											"begin": 949,
											"end": 957,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 949,
											"end": 969,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 958,
											"end": 968,
											"name": "CALLER"
										},
										{
											"begin": 949,
											"end": 969,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 949,
											"end": 969,
											"name": "AND"
										},
										{
											"begin": 949,
											"end": 969,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 949,
											"end": 969,
											"name": "AND"
										},
										{
											"begin": 949,
											"end": 969,
											"name": "DUP2"
										},
										{
											"begin": 949,
											"end": 969,
											"name": "MSTORE"
										},
										{
											"begin": 949,
											"end": 969,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 949,
											"end": 969,
											"name": "ADD"
										},
										{
											"begin": 949,
											"end": 969,
											"name": "SWAP1"
										},
										{
											"begin": 949,
											"end": 969,
											"name": "DUP2"
										},
										{
											"begin": 949,
											"end": 969,
											"name": "MSTORE"
										},
										{
											"begin": 949,
											"end": 969,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 949,
											"end": 969,
											"name": "ADD"
										},
										{
											"begin": 949,
											"end": 969,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 949,
											"end": 969,
											"name": "KECCAK256"
										},
										{
											"begin": 949,
											"end": 969,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 949,
											"end": 982,
											"name": "DUP3"
										},
										{
											"begin": 949,
											"end": 982,
											"name": "DUP3"
										},
										{
											"begin": 949,
											"end": 982,
											"name": "SLOAD"
										},
										{
											"begin": 949,
											"end": 982,
											"name": "ADD"
										},
										{
											"begin": 949,
											"end": 982,
											"name": "SWAP3"
										},
										{
											"begin": 949,
											"end": 982,
											"name": "POP"
										},
										{
											"begin": 949,
											"end": 982,
											"name": "POP"
										},
										{
											"begin": 949,
											"end": 982,
											"name": "DUP2"
										},
										{
											"begin": 949,
											"end": 982,
											"name": "SWAP1"
										},
										{
											"begin": 949,
											"end": 982,
											"name": "SSTORE"
										},
										{
											"begin": 949,
											"end": 982,
											"name": "POP"
										},
										{
											"begin": 905,
											"end": 990,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 272,
											"end": 292,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 272,
											"end": 292,
											"name": "JUMPDEST"
										},
										{
											"begin": 272,
											"end": 292,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 272,
											"end": 292,
											"name": "SLOAD"
										},
										{
											"begin": 272,
											"end": 292,
											"name": "DUP2"
										},
										{
											"begin": 272,
											"end": 292,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 440,
											"end": 649,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 440,
											"end": 649,
											"name": "JUMPDEST"
										},
										{
											"begin": 494,
											"end": 500,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 494,
											"end": 500,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 494,
											"end": 500,
											"name": "SWAP1"
										},
										{
											"begin": 494,
											"end": 500,
											"name": "SLOAD"
										},
										{
											"begin": 494,
											"end": 500,
											"name": "SWAP1"
										},
										{
											"begin": 494,
											"end": 500,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 494,
											"end": 500,
											"name": "EXP"
										},
										{
											"begin": 494,
											"end": 500,
											"name": "SWAP1"
										},
										{
											"begin": 494,
											"end": 500,
											"name": "DIV"
										},
										{
											"begin": 494,
											"end": 500,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 494,
											"end": 500,
											"name": "AND"
										},
										{
											"begin": 493,
											"end": 500,
											"name": "ISZERO"
										},
										{
											"begin": 490,
											"end": 642,
											"name": "ISZERO"
										},
										{
											"begin": 490,
											"end": 642,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 490,
											"end": 642,
											"name": "JUMPI"
										},
										{
											"begin": 549,
											"end": 569,
											"name": "PUSH",
											"value": "38D7EA4C68000"
										},
										{
											"begin": 532,
											"end": 536,
											"name": "ADDRESS"
										},
										{
											"begin": 524,
											"end": 545,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 524,
											"end": 545,
											"name": "AND"
										},
										{
											"begin": 524,
											"end": 545,
											"name": "BALANCE"
										},
										{
											"begin": 524,
											"end": 569,
											"name": "EQ"
										},
										{
											"begin": 516,
											"end": 602,
											"name": "ISZERO"
										},
										{
											"begin": 516,
											"end": 602,
											"name": "ISZERO"
										},
										{
											"begin": 516,
											"end": 602,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 516,
											"end": 602,
											"name": "JUMPI"
										},
										{
											"begin": 516,
											"end": 602,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 516,
											"end": 602,
											"name": "MLOAD"
										},
										{
											"begin": 516,
											"end": 602,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 516,
											"end": 602,
											"name": "DUP2"
										},
										{
											"begin": 516,
											"end": 602,
											"name": "MSTORE"
										},
										{
											"begin": 516,
											"end": 602,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 516,
											"end": 602,
											"name": "ADD"
										},
										{
											"begin": 516,
											"end": 602,
											"name": "DUP1"
										},
										{
											"begin": 516,
											"end": 602,
											"name": "DUP1"
										},
										{
											"begin": 516,
											"end": 602,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 516,
											"end": 602,
											"name": "ADD"
										},
										{
											"begin": 516,
											"end": 602,
											"name": "DUP3"
										},
										{
											"begin": 516,
											"end": 602,
											"name": "DUP2"
										},
										{
											"begin": 516,
											"end": 602,
											"name": "SUB"
										},
										{
											"begin": 516,
											"end": 602,
											"name": "DUP3"
										},
										{
											"begin": 516,
											"end": 602,
											"name": "MSTORE"
										},
										{
											"begin": 516,
											"end": 602,
											"name": "PUSH",
											"value": "1C"
										},
										{
											"begin": 516,
											"end": 602,
											"name": "DUP2"
										},
										{
											"begin": 516,
											"end": 602,
											"name": "MSTORE"
										},
										{
											"begin": 516,
											"end": 602,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 516,
											"end": 602,
											"name": "ADD"
										},
										{
											"begin": 516,
											"end": 602,
											"name": "DUP1"
										},
										{
											"begin": 516,
											"end": 602,
											"name": "PUSH",
											"value": "73686F756C6420696E6974207769746820302E30303120657468657200000000"
										},
										{
											"begin": 516,
											"end": 602,
											"name": "DUP2"
										},
										{
											"begin": 516,
											"end": 602,
											"name": "MSTORE"
										},
										{
											"begin": 516,
											"end": 602,
											"name": "POP"
										},
										{
											"begin": 516,
											"end": 602,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 516,
											"end": 602,
											"name": "ADD"
										},
										{
											"begin": 516,
											"end": 602,
											"name": "SWAP2"
										},
										{
											"begin": 516,
											"end": 602,
											"name": "POP"
										},
										{
											"begin": 516,
											"end": 602,
											"name": "POP"
										},
										{
											"begin": 516,
											"end": 602,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 516,
											"end": 602,
											"name": "MLOAD"
										},
										{
											"begin": 516,
											"end": 602,
											"name": "DUP1"
										},
										{
											"begin": 516,
											"end": 602,
											"name": "SWAP2"
										},
										{
											"begin": 516,
											"end": 602,
											"name": "SUB"
										},
										{
											"begin": 516,
											"end": 602,
											"name": "SWAP1"
										},
										{
											"begin": 516,
											"end": 602,
											"name": "REVERT"
										},
										{
											"begin": 516,
											"end": 602,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 516,
											"end": 602,
											"name": "JUMPDEST"
										},
										{
											"begin": 626,
											"end": 630,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 617,
											"end": 623,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 617,
											"end": 623,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 617,
											"end": 630,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 617,
											"end": 630,
											"name": "EXP"
										},
										{
											"begin": 617,
											"end": 630,
											"name": "DUP2"
										},
										{
											"begin": 617,
											"end": 630,
											"name": "SLOAD"
										},
										{
											"begin": 617,
											"end": 630,
											"name": "DUP2"
										},
										{
											"begin": 617,
											"end": 630,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 617,
											"end": 630,
											"name": "MUL"
										},
										{
											"begin": 617,
											"end": 630,
											"name": "NOT"
										},
										{
											"begin": 617,
											"end": 630,
											"name": "AND"
										},
										{
											"begin": 617,
											"end": 630,
											"name": "SWAP1"
										},
										{
											"begin": 617,
											"end": 630,
											"name": "DUP4"
										},
										{
											"begin": 617,
											"end": 630,
											"name": "ISZERO"
										},
										{
											"begin": 617,
											"end": 630,
											"name": "ISZERO"
										},
										{
											"begin": 617,
											"end": 630,
											"name": "MUL"
										},
										{
											"begin": 617,
											"end": 630,
											"name": "OR"
										},
										{
											"begin": 617,
											"end": 630,
											"name": "SWAP1"
										},
										{
											"begin": 617,
											"end": 630,
											"name": "SSTORE"
										},
										{
											"begin": 617,
											"end": 630,
											"name": "POP"
										},
										{
											"begin": 490,
											"end": 642,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 490,
											"end": 642,
											"name": "JUMPDEST"
										},
										{
											"begin": 440,
											"end": 649,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1216,
											"end": 1483,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 1216,
											"end": 1483,
											"name": "JUMPDEST"
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "SWAP1"
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "SLOAD"
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "SWAP1"
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "EXP"
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "SWAP1"
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "DIV"
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "AND"
										},
										{
											"begin": 1257,
											"end": 1304,
											"name": "ISZERO"
										},
										{
											"begin": 1257,
											"end": 1304,
											"name": "ISZERO"
										},
										{
											"begin": 1257,
											"end": 1304,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 1257,
											"end": 1304,
											"name": "JUMPI"
										},
										{
											"begin": 1257,
											"end": 1304,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1257,
											"end": 1304,
											"name": "MLOAD"
										},
										{
											"begin": 1257,
											"end": 1304,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1257,
											"end": 1304,
											"name": "DUP2"
										},
										{
											"begin": 1257,
											"end": 1304,
											"name": "MSTORE"
										},
										{
											"begin": 1257,
											"end": 1304,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1257,
											"end": 1304,
											"name": "ADD"
										},
										{
											"begin": 1257,
											"end": 1304,
											"name": "DUP1"
										},
										{
											"begin": 1257,
											"end": 1304,
											"name": "DUP1"
										},
										{
											"begin": 1257,
											"end": 1304,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1257,
											"end": 1304,
											"name": "ADD"
										},
										{
											"begin": 1257,
											"end": 1304,
											"name": "DUP3"
										},
										{
											"begin": 1257,
											"end": 1304,
											"name": "DUP2"
										},
										{
											"begin": 1257,
											"end": 1304,
											"name": "SUB"
										},
										{
											"begin": 1257,
											"end": 1304,
											"name": "DUP3"
										},
										{
											"begin": 1257,
											"end": 1304,
											"name": "MSTORE"
										},
										{
											"begin": 1257,
											"end": 1304,
											"name": "PUSH",
											"value": "1C"
										},
										{
											"begin": 1257,
											"end": 1304,
											"name": "DUP2"
										},
										{
											"begin": 1257,
											"end": 1304,
											"name": "MSTORE"
										},
										{
											"begin": 1257,
											"end": 1304,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1257,
											"end": 1304,
											"name": "ADD"
										},
										{
											"begin": 1257,
											"end": 1304,
											"name": "DUP1"
										},
										{
											"begin": 1257,
											"end": 1304,
											"name": "PUSH",
											"value": "596F752063616E277420646F20697420776974686F757420696E697400000000"
										},
										{
											"begin": 1257,
											"end": 1304,
											"name": "DUP2"
										},
										{
											"begin": 1257,
											"end": 1304,
											"name": "MSTORE"
										},
										{
											"begin": 1257,
											"end": 1304,
											"name": "POP"
										},
										{
											"begin": 1257,
											"end": 1304,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1257,
											"end": 1304,
											"name": "ADD"
										},
										{
											"begin": 1257,
											"end": 1304,
											"name": "SWAP2"
										},
										{
											"begin": 1257,
											"end": 1304,
											"name": "POP"
										},
										{
											"begin": 1257,
											"end": 1304,
											"name": "POP"
										},
										{
											"begin": 1257,
											"end": 1304,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1257,
											"end": 1304,
											"name": "MLOAD"
										},
										{
											"begin": 1257,
											"end": 1304,
											"name": "DUP1"
										},
										{
											"begin": 1257,
											"end": 1304,
											"name": "SWAP2"
										},
										{
											"begin": 1257,
											"end": 1304,
											"name": "SUB"
										},
										{
											"begin": 1257,
											"end": 1304,
											"name": "SWAP1"
										},
										{
											"begin": 1257,
											"end": 1304,
											"name": "REVERT"
										},
										{
											"begin": 1257,
											"end": 1304,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 1257,
											"end": 1304,
											"name": "JUMPDEST"
										},
										{
											"begin": 1323,
											"end": 1324,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1315,
											"end": 1320,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1315,
											"end": 1324,
											"name": "DUP2"
										},
										{
											"begin": 1315,
											"end": 1324,
											"name": "SWAP1"
										},
										{
											"begin": 1315,
											"end": 1324,
											"name": "SSTORE"
										},
										{
											"begin": 1315,
											"end": 1324,
											"name": "POP"
										},
										{
											"begin": 1338,
											"end": 1360,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 1349,
											"end": 1359,
											"name": "CALLER"
										},
										{
											"begin": 1338,
											"end": 1348,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 1338,
											"end": 1360,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1338,
											"end": 1360,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 1338,
											"end": 1360,
											"name": "JUMPDEST"
										},
										{
											"begin": 1335,
											"end": 1398,
											"name": "ISZERO"
										},
										{
											"begin": 1335,
											"end": 1398,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 1335,
											"end": 1398,
											"name": "JUMPI"
										},
										{
											"begin": 1384,
											"end": 1386,
											"name": "PUSH",
											"value": "19"
										},
										{
											"begin": 1376,
											"end": 1381,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1376,
											"end": 1386,
											"name": "DUP2"
										},
										{
											"begin": 1376,
											"end": 1386,
											"name": "SWAP1"
										},
										{
											"begin": 1376,
											"end": 1386,
											"name": "SSTORE"
										},
										{
											"begin": 1376,
											"end": 1386,
											"name": "POP"
										},
										{
											"begin": 1335,
											"end": 1398,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 1335,
											"end": 1398,
											"name": "JUMPDEST"
										},
										{
											"begin": 1436,
											"end": 1437,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1419,
											"end": 1423,
											"name": "ADDRESS"
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "AND"
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "BALANCE"
										},
										{
											"begin": 1411,
											"end": 1437,
											"name": "EQ"
										},
										{
											"begin": 1408,
											"end": 1476,
											"name": "ISZERO"
										},
										{
											"begin": 1408,
											"end": 1476,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 1408,
											"end": 1476,
											"name": "JUMPI"
										},
										{
											"begin": 1461,
											"end": 1464,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1453,
											"end": 1458,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1453,
											"end": 1464,
											"name": "DUP2"
										},
										{
											"begin": 1453,
											"end": 1464,
											"name": "SWAP1"
										},
										{
											"begin": 1453,
											"end": 1464,
											"name": "SSTORE"
										},
										{
											"begin": 1453,
											"end": 1464,
											"name": "POP"
										},
										{
											"begin": 1408,
											"end": 1476,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 1408,
											"end": 1476,
											"name": "JUMPDEST"
										},
										{
											"begin": 1216,
											"end": 1483,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1491,
											"end": 1655,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 1491,
											"end": 1655,
											"name": "JUMPDEST"
										},
										{
											"begin": 1547,
											"end": 1551,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1564,
											"end": 1573,
											"name": "DUP1"
										},
										{
											"begin": 1615,
											"end": 1619,
											"name": "DUP3"
										},
										{
											"begin": 1603,
											"end": 1620,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "SWAP1"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "POP"
										},
										{
											"begin": 1646,
											"end": 1647,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1639,
											"end": 1643,
											"name": "DUP2"
										},
										{
											"begin": 1639,
											"end": 1647,
											"name": "GT"
										},
										{
											"begin": 1632,
											"end": 1647,
											"name": "SWAP2"
										},
										{
											"begin": 1632,
											"end": 1647,
											"name": "POP"
										},
										{
											"begin": 1491,
											"end": 1655,
											"name": "POP"
										},
										{
											"begin": 1491,
											"end": 1655,
											"name": "SWAP2"
										},
										{
											"begin": 1491,
											"end": 1655,
											"name": "SWAP1"
										},
										{
											"begin": 1491,
											"end": 1655,
											"name": "POP"
										},
										{
											"begin": 1491,
											"end": 1655,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"deposit()": "d0e30db0",
							"initWithValue()": "f8ef1085",
							"isCompleted()": "fa391c64",
							"isInit()": "b145a5b8",
							"score()": "efedc669",
							"wallet()": "521eb273",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"name\":\"result\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"adre\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isInit\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"score\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"initWithValue\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"isCompleted\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"shoot/2/\\u91cd\\u5165/1.sol\":\"Reentrance\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"shoot/2/\\u91cd\\u5165/1.sol\":{\"keccak256\":\"0xc9dfd59a310c968e868b1e0ca7811fbb18c69b2c460819fdc1935582a99d268e\",\"urls\":[\"bzzr://faa1070c80a2c54aa7fd4c1c82a00e53a8cf20dc53a3f03819f090db4b1e01b4\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "shoot/2/重入/1.sol:27:9: Warning: Return value of low-level calls not used.\n        msg.sender.call.value(amount)();\r\n        ^-----------------------------^\n",
				"message": "Return value of low-level calls not used.",
				"severity": "warning",
				"sourceLocation": {
					"end": 848,
					"file": "shoot/2/重入/1.sol",
					"start": 817
				},
				"type": "Warning"
			}
		],
		"sources": {
			"shoot/2/重入/1.sol": {
				"ast": {
					"absolutePath": "shoot/2/重入/1.sol",
					"exportedSymbols": {
						"Reentrance": [
							171
						]
					},
					"id": 172,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "153:24:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 171,
							"linearizedBaseContracts": [
								171
							],
							"name": "Reentrance",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 171,
									"src": "207:14:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "207:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 7,
									"name": "balances",
									"nodeType": "VariableDeclaration",
									"scope": 171,
									"src": "228:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 6,
										"keyType": {
											"id": 4,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "237:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "228:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 5,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "248:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 9,
									"name": "score",
									"nodeType": "VariableDeclaration",
									"scope": 171,
									"src": "272:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 8,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "272:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 11,
									"name": "isInit",
									"nodeType": "VariableDeclaration",
									"scope": 171,
									"src": "299:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 10,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "299:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "361:38:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 14,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "372:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 15,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 186,
															"src": "381:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 16,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "381:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "372:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 18,
												"nodeType": "ExpressionStatement",
												"src": "372:19:0"
											}
										]
									},
									"documentation": null,
									"id": 20,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "343:2:0"
									},
									"payable": true,
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "361:0:0"
									},
									"scope": 171,
									"src": "332:67:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 41,
										"nodeType": "Block",
										"src": "479:170:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "493:7:0",
													"subExpression": {
														"argumentTypes": null,
														"id": 23,
														"name": "isInit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "494:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 40,
												"nodeType": "IfStatement",
												"src": "490:152:0",
												"trueBody": {
													"id": 39,
													"nodeType": "Block",
													"src": "501:141:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 31,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 27,
																						"name": "this",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 199,
																						"src": "532:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_Reentrance_$171",
																							"typeString": "contract Reentrance"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_Reentrance_$171",
																							"typeString": "contract Reentrance"
																						}
																					],
																					"id": 26,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "524:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": "address"
																				},
																				"id": 28,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "524:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 29,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "balance",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "524:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "31303030303030303030303030303030",
																			"id": 30,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "549:20:0",
																			"subdenomination": "wei",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000000_by_1",
																				"typeString": "int_const 1000000000000000"
																			},
																			"value": "1000000000000000"
																		},
																		"src": "524:45:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "73686f756c6420696e6974207769746820302e303031206574686572",
																		"id": 32,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "571:30:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_ae23ddba6555085bd69fcf1128504c35a4915b5cad723d48c97074b09dcb2f1e",
																			"typeString": "literal_string \"should init with 0.001 ether\""
																		},
																		"value": "should init with 0.001 ether"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_ae23ddba6555085bd69fcf1128504c35a4915b5cad723d48c97074b09dcb2f1e",
																			"typeString": "literal_string \"should init with 0.001 ether\""
																		}
																	],
																	"id": 25,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		189,
																		190
																	],
																	"referencedDeclaration": 190,
																	"src": "516:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "516:86:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 34,
															"nodeType": "ExpressionStatement",
															"src": "516:86:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 35,
																	"name": "isInit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "617:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "74727565",
																	"id": 36,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "626:4:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "617:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 38,
															"nodeType": "ExpressionStatement",
															"src": "617:13:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 42,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "initWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "462:2:0"
									},
									"payable": true,
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "479:0:0"
									},
									"scope": 171,
									"src": "440:209:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "705:192:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 48,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 7,
																	"src": "724:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 51,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 49,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 186,
																		"src": "733:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 50,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "733:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "724:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 52,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 44,
																"src": "748:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "724:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 47,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															189,
															190
														],
														"referencedDeclaration": 189,
														"src": "716:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "716:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "716:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 62,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 58,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 199,
																			"src": "782:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Reentrance_$171",
																				"typeString": "contract Reentrance"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Reentrance_$171",
																				"typeString": "contract Reentrance"
																			}
																		],
																		"id": 57,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "774:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 59,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "774:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "774:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 61,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 44,
																"src": "799:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "774:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 56,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															189,
															190
														],
														"referencedDeclaration": 189,
														"src": "766:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "766:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 64,
												"nodeType": "ExpressionStatement",
												"src": "766:40:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"arguments": [
															{
																"argumentTypes": null,
																"id": 72,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 44,
																"src": "839:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 65,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 186,
																		"src": "817:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 69,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "817:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 70,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "call",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "817:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_barecall_payable$__$returns$_t_bool_$",
																	"typeString": "function () payable returns (bool)"
																}
															},
															"id": 71,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "817:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_setvalue_nonpayable$_t_uint256_$returns$_t_function_barecall_payable$__$returns$_t_bool_$value_$",
																"typeString": "function (uint256) returns (function () payable returns (bool))"
															}
														},
														"id": 73,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "817:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$__$returns$_t_bool_$value",
															"typeString": "function () payable returns (bool)"
														}
													},
													"id": 74,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "817:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 75,
												"nodeType": "ExpressionStatement",
												"src": "817:31:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 76,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "859:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 79,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 77,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "868:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "868:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "859:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 80,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "883:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "859:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 82,
												"nodeType": "ExpressionStatement",
												"src": "859:30:0"
											}
										]
									},
									"documentation": null,
									"id": 84,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "675:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "675:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "674:16:0"
									},
									"payable": true,
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "705:0:0"
									},
									"scope": 171,
									"src": "657:240:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 95,
										"nodeType": "Block",
										"src": "938:52:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 87,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "949:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 90,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 88,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "958:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "958:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "949:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 91,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 186,
															"src": "973:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 92,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "973:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "949:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 94,
												"nodeType": "ExpressionStatement",
												"src": "949:33:0"
											}
										]
									},
									"documentation": null,
									"id": 96,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "921:2:0"
									},
									"payable": true,
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "938:0:0"
									},
									"scope": 171,
									"src": "905:85:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "1059:40:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 103,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "1077:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 105,
													"indexExpression": {
														"argumentTypes": null,
														"id": 104,
														"name": "adre",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 98,
														"src": "1086:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1077:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 102,
												"id": 106,
												"nodeType": "Return",
												"src": "1070:21:0"
											}
										]
									},
									"documentation": null,
									"id": 108,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"name": "adre",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "1017:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1017:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1016:14:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "1051:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1051:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1050:9:0"
									},
									"scope": 171,
									"src": "998:101:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 118,
										"nodeType": "Block",
										"src": "1161:47:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 114,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 199,
																"src": "1187:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Reentrance_$171",
																	"typeString": "contract Reentrance"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_Reentrance_$171",
																	"typeString": "contract Reentrance"
																}
															],
															"id": 113,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1179:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 115,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1179:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1179:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 112,
												"id": 117,
												"nodeType": "Return",
												"src": "1172:28:0"
											}
										]
									},
									"documentation": null,
									"id": 119,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "wallet",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1122:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"name": "result",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1146:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1146:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1145:16:0"
									},
									"scope": 171,
									"src": "1107:101:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 153,
										"nodeType": "Block",
										"src": "1246:237:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 123,
															"name": "isInit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "1265:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "596f752063616e277420646f20697420776974686f757420696e6974",
															"id": 124,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:30:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_55f469b5d1f1011727794fcf2dcbb89f0cd4ca27148ce1363ef2d66e0c4cc596",
																"typeString": "literal_string \"You can't do it without init\""
															},
															"value": "You can't do it without init"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_55f469b5d1f1011727794fcf2dcbb89f0cd4ca27148ce1363ef2d66e0c4cc596",
																"typeString": "literal_string \"You can't do it without init\""
															}
														],
														"id": 122,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															189,
															190
														],
														"referencedDeclaration": 190,
														"src": "1257:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1257:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 126,
												"nodeType": "ExpressionStatement",
												"src": "1257:47:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 127,
														"name": "score",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "1315:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 128,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1323:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1315:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 130,
												"nodeType": "ExpressionStatement",
												"src": "1315:9:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 132,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "1349:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1349:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 131,
														"name": "isContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 170,
														"src": "1338:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1338:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 140,
												"nodeType": "IfStatement",
												"src": "1335:63:0",
												"trueBody": {
													"id": 139,
													"nodeType": "Block",
													"src": "1361:37:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 137,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 135,
																	"name": "score",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "1376:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "3235",
																	"id": 136,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1384:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_25_by_1",
																		"typeString": "int_const 25"
																	},
																	"value": "25"
																},
																"src": "1376:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 138,
															"nodeType": "ExpressionStatement",
															"src": "1376:10:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 142,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 199,
																	"src": "1419:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Reentrance_$171",
																		"typeString": "contract Reentrance"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Reentrance_$171",
																		"typeString": "contract Reentrance"
																	}
																],
																"id": 141,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1411:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1411:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 144,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1411:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 145,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1436:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1411:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 152,
												"nodeType": "IfStatement",
												"src": "1408:68:0",
												"trueBody": {
													"id": 151,
													"nodeType": "Block",
													"src": "1438:38:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 149,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 147,
																	"name": "score",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "1453:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "313030",
																	"id": 148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1461:3:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "1453:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 150,
															"nodeType": "ExpressionStatement",
															"src": "1453:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 154,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "isCompleted",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1236:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1246:0:0"
									},
									"scope": 171,
									"src": "1216:267:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 169,
										"nodeType": "Block",
										"src": "1553:102:0",
										"statements": [
											{
												"assignments": [],
												"declarations": [
													{
														"constant": false,
														"id": 162,
														"name": "size",
														"nodeType": "VariableDeclaration",
														"scope": 170,
														"src": "1564:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 161,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1564:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 163,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "1564:9:0"
											},
											{
												"externalReferences": [
													{
														"size": {
															"declaration": 162,
															"isOffset": false,
															"isSlot": false,
															"src": "1595:4:0",
															"valueSize": 1
														}
													},
													{
														"addr": {
															"declaration": 156,
															"isOffset": false,
															"isSlot": false,
															"src": "1615:4:0",
															"valueSize": 1
														}
													}
												],
												"id": 164,
												"nodeType": "InlineAssembly",
												"operations": "{\n    size := extcodesize(addr)\n}",
												"src": "1584:54:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 165,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 162,
														"src": "1639:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 166,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1646:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1639:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 160,
												"id": 168,
												"nodeType": "Return",
												"src": "1632:15:0"
											}
										]
									},
									"documentation": null,
									"id": 170,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"name": "addr",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "1511:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1510:14:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "1547:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 158,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1547:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1546:6:0"
									},
									"scope": 171,
									"src": "1491:164:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "private"
								}
							],
							"scope": 172,
							"src": "181:1477:0"
						}
					],
					"src": "153:1505:0"
				},
				"id": 0
			}
		}
	}
}