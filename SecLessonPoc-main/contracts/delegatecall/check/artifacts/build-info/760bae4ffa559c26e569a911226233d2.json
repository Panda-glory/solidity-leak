{
	"id": "760bae4ffa559c26e569a911226233d2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.26",
	"solcLongVersion": "0.4.26+commit.4563c3fc",
	"input": {
		"language": "Solidity",
		"sources": {
			"SecLessonPoc-main/contracts/delegatecall/check/safe.sol": {
				"content": "/// @knowledgePoint delegatecall调用\r\n \r\n/// @level 困难\r\n/// @description 1.成为owner.2.修改密码\r\npragma solidity ^0.4.23;\r\ncontract safe{\r\n    address private owner;\r\n    uint256 private password ;\r\n    uint256 public score;\r\n    bytes4 internal constant SET = this.setPassword.selector;\r\n    function setOwner()public{\r\n        require(msg.sender ==address(this));\r\n        owner = tx.origin;\r\n    }\r\n\r\n    constructor()public{\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function complete()public payable{\r\n        require(address(this).balance>0);\r\n        if(msg.value>address(this).balance){\r\n            score=100;\r\n        }\r\n\r\n    }\r\n\r\n    function gift(address _target)public{\r\n        require(_target.delegatecall(abi.encodeWithSelector(this.gift.selector)) == false, \"unsafe execution\");\r\n        (bytes4 sel,uint256 val) = getReturns();\r\n\r\n        bool success = address(this).call(sel);\r\n        require(success,\"gift call error\");\r\n\r\n        success =address(this).call(abi.encodePacked(SET,val));\r\n        require(success,\"call failed\");\r\n    }\r\n\r\n    function setPassword(uint256 val)public{\r\n        require(msg.sender==address(this));\r\n        assembly { \r\n            sstore(1,val)\r\n        }\r\n    }\r\n\r\n    function getReturns()public pure returns(bytes4 sel, uint256 val){\r\n        assembly {\r\n            if iszero(eq(returndatasize, 0x24)) { revert(0, 0) }\r\n            let ptr := mload(0x40)\r\n            returndatacopy(ptr, 0, 0x24)\r\n            sel := and(mload(ptr), 0xffffffff00000000000000000000000000000000000000000000000000000000)\r\n            val := mload(add(0x04, ptr))\r\n        }\r\n    }\r\n\r\n    function()external payable{}    \r\n\r\n    function isCompleted()public{\r\n        score=0;\r\n        if(msg.sender==owner){\r\n            score+=50;\r\n        }\r\n        if(password == 0x2022){\r\n            score+=50;\r\n        }\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"SecLessonPoc-main/contracts/delegatecall/check/safe.sol": {
				"safe": {
					"abi": [
						{
							"constant": false,
							"inputs": [],
							"name": "setOwner",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "complete",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "val",
									"type": "uint256"
								}
							],
							"name": "setPassword",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getReturns",
							"outputs": [
								{
									"name": "sel",
									"type": "bytes4"
								},
								{
									"name": "val",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_target",
									"type": "address"
								}
							],
							"name": "gift",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "score",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "isCompleted",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"payable": true,
							"stateMutability": "payable",
							"type": "fallback"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":135:1871  contract safe{\r... */\n  mstore(0x40, 0x80)\n    /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":420:476  constructor()public{\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":420:476  constructor()public{\r... */\n  pop\n    /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":458:468  msg.sender */\n  caller\n    /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":450:455  owner */\n  0x0\n  dup1\n    /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":450:468  owner = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":135:1871  contract safe{\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":135:1871  contract safe{\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x40caae06\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x522e1177\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x68e9a07e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xade58ccb\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xcbfc4bce\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xefedc669\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xfa391c64\n      eq\n      tag_8\n      jumpi\n    tag_1:\n      stop\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":305:412  function setOwner()public{\r... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_11\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_11:\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":305:412  function setOwner()public{\r... */\n      pop\n      tag_12\n      jump(tag_13)\n    tag_12:\n      stop\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":484:651  function complete()public payable{\r... */\n    tag_3:\n      tag_14\n      jump(tag_15)\n    tag_14:\n      stop\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1078:1229  function setPassword(uint256 val)public{\r... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_16\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_16:\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1078:1229  function setPassword(uint256 val)public{\r... */\n      pop\n      tag_17\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_18)\n    tag_17:\n      stop\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1237:1631  function getReturns()public pure returns(bytes4 sel, uint256 val){\r... */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_19\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_19:\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1237:1631  function getReturns()public pure returns(bytes4 sel, uint256 val){\r... */\n      pop\n      tag_20\n      jump(tag_21)\n    tag_20:\n      mload(0x40)\n      dup1\n      dup4\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":659:1070  function gift(address _target)public{\r... */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_22\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_22:\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":659:1070  function gift(address _target)public{\r... */\n      pop\n      tag_23\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_24)\n    tag_23:\n      stop\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":215:235  uint256 public score */\n    tag_7:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_25\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_25:\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":215:235  uint256 public score */\n      pop\n      tag_26\n      jump(tag_27)\n    tag_26:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1679:1868  function isCompleted()public{\r... */\n    tag_8:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_28\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_28:\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1679:1868  function isCompleted()public{\r... */\n      pop\n      tag_29\n      jump(tag_30)\n    tag_29:\n      stop\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":305:412  function setOwner()public{\r... */\n    tag_13:\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":370:374  this */\n      address\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":349:375  msg.sender ==address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":349:359  msg.sender */\n      caller\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":349:375  msg.sender ==address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":341:376  require(msg.sender ==address(this)) */\n      iszero\n      iszero\n      tag_32\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_32:\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":395:404  tx.origin */\n      origin\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":387:392  owner */\n      0x0\n      dup1\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":387:404  owner = tx.origin */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":305:412  function setOwner()public{\r... */\n      jump\t// out\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":484:651  function complete()public payable{\r... */\n    tag_15:\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":558:559  0 */\n      0x0\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":544:548  this */\n      address\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":536:557  address(this).balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":536:559  address(this).balance>0 */\n      gt\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":528:560  require(address(this).balance>0) */\n      iszero\n      iszero\n      tag_34\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_34:\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":592:596  this */\n      address\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":584:605  address(this).balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":574:583  msg.value */\n      callvalue\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":574:605  msg.value>address(this).balance */\n      gt\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":571:642  if(msg.value>address(this).balance){\r... */\n      iszero\n      tag_35\n      jumpi\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":627:630  100 */\n      0x64\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":621:626  score */\n      0x2\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":621:630  score=100 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":571:642  if(msg.value>address(this).balance){\r... */\n    tag_35:\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":484:651  function complete()public payable{\r... */\n      jump\t// out\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1078:1229  function setPassword(uint256 val)public{\r... */\n    tag_18:\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1156:1160  this */\n      address\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1136:1161  msg.sender==address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1136:1146  msg.sender */\n      caller\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1136:1161  msg.sender==address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1128:1162  require(msg.sender==address(this)) */\n      iszero\n      iszero\n      tag_37\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_37:\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1207:1210  val */\n      dup1\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1205:1206  1 */\n      0x1\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1198:1211  sstore(1,val) */\n      sstore\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1182:1222  { \r... */\n      pop\n      jump\t// out\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1237:1631  function getReturns()public pure returns(bytes4 sel, uint256 val){\r... */\n    tag_21:\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1278:1288  bytes4 sel */\n      0x0\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1290:1301  uint256 val */\n      dup1\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1366:1370  0x24 */\n      0x24\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1350:1364  returndatasize */\n      returndatasize\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1347:1371  eq(returndatasize, 0x24) */\n      eq\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1340:1372  iszero(eq(returndatasize, 0x24)) */\n      iszero\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1337:1339  if */\n      iszero\n      tag_39\n      jumpi\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1385:1386  0 */\n      0x0\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1382:1383  0 */\n      dup1\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1375:1387  revert(0, 0) */\n      revert\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1337:1339  if */\n    tag_39:\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1420:1424  0x40 */\n      0x40\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1414:1425  mload(0x40) */\n      mload\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1462:1466  0x24 */\n      0x24\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1459:1460  0 */\n      0x0\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1454:1457  ptr */\n      dup3\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1439:1467  returndatacopy(ptr, 0, 0x24) */\n      returndatacopy\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1504:1570  0xffffffff00000000000000000000000000000000000000000000000000000000 */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1498:1501  ptr */\n      dup2\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1492:1502  mload(ptr) */\n      mload\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1488:1571  and(mload(ptr), 0xffffffff00000000000000000000000000000000000000000000000000000000) */\n      and\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1481:1571  sel := and(mload(ptr), 0xffffffff00000000000000000000000000000000000000000000000000000000) */\n      swap3\n      pop\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1608:1611  ptr */\n      dup1\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1602:1606  0x04 */\n      0x4\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1598:1612  add(0x04, ptr) */\n      add\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1592:1613  mload(add(0x04, ptr)) */\n      mload\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1585:1613  val := mload(add(0x04, ptr)) */\n      swap2\n      pop\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1322:1624  {\r... */\n      pop\n      swap1\n      swap2\n      jump\t// out\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":659:1070  function gift(address _target)public{\r... */\n    tag_24:\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":820:830  bytes4 sel */\n      0x0\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":831:842  uint256 val */\n      dup1\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":871:883  bool success */\n      0x0\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":782:787  false */\n      dup1\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":714:787  _target.delegatecall(abi.encodeWithSelector(this.gift.selector)) == false */\n      iszero\n      iszero\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":714:721  _target */\n      dup5\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":714:734  _target.delegatecall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":758:776  this.gift.selector */\n      mul(0x100000000000000000000000000000000000000000000000000000000, 0xcbfc4bce)\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":735:777  abi.encodeWithSelector(this.gift.selector) */\n      add(0x24, mload(0x40))\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":735:777  abi.encodeWithSelector(this.gift.selector) */\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"--CODEGEN--\":38:42   */\n      0x20\n        /* \"--CODEGEN--\":29:36   */\n      dup3\n        /* \"--CODEGEN--\":25:43   */\n      add\n        /* \"--CODEGEN--\":67:77   */\n      dup1\n        /* \"--CODEGEN--\":61:78   */\n      mload\n        /* \"--CODEGEN--\":96:154   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"--CODEGEN--\":199:207   */\n      dup4\n        /* \"--CODEGEN--\":192:196   */\n      dup2\n        /* \"--CODEGEN--\":186:190   */\n      dup4\n        /* \"--CODEGEN--\":182:197   */\n      and\n        /* \"--CODEGEN--\":179:208   */\n      or\n        /* \"--CODEGEN--\":167:177   */\n      dup4\n        /* \"--CODEGEN--\":160:209   */\n      mstore\n        /* \"--CODEGEN--\":0:215   */\n      pop\n      pop\n      pop\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":735:777  abi.encodeWithSelector(this.gift.selector) */\n      pop\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":714:778  _target.delegatecall(abi.encodeWithSelector(this.gift.selector)) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_41:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_42\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_41)\n    tag_42:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":714:778  _target.delegatecall(abi.encodeWithSelector(this.gift.selector)) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_44\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x1\n      dup4\n      0x20\n      sub\n      0x100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_44:\n      pop\n      swap2\n      pop\n      pop\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":714:787  _target.delegatecall(abi.encodeWithSelector(this.gift.selector)) == false */\n      iszero\n      iszero\n      eq\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":706:808  require(_target.delegatecall(abi.encodeWithSelector(this.gift.selector)) == false, \"unsafe execution\") */\n      iszero\n      iszero\n      tag_45\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x10\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x756e7361666520657865637574696f6e00000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_45:\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":846:858  getReturns() */\n      tag_46\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":846:856  getReturns */\n      tag_21\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":846:858  getReturns() */\n      jump\t// in\n    tag_46:\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":819:858  (bytes4 sel,uint256 val) = getReturns() */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":894:898  this */\n      address\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":886:904  address(this).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":905:908  sel */\n      dup4\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":886:909  address(this).call(sel) */\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":871:909  bool success = address(this).call(sel) */\n      swap1\n      pop\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":928:935  success */\n      dup1\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":920:954  require(success,\"gift call error\") */\n      iszero\n      iszero\n      tag_47\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0xf\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x676966742063616c6c206572726f720000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_47:\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":984:988  this */\n      address\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":976:994  address(this).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":273:298  this.setPassword.selector */\n      mul(0x100000000000000000000000000000000000000000000000000000000, 0x68e9a07e)\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1016:1019  val */\n      dup4\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":995:1020  abi.encodePacked(SET,val) */\n      add(0x20, mload(0x40))\n      dup1\n      dup4\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      dup2\n      mstore\n      0x4\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":995:1020  abi.encodePacked(SET,val) */\n      swap1\n      0x40\n      mstore\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":976:1021  address(this).call(abi.encodePacked(SET,val)) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_48:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_49\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_48)\n    tag_49:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":976:1021  address(this).call(abi.encodePacked(SET,val)) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_51\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x1\n      dup4\n      0x20\n      sub\n      0x100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_51:\n      pop\n      swap2\n      pop\n      pop\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":967:1021  success =address(this).call(abi.encodePacked(SET,val)) */\n      swap1\n      pop\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1040:1047  success */\n      dup1\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1032:1062  require(success,\"call failed\") */\n      iszero\n      iszero\n      tag_52\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0xb\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x63616c6c206661696c6564000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_52:\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":659:1070  function gift(address _target)public{\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":215:235  uint256 public score */\n    tag_27:\n      sload(0x2)\n      dup2\n      jump\t// out\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1679:1868  function isCompleted()public{\r... */\n    tag_30:\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1724:1725  0 */\n      0x0\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1718:1723  score */\n      0x2\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1718:1725  score=0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1751:1756  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1739:1756  msg.sender==owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1739:1749  msg.sender */\n      caller\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1739:1756  msg.sender==owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1736:1793  if(msg.sender==owner){\r... */\n      iszero\n      tag_54\n      jumpi\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1779:1781  50 */\n      0x32\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1772:1777  score */\n      0x2\n      0x0\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1772:1781  score+=50 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1736:1793  if(msg.sender==owner){\r... */\n    tag_54:\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1818:1824  0x2022 */\n      0x2022\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1806:1814  password */\n      sload(0x1)\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1806:1824  password == 0x2022 */\n      eq\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1803:1861  if(password == 0x2022){\r... */\n      iszero\n      tag_55\n      jumpi\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1847:1849  50 */\n      0x32\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1840:1845  score */\n      0x2\n      0x0\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1840:1849  score+=50 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1803:1861  if(password == 0x2022){\r... */\n    tag_55:\n        /* \"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":1679:1868  function isCompleted()public{\r... */\n      jump\t// out\n\n    auxdata: 0xa165627a7a7230582056efc01e949ef8029beed345a9e12cb06449441baea5beae240207dbba7894b90029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506107f4806100606000396000f300608060405260043610610083576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806340caae0614610085578063522e11771461009c57806368e9a07e146100a6578063ade58ccb146100d3578063cbfc4bce14610143578063efedc66914610186578063fa391c64146101b1575b005b34801561009157600080fd5b5061009a6101c8565b005b6100a4610244565b005b3480156100b257600080fd5b506100d160048036038101908080359060200190929190505050610294565b005b3480156100df57600080fd5b506100e86102d5565b60405180837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020018281526020019250505060405180910390f35b34801561014f57600080fd5b50610184600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610322565b005b34801561019257600080fd5b5061019b610733565b6040518082815260200191505060405180910390f35b3480156101bd57600080fd5b506101c6610739565b005b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561020257600080fd5b326000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60003073ffffffffffffffffffffffffffffffffffffffff163111151561026a57600080fd5b3073ffffffffffffffffffffffffffffffffffffffff16313411156102925760646002819055505b565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156102ce57600080fd5b8060015550565b60008060243d1415156102e757600080fd5b60405160246000823e7fffffffff00000000000000000000000000000000000000000000000000000000815116925080600401519150509091565b60008060008015158473ffffffffffffffffffffffffffffffffffffffff1663cbfc4bce7c010000000000000000000000000000000000000000000000000000000002604051602401604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405180828051906020019080838360005b838110156103f55780820151818401526020810190506103da565b50505050905090810190601f1680156104225780820380516001836020036101000a031916815260200191505b50915050600060405180830381855af491505015151415156104ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f756e7361666520657865637574696f6e0000000000000000000000000000000081525060200191505060405180910390fd5b6104b46102d5565b925092503073ffffffffffffffffffffffffffffffffffffffff16837c010000000000000000000000000000000000000000000000000000000090046040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016000604051808303816000875af19250505090508015156105a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f676966742063616c6c206572726f72000000000000000000000000000000000081525060200191505060405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff166368e9a07e7c0100000000000000000000000000000000000000000000000000000000028360405160200180837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526004018281526020019250505060405160208183030381529060405260405180828051906020019080838360005b83811015610674578082015181840152602081019050610659565b50505050905090810190601f1680156106a15780820380516001836020036101000a031916815260200191505b509150506000604051808303816000865af1915050905080151561072d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f63616c6c206661696c656400000000000000000000000000000000000000000081525060200191505060405180910390fd5b50505050565b60025481565b60006002819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156107a85760326002600082825401925050819055505b61202260015414156107c65760326002600082825401925050819055505b5600a165627a7a7230582056efc01e949ef8029beed345a9e12cb06449441baea5beae240207dbba7894b90029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x7F4 DUP1 PUSH2 0x60 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x83 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x40CAAE06 EQ PUSH2 0x85 JUMPI DUP1 PUSH4 0x522E1177 EQ PUSH2 0x9C JUMPI DUP1 PUSH4 0x68E9A07E EQ PUSH2 0xA6 JUMPI DUP1 PUSH4 0xADE58CCB EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0xCBFC4BCE EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0xEFEDC669 EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0xFA391C64 EQ PUSH2 0x1B1 JUMPI JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9A PUSH2 0x1C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA4 PUSH2 0x244 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x294 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE8 PUSH2 0x2D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x322 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19B PUSH2 0x733 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C6 PUSH2 0x739 JUMP JUMPDEST STOP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x202 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST ORIGIN PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE GT ISZERO ISZERO PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE CALLVALUE GT ISZERO PUSH2 0x292 JUMPI PUSH1 0x64 PUSH1 0x2 DUP2 SWAP1 SSTORE POP JUMPDEST JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x2CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x24 RETURNDATASIZE EQ ISZERO ISZERO PUSH2 0x2E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x24 PUSH1 0x0 DUP3 RETURNDATACOPY PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 MLOAD AND SWAP3 POP DUP1 PUSH1 0x4 ADD MLOAD SWAP2 POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 ISZERO ISZERO DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCBFC4BCE PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3F5 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3DA JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x422 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0x4AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x756E7361666520657865637574696F6E00000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4B4 PUSH2 0x2D5 JUMP JUMPDEST SWAP3 POP SWAP3 POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP SWAP1 POP DUP1 ISZERO ISZERO PUSH2 0x5A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x676966742063616C6C206572726F720000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x68E9A07E PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x4 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x674 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x659 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x6A1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP SWAP1 POP DUP1 ISZERO ISZERO PUSH2 0x72D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x63616C6C206661696C6564000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x7A8 JUMPI PUSH1 0x32 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x2022 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x7C6 JUMPI PUSH1 0x32 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 JUMP 0xef 0xc0 0x1e SWAP5 SWAP15 0xf8 MUL SWAP12 0xee 0xd3 GASLIMIT 0xa9 0xe1 0x2c 0xb0 PUSH5 0x49441BAEA5 0xbe 0xae 0x24 MUL SMOD 0xdb 0xba PUSH25 0x94B90029000000000000000000000000000000000000000000 ",
							"sourceMap": "135:1736:0:-;;;420:56;8:9:-1;5:2;;;30:1;27;20:12;5:2;420:56:0;458:10;450:5;;:18;;;;;;;;;;;;;;;;;;135:1736;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405260043610610083576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806340caae0614610085578063522e11771461009c57806368e9a07e146100a6578063ade58ccb146100d3578063cbfc4bce14610143578063efedc66914610186578063fa391c64146101b1575b005b34801561009157600080fd5b5061009a6101c8565b005b6100a4610244565b005b3480156100b257600080fd5b506100d160048036038101908080359060200190929190505050610294565b005b3480156100df57600080fd5b506100e86102d5565b60405180837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020018281526020019250505060405180910390f35b34801561014f57600080fd5b50610184600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610322565b005b34801561019257600080fd5b5061019b610733565b6040518082815260200191505060405180910390f35b3480156101bd57600080fd5b506101c6610739565b005b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561020257600080fd5b326000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60003073ffffffffffffffffffffffffffffffffffffffff163111151561026a57600080fd5b3073ffffffffffffffffffffffffffffffffffffffff16313411156102925760646002819055505b565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156102ce57600080fd5b8060015550565b60008060243d1415156102e757600080fd5b60405160246000823e7fffffffff00000000000000000000000000000000000000000000000000000000815116925080600401519150509091565b60008060008015158473ffffffffffffffffffffffffffffffffffffffff1663cbfc4bce7c010000000000000000000000000000000000000000000000000000000002604051602401604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405180828051906020019080838360005b838110156103f55780820151818401526020810190506103da565b50505050905090810190601f1680156104225780820380516001836020036101000a031916815260200191505b50915050600060405180830381855af491505015151415156104ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f756e7361666520657865637574696f6e0000000000000000000000000000000081525060200191505060405180910390fd5b6104b46102d5565b925092503073ffffffffffffffffffffffffffffffffffffffff16837c010000000000000000000000000000000000000000000000000000000090046040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016000604051808303816000875af19250505090508015156105a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f676966742063616c6c206572726f72000000000000000000000000000000000081525060200191505060405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff166368e9a07e7c0100000000000000000000000000000000000000000000000000000000028360405160200180837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526004018281526020019250505060405160208183030381529060405260405180828051906020019080838360005b83811015610674578082015181840152602081019050610659565b50505050905090810190601f1680156106a15780820380516001836020036101000a031916815260200191505b509150506000604051808303816000865af1915050905080151561072d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f63616c6c206661696c656400000000000000000000000000000000000000000081525060200191505060405180910390fd5b50505050565b60025481565b60006002819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156107a85760326002600082825401925050819055505b61202260015414156107c65760326002600082825401925050819055505b5600a165627a7a7230582056efc01e949ef8029beed345a9e12cb06449441baea5beae240207dbba7894b90029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x83 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x40CAAE06 EQ PUSH2 0x85 JUMPI DUP1 PUSH4 0x522E1177 EQ PUSH2 0x9C JUMPI DUP1 PUSH4 0x68E9A07E EQ PUSH2 0xA6 JUMPI DUP1 PUSH4 0xADE58CCB EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0xCBFC4BCE EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0xEFEDC669 EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0xFA391C64 EQ PUSH2 0x1B1 JUMPI JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9A PUSH2 0x1C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA4 PUSH2 0x244 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x294 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE8 PUSH2 0x2D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x184 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x322 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19B PUSH2 0x733 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C6 PUSH2 0x739 JUMP JUMPDEST STOP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x202 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST ORIGIN PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE GT ISZERO ISZERO PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE CALLVALUE GT ISZERO PUSH2 0x292 JUMPI PUSH1 0x64 PUSH1 0x2 DUP2 SWAP1 SSTORE POP JUMPDEST JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x2CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x24 RETURNDATASIZE EQ ISZERO ISZERO PUSH2 0x2E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x24 PUSH1 0x0 DUP3 RETURNDATACOPY PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 MLOAD AND SWAP3 POP DUP1 PUSH1 0x4 ADD MLOAD SWAP2 POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 ISZERO ISZERO DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCBFC4BCE PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3F5 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3DA JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x422 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP ISZERO ISZERO EQ ISZERO ISZERO PUSH2 0x4AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x756E7361666520657865637574696F6E00000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4B4 PUSH2 0x2D5 JUMP JUMPDEST SWAP3 POP SWAP3 POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP SWAP1 POP DUP1 ISZERO ISZERO PUSH2 0x5A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x676966742063616C6C206572726F720000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x68E9A07E PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x4 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x674 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x659 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x6A1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP SWAP1 POP DUP1 ISZERO ISZERO PUSH2 0x72D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x63616C6C206661696C6564000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x7A8 JUMPI PUSH1 0x32 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x2022 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x7C6 JUMPI PUSH1 0x32 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 JUMP 0xef 0xc0 0x1e SWAP5 SWAP15 0xf8 MUL SWAP12 0xee 0xd3 GASLIMIT 0xa9 0xe1 0x2c 0xb0 PUSH5 0x49441BAEA5 0xbe 0xae 0x24 MUL SMOD 0xdb 0xba PUSH25 0x94B90029000000000000000000000000000000000000000000 ",
							"sourceMap": "135:1736:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;305:107;;8:9:-1;5:2;;;30:1;27;20:12;5:2;305:107:0;;;;;;484:167;;;;;;1078:151;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1078:151:0;;;;;;;;;;;;;;;;;;;;;;;;;;1237:394;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1237:394:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;659:411;;8:9:-1;5:2;;;30:1;27;20:12;5:2;659:411:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;215:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;215:20:0;;;;;;;;;;;;;;;;;;;;;;;1679:189;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1679:189:0;;;;;;305:107;370:4;349:26;;:10;:26;;;341:35;;;;;;;;395:9;387:5;;:17;;;;;;;;;;;;;;;;;;305:107::o;484:167::-;558:1;544:4;536:21;;;:23;528:32;;;;;;;;592:4;584:21;;;574:9;:31;571:71;;;627:3;621:5;:9;;;;571:71;484:167::o;1078:151::-;1156:4;1136:25;;:10;:25;;;1128:34;;;;;;;;1207:3;1205:1;1198:13;1182:40;:::o;1237:394::-;1278:10;1290:11;1366:4;1350:14;1347:24;1340:32;1337:2;;;1385:1;1382;1375:12;1337:2;1420:4;1414:11;1462:4;1459:1;1454:3;1439:28;1504:66;1498:3;1492:10;1488:83;1481:90;;1608:3;1602:4;1598:14;1592:21;1585:28;;1322:302;;;:::o;659:411::-;820:10;831:11;871:12;782:5;714:73;;:7;:20;;758:18;;;735:42;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;735:42:0;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;735:42:0;714:64;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;714:64:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:73;;;706:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;846:12;:10;:12::i;:::-;819:39;;;;894:4;886:18;;905:3;886:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;871:38;;928:7;920:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;984:4;976:18;;273:25;;;1016:3;995:25;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;995:25:0;;;976:45;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;976:45:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;967:54;;1040:7;1032:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;659:411;;;;:::o;215:20::-;;;;:::o;1679:189::-;1724:1;1718:5;:7;;;;1751:5;;;;;;;;;;;1739:17;;:10;:17;;;1736:57;;;1779:2;1772:5;;:9;;;;;;;;;;;1736:57;1818:6;1806:8;;:18;1803:58;;;1847:2;1840:5;;:9;;;;;;;;;;;1803:58;1679:189::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "407200",
								"executionCost": "20709",
								"totalCost": "427909"
							},
							"external": {
								"": "217",
								"complete()": "21009",
								"getReturns()": "infinite",
								"gift(address)": "infinite",
								"isCompleted()": "31244",
								"score()": "504",
								"setOwner()": "20438",
								"setPassword(uint256)": "20280"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 135,
									"end": 1871,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 135,
									"end": 1871,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 135,
									"end": 1871,
									"name": "MSTORE"
								},
								{
									"begin": 420,
									"end": 476,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 420,
									"end": 476,
									"name": "POP"
								},
								{
									"begin": 458,
									"end": 468,
									"name": "CALLER"
								},
								{
									"begin": 450,
									"end": 455,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 450,
									"end": 455,
									"name": "DUP1"
								},
								{
									"begin": 450,
									"end": 468,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 450,
									"end": 468,
									"name": "EXP"
								},
								{
									"begin": 450,
									"end": 468,
									"name": "DUP2"
								},
								{
									"begin": 450,
									"end": 468,
									"name": "SLOAD"
								},
								{
									"begin": 450,
									"end": 468,
									"name": "DUP2"
								},
								{
									"begin": 450,
									"end": 468,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 450,
									"end": 468,
									"name": "MUL"
								},
								{
									"begin": 450,
									"end": 468,
									"name": "NOT"
								},
								{
									"begin": 450,
									"end": 468,
									"name": "AND"
								},
								{
									"begin": 450,
									"end": 468,
									"name": "SWAP1"
								},
								{
									"begin": 450,
									"end": 468,
									"name": "DUP4"
								},
								{
									"begin": 450,
									"end": 468,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 450,
									"end": 468,
									"name": "AND"
								},
								{
									"begin": 450,
									"end": 468,
									"name": "MUL"
								},
								{
									"begin": 450,
									"end": 468,
									"name": "OR"
								},
								{
									"begin": 450,
									"end": 468,
									"name": "SWAP1"
								},
								{
									"begin": 450,
									"end": 468,
									"name": "SSTORE"
								},
								{
									"begin": 450,
									"end": 468,
									"name": "POP"
								},
								{
									"begin": 135,
									"end": 1871,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 135,
									"end": 1871,
									"name": "DUP1"
								},
								{
									"begin": 135,
									"end": 1871,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 135,
									"end": 1871,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 135,
									"end": 1871,
									"name": "CODECOPY"
								},
								{
									"begin": 135,
									"end": 1871,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 135,
									"end": 1871,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a7230582056efc01e949ef8029beed345a9e12cb06449441baea5beae240207dbba7894b90029",
									".code": [
										{
											"begin": 135,
											"end": 1871,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 135,
											"end": 1871,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 135,
											"end": 1871,
											"name": "MSTORE"
										},
										{
											"begin": 135,
											"end": 1871,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 135,
											"end": 1871,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 135,
											"end": 1871,
											"name": "LT"
										},
										{
											"begin": 135,
											"end": 1871,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 135,
											"end": 1871,
											"name": "JUMPI"
										},
										{
											"begin": 135,
											"end": 1871,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 135,
											"end": 1871,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 135,
											"end": 1871,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 135,
											"end": 1871,
											"name": "SWAP1"
										},
										{
											"begin": 135,
											"end": 1871,
											"name": "DIV"
										},
										{
											"begin": 135,
											"end": 1871,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 135,
											"end": 1871,
											"name": "AND"
										},
										{
											"begin": 135,
											"end": 1871,
											"name": "DUP1"
										},
										{
											"begin": 135,
											"end": 1871,
											"name": "PUSH",
											"value": "40CAAE06"
										},
										{
											"begin": 135,
											"end": 1871,
											"name": "EQ"
										},
										{
											"begin": 135,
											"end": 1871,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 135,
											"end": 1871,
											"name": "JUMPI"
										},
										{
											"begin": 135,
											"end": 1871,
											"name": "DUP1"
										},
										{
											"begin": 135,
											"end": 1871,
											"name": "PUSH",
											"value": "522E1177"
										},
										{
											"begin": 135,
											"end": 1871,
											"name": "EQ"
										},
										{
											"begin": 135,
											"end": 1871,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 135,
											"end": 1871,
											"name": "JUMPI"
										},
										{
											"begin": 135,
											"end": 1871,
											"name": "DUP1"
										},
										{
											"begin": 135,
											"end": 1871,
											"name": "PUSH",
											"value": "68E9A07E"
										},
										{
											"begin": 135,
											"end": 1871,
											"name": "EQ"
										},
										{
											"begin": 135,
											"end": 1871,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 135,
											"end": 1871,
											"name": "JUMPI"
										},
										{
											"begin": 135,
											"end": 1871,
											"name": "DUP1"
										},
										{
											"begin": 135,
											"end": 1871,
											"name": "PUSH",
											"value": "ADE58CCB"
										},
										{
											"begin": 135,
											"end": 1871,
											"name": "EQ"
										},
										{
											"begin": 135,
											"end": 1871,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 135,
											"end": 1871,
											"name": "JUMPI"
										},
										{
											"begin": 135,
											"end": 1871,
											"name": "DUP1"
										},
										{
											"begin": 135,
											"end": 1871,
											"name": "PUSH",
											"value": "CBFC4BCE"
										},
										{
											"begin": 135,
											"end": 1871,
											"name": "EQ"
										},
										{
											"begin": 135,
											"end": 1871,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 135,
											"end": 1871,
											"name": "JUMPI"
										},
										{
											"begin": 135,
											"end": 1871,
											"name": "DUP1"
										},
										{
											"begin": 135,
											"end": 1871,
											"name": "PUSH",
											"value": "EFEDC669"
										},
										{
											"begin": 135,
											"end": 1871,
											"name": "EQ"
										},
										{
											"begin": 135,
											"end": 1871,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 135,
											"end": 1871,
											"name": "JUMPI"
										},
										{
											"begin": 135,
											"end": 1871,
											"name": "DUP1"
										},
										{
											"begin": 135,
											"end": 1871,
											"name": "PUSH",
											"value": "FA391C64"
										},
										{
											"begin": 135,
											"end": 1871,
											"name": "EQ"
										},
										{
											"begin": 135,
											"end": 1871,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 135,
											"end": 1871,
											"name": "JUMPI"
										},
										{
											"begin": 135,
											"end": 1871,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 135,
											"end": 1871,
											"name": "JUMPDEST"
										},
										{
											"begin": 135,
											"end": 1871,
											"name": "STOP"
										},
										{
											"begin": 305,
											"end": 412,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 305,
											"end": 412,
											"name": "JUMPDEST"
										},
										{
											"begin": 305,
											"end": 412,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 305,
											"end": 412,
											"name": "POP"
										},
										{
											"begin": 305,
											"end": 412,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 305,
											"end": 412,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 305,
											"end": 412,
											"name": "JUMP"
										},
										{
											"begin": 305,
											"end": 412,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 305,
											"end": 412,
											"name": "JUMPDEST"
										},
										{
											"begin": 305,
											"end": 412,
											"name": "STOP"
										},
										{
											"begin": 484,
											"end": 651,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 484,
											"end": 651,
											"name": "JUMPDEST"
										},
										{
											"begin": 484,
											"end": 651,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 484,
											"end": 651,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 484,
											"end": 651,
											"name": "JUMP"
										},
										{
											"begin": 484,
											"end": 651,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 484,
											"end": 651,
											"name": "JUMPDEST"
										},
										{
											"begin": 484,
											"end": 651,
											"name": "STOP"
										},
										{
											"begin": 1078,
											"end": 1229,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 1078,
											"end": 1229,
											"name": "JUMPDEST"
										},
										{
											"begin": 1078,
											"end": 1229,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1078,
											"end": 1229,
											"name": "POP"
										},
										{
											"begin": 1078,
											"end": 1229,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 1078,
											"end": 1229,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1078,
											"end": 1229,
											"name": "DUP1"
										},
										{
											"begin": 1078,
											"end": 1229,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1078,
											"end": 1229,
											"name": "SUB"
										},
										{
											"begin": 1078,
											"end": 1229,
											"name": "DUP2"
										},
										{
											"begin": 1078,
											"end": 1229,
											"name": "ADD"
										},
										{
											"begin": 1078,
											"end": 1229,
											"name": "SWAP1"
										},
										{
											"begin": 1078,
											"end": 1229,
											"name": "DUP1"
										},
										{
											"begin": 1078,
											"end": 1229,
											"name": "DUP1"
										},
										{
											"begin": 1078,
											"end": 1229,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1078,
											"end": 1229,
											"name": "SWAP1"
										},
										{
											"begin": 1078,
											"end": 1229,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1078,
											"end": 1229,
											"name": "ADD"
										},
										{
											"begin": 1078,
											"end": 1229,
											"name": "SWAP1"
										},
										{
											"begin": 1078,
											"end": 1229,
											"name": "SWAP3"
										},
										{
											"begin": 1078,
											"end": 1229,
											"name": "SWAP2"
										},
										{
											"begin": 1078,
											"end": 1229,
											"name": "SWAP1"
										},
										{
											"begin": 1078,
											"end": 1229,
											"name": "POP"
										},
										{
											"begin": 1078,
											"end": 1229,
											"name": "POP"
										},
										{
											"begin": 1078,
											"end": 1229,
											"name": "POP"
										},
										{
											"begin": 1078,
											"end": 1229,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 1078,
											"end": 1229,
											"name": "JUMP"
										},
										{
											"begin": 1078,
											"end": 1229,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 1078,
											"end": 1229,
											"name": "JUMPDEST"
										},
										{
											"begin": 1078,
											"end": 1229,
											"name": "STOP"
										},
										{
											"begin": 1237,
											"end": 1631,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1237,
											"end": 1631,
											"name": "JUMPDEST"
										},
										{
											"begin": 1237,
											"end": 1631,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1237,
											"end": 1631,
											"name": "POP"
										},
										{
											"begin": 1237,
											"end": 1631,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 1237,
											"end": 1631,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 1237,
											"end": 1631,
											"name": "JUMP"
										},
										{
											"begin": 1237,
											"end": 1631,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 1237,
											"end": 1631,
											"name": "JUMPDEST"
										},
										{
											"begin": 1237,
											"end": 1631,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1237,
											"end": 1631,
											"name": "MLOAD"
										},
										{
											"begin": 1237,
											"end": 1631,
											"name": "DUP1"
										},
										{
											"begin": 1237,
											"end": 1631,
											"name": "DUP4"
										},
										{
											"begin": 1237,
											"end": 1631,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1237,
											"end": 1631,
											"name": "NOT"
										},
										{
											"begin": 1237,
											"end": 1631,
											"name": "AND"
										},
										{
											"begin": 1237,
											"end": 1631,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1237,
											"end": 1631,
											"name": "NOT"
										},
										{
											"begin": 1237,
											"end": 1631,
											"name": "AND"
										},
										{
											"begin": 1237,
											"end": 1631,
											"name": "DUP2"
										},
										{
											"begin": 1237,
											"end": 1631,
											"name": "MSTORE"
										},
										{
											"begin": 1237,
											"end": 1631,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1237,
											"end": 1631,
											"name": "ADD"
										},
										{
											"begin": 1237,
											"end": 1631,
											"name": "DUP3"
										},
										{
											"begin": 1237,
											"end": 1631,
											"name": "DUP2"
										},
										{
											"begin": 1237,
											"end": 1631,
											"name": "MSTORE"
										},
										{
											"begin": 1237,
											"end": 1631,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1237,
											"end": 1631,
											"name": "ADD"
										},
										{
											"begin": 1237,
											"end": 1631,
											"name": "SWAP3"
										},
										{
											"begin": 1237,
											"end": 1631,
											"name": "POP"
										},
										{
											"begin": 1237,
											"end": 1631,
											"name": "POP"
										},
										{
											"begin": 1237,
											"end": 1631,
											"name": "POP"
										},
										{
											"begin": 1237,
											"end": 1631,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1237,
											"end": 1631,
											"name": "MLOAD"
										},
										{
											"begin": 1237,
											"end": 1631,
											"name": "DUP1"
										},
										{
											"begin": 1237,
											"end": 1631,
											"name": "SWAP2"
										},
										{
											"begin": 1237,
											"end": 1631,
											"name": "SUB"
										},
										{
											"begin": 1237,
											"end": 1631,
											"name": "SWAP1"
										},
										{
											"begin": 1237,
											"end": 1631,
											"name": "RETURN"
										},
										{
											"begin": 659,
											"end": 1070,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 659,
											"end": 1070,
											"name": "JUMPDEST"
										},
										{
											"begin": 659,
											"end": 1070,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 659,
											"end": 1070,
											"name": "POP"
										},
										{
											"begin": 659,
											"end": 1070,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 659,
											"end": 1070,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 659,
											"end": 1070,
											"name": "DUP1"
										},
										{
											"begin": 659,
											"end": 1070,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 659,
											"end": 1070,
											"name": "SUB"
										},
										{
											"begin": 659,
											"end": 1070,
											"name": "DUP2"
										},
										{
											"begin": 659,
											"end": 1070,
											"name": "ADD"
										},
										{
											"begin": 659,
											"end": 1070,
											"name": "SWAP1"
										},
										{
											"begin": 659,
											"end": 1070,
											"name": "DUP1"
										},
										{
											"begin": 659,
											"end": 1070,
											"name": "DUP1"
										},
										{
											"begin": 659,
											"end": 1070,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 659,
											"end": 1070,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 659,
											"end": 1070,
											"name": "AND"
										},
										{
											"begin": 659,
											"end": 1070,
											"name": "SWAP1"
										},
										{
											"begin": 659,
											"end": 1070,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 659,
											"end": 1070,
											"name": "ADD"
										},
										{
											"begin": 659,
											"end": 1070,
											"name": "SWAP1"
										},
										{
											"begin": 659,
											"end": 1070,
											"name": "SWAP3"
										},
										{
											"begin": 659,
											"end": 1070,
											"name": "SWAP2"
										},
										{
											"begin": 659,
											"end": 1070,
											"name": "SWAP1"
										},
										{
											"begin": 659,
											"end": 1070,
											"name": "POP"
										},
										{
											"begin": 659,
											"end": 1070,
											"name": "POP"
										},
										{
											"begin": 659,
											"end": 1070,
											"name": "POP"
										},
										{
											"begin": 659,
											"end": 1070,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 659,
											"end": 1070,
											"name": "JUMP"
										},
										{
											"begin": 659,
											"end": 1070,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 659,
											"end": 1070,
											"name": "JUMPDEST"
										},
										{
											"begin": 659,
											"end": 1070,
											"name": "STOP"
										},
										{
											"begin": 215,
											"end": 235,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 215,
											"end": 235,
											"name": "JUMPDEST"
										},
										{
											"begin": 215,
											"end": 235,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 215,
											"end": 235,
											"name": "POP"
										},
										{
											"begin": 215,
											"end": 235,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 215,
											"end": 235,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 215,
											"end": 235,
											"name": "JUMP"
										},
										{
											"begin": 215,
											"end": 235,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 215,
											"end": 235,
											"name": "JUMPDEST"
										},
										{
											"begin": 215,
											"end": 235,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 215,
											"end": 235,
											"name": "MLOAD"
										},
										{
											"begin": 215,
											"end": 235,
											"name": "DUP1"
										},
										{
											"begin": 215,
											"end": 235,
											"name": "DUP3"
										},
										{
											"begin": 215,
											"end": 235,
											"name": "DUP2"
										},
										{
											"begin": 215,
											"end": 235,
											"name": "MSTORE"
										},
										{
											"begin": 215,
											"end": 235,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 215,
											"end": 235,
											"name": "ADD"
										},
										{
											"begin": 215,
											"end": 235,
											"name": "SWAP2"
										},
										{
											"begin": 215,
											"end": 235,
											"name": "POP"
										},
										{
											"begin": 215,
											"end": 235,
											"name": "POP"
										},
										{
											"begin": 215,
											"end": 235,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 215,
											"end": 235,
											"name": "MLOAD"
										},
										{
											"begin": 215,
											"end": 235,
											"name": "DUP1"
										},
										{
											"begin": 215,
											"end": 235,
											"name": "SWAP2"
										},
										{
											"begin": 215,
											"end": 235,
											"name": "SUB"
										},
										{
											"begin": 215,
											"end": 235,
											"name": "SWAP1"
										},
										{
											"begin": 215,
											"end": 235,
											"name": "RETURN"
										},
										{
											"begin": 1679,
											"end": 1868,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 1679,
											"end": 1868,
											"name": "JUMPDEST"
										},
										{
											"begin": 1679,
											"end": 1868,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1679,
											"end": 1868,
											"name": "POP"
										},
										{
											"begin": 1679,
											"end": 1868,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 1679,
											"end": 1868,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 1679,
											"end": 1868,
											"name": "JUMP"
										},
										{
											"begin": 1679,
											"end": 1868,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 1679,
											"end": 1868,
											"name": "JUMPDEST"
										},
										{
											"begin": 1679,
											"end": 1868,
											"name": "STOP"
										},
										{
											"begin": 305,
											"end": 412,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 305,
											"end": 412,
											"name": "JUMPDEST"
										},
										{
											"begin": 370,
											"end": 374,
											"name": "ADDRESS"
										},
										{
											"begin": 349,
											"end": 375,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 349,
											"end": 375,
											"name": "AND"
										},
										{
											"begin": 349,
											"end": 359,
											"name": "CALLER"
										},
										{
											"begin": 349,
											"end": 375,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 349,
											"end": 375,
											"name": "AND"
										},
										{
											"begin": 349,
											"end": 375,
											"name": "EQ"
										},
										{
											"begin": 341,
											"end": 376,
											"name": "ISZERO"
										},
										{
											"begin": 341,
											"end": 376,
											"name": "ISZERO"
										},
										{
											"begin": 341,
											"end": 376,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 341,
											"end": 376,
											"name": "JUMPI"
										},
										{
											"begin": 341,
											"end": 376,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 341,
											"end": 376,
											"name": "DUP1"
										},
										{
											"begin": 341,
											"end": 376,
											"name": "REVERT"
										},
										{
											"begin": 341,
											"end": 376,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 341,
											"end": 376,
											"name": "JUMPDEST"
										},
										{
											"begin": 395,
											"end": 404,
											"name": "ORIGIN"
										},
										{
											"begin": 387,
											"end": 392,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 387,
											"end": 392,
											"name": "DUP1"
										},
										{
											"begin": 387,
											"end": 404,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 387,
											"end": 404,
											"name": "EXP"
										},
										{
											"begin": 387,
											"end": 404,
											"name": "DUP2"
										},
										{
											"begin": 387,
											"end": 404,
											"name": "SLOAD"
										},
										{
											"begin": 387,
											"end": 404,
											"name": "DUP2"
										},
										{
											"begin": 387,
											"end": 404,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 387,
											"end": 404,
											"name": "MUL"
										},
										{
											"begin": 387,
											"end": 404,
											"name": "NOT"
										},
										{
											"begin": 387,
											"end": 404,
											"name": "AND"
										},
										{
											"begin": 387,
											"end": 404,
											"name": "SWAP1"
										},
										{
											"begin": 387,
											"end": 404,
											"name": "DUP4"
										},
										{
											"begin": 387,
											"end": 404,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 387,
											"end": 404,
											"name": "AND"
										},
										{
											"begin": 387,
											"end": 404,
											"name": "MUL"
										},
										{
											"begin": 387,
											"end": 404,
											"name": "OR"
										},
										{
											"begin": 387,
											"end": 404,
											"name": "SWAP1"
										},
										{
											"begin": 387,
											"end": 404,
											"name": "SSTORE"
										},
										{
											"begin": 387,
											"end": 404,
											"name": "POP"
										},
										{
											"begin": 305,
											"end": 412,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 484,
											"end": 651,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 484,
											"end": 651,
											"name": "JUMPDEST"
										},
										{
											"begin": 558,
											"end": 559,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 544,
											"end": 548,
											"name": "ADDRESS"
										},
										{
											"begin": 536,
											"end": 557,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 536,
											"end": 557,
											"name": "AND"
										},
										{
											"begin": 536,
											"end": 557,
											"name": "BALANCE"
										},
										{
											"begin": 536,
											"end": 559,
											"name": "GT"
										},
										{
											"begin": 528,
											"end": 560,
											"name": "ISZERO"
										},
										{
											"begin": 528,
											"end": 560,
											"name": "ISZERO"
										},
										{
											"begin": 528,
											"end": 560,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 528,
											"end": 560,
											"name": "JUMPI"
										},
										{
											"begin": 528,
											"end": 560,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 528,
											"end": 560,
											"name": "DUP1"
										},
										{
											"begin": 528,
											"end": 560,
											"name": "REVERT"
										},
										{
											"begin": 528,
											"end": 560,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 528,
											"end": 560,
											"name": "JUMPDEST"
										},
										{
											"begin": 592,
											"end": 596,
											"name": "ADDRESS"
										},
										{
											"begin": 584,
											"end": 605,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 584,
											"end": 605,
											"name": "AND"
										},
										{
											"begin": 584,
											"end": 605,
											"name": "BALANCE"
										},
										{
											"begin": 574,
											"end": 583,
											"name": "CALLVALUE"
										},
										{
											"begin": 574,
											"end": 605,
											"name": "GT"
										},
										{
											"begin": 571,
											"end": 642,
											"name": "ISZERO"
										},
										{
											"begin": 571,
											"end": 642,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 571,
											"end": 642,
											"name": "JUMPI"
										},
										{
											"begin": 627,
											"end": 630,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 621,
											"end": 626,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 621,
											"end": 630,
											"name": "DUP2"
										},
										{
											"begin": 621,
											"end": 630,
											"name": "SWAP1"
										},
										{
											"begin": 621,
											"end": 630,
											"name": "SSTORE"
										},
										{
											"begin": 621,
											"end": 630,
											"name": "POP"
										},
										{
											"begin": 571,
											"end": 642,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 571,
											"end": 642,
											"name": "JUMPDEST"
										},
										{
											"begin": 484,
											"end": 651,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1078,
											"end": 1229,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 1078,
											"end": 1229,
											"name": "JUMPDEST"
										},
										{
											"begin": 1156,
											"end": 1160,
											"name": "ADDRESS"
										},
										{
											"begin": 1136,
											"end": 1161,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1136,
											"end": 1161,
											"name": "AND"
										},
										{
											"begin": 1136,
											"end": 1146,
											"name": "CALLER"
										},
										{
											"begin": 1136,
											"end": 1161,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1136,
											"end": 1161,
											"name": "AND"
										},
										{
											"begin": 1136,
											"end": 1161,
											"name": "EQ"
										},
										{
											"begin": 1128,
											"end": 1162,
											"name": "ISZERO"
										},
										{
											"begin": 1128,
											"end": 1162,
											"name": "ISZERO"
										},
										{
											"begin": 1128,
											"end": 1162,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 1128,
											"end": 1162,
											"name": "JUMPI"
										},
										{
											"begin": 1128,
											"end": 1162,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1128,
											"end": 1162,
											"name": "DUP1"
										},
										{
											"begin": 1128,
											"end": 1162,
											"name": "REVERT"
										},
										{
											"begin": 1128,
											"end": 1162,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 1128,
											"end": 1162,
											"name": "JUMPDEST"
										},
										{
											"begin": 1207,
											"end": 1210,
											"name": "DUP1"
										},
										{
											"begin": 1205,
											"end": 1206,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1198,
											"end": 1211,
											"name": "SSTORE"
										},
										{
											"begin": 1182,
											"end": 1222,
											"name": "POP"
										},
										{
											"begin": 1182,
											"end": 1222,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1237,
											"end": 1631,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 1237,
											"end": 1631,
											"name": "JUMPDEST"
										},
										{
											"begin": 1278,
											"end": 1288,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1290,
											"end": 1301,
											"name": "DUP1"
										},
										{
											"begin": 1366,
											"end": 1370,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1350,
											"end": 1364,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 1347,
											"end": 1371,
											"name": "EQ"
										},
										{
											"begin": 1340,
											"end": 1372,
											"name": "ISZERO"
										},
										{
											"begin": 1337,
											"end": 1339,
											"name": "ISZERO"
										},
										{
											"begin": 1337,
											"end": 1339,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 1337,
											"end": 1339,
											"name": "JUMPI"
										},
										{
											"begin": 1385,
											"end": 1386,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1382,
											"end": 1383,
											"name": "DUP1"
										},
										{
											"begin": 1375,
											"end": 1387,
											"name": "REVERT"
										},
										{
											"begin": 1337,
											"end": 1339,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 1337,
											"end": 1339,
											"name": "JUMPDEST"
										},
										{
											"begin": 1420,
											"end": 1424,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1425,
											"name": "MLOAD"
										},
										{
											"begin": 1462,
											"end": 1466,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1459,
											"end": 1460,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1457,
											"name": "DUP3"
										},
										{
											"begin": 1439,
											"end": 1467,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 1504,
											"end": 1570,
											"name": "PUSH",
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1498,
											"end": 1501,
											"name": "DUP2"
										},
										{
											"begin": 1492,
											"end": 1502,
											"name": "MLOAD"
										},
										{
											"begin": 1488,
											"end": 1571,
											"name": "AND"
										},
										{
											"begin": 1481,
											"end": 1571,
											"name": "SWAP3"
										},
										{
											"begin": 1481,
											"end": 1571,
											"name": "POP"
										},
										{
											"begin": 1608,
											"end": 1611,
											"name": "DUP1"
										},
										{
											"begin": 1602,
											"end": 1606,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1598,
											"end": 1612,
											"name": "ADD"
										},
										{
											"begin": 1592,
											"end": 1613,
											"name": "MLOAD"
										},
										{
											"begin": 1585,
											"end": 1613,
											"name": "SWAP2"
										},
										{
											"begin": 1585,
											"end": 1613,
											"name": "POP"
										},
										{
											"begin": 1322,
											"end": 1624,
											"name": "POP"
										},
										{
											"begin": 1322,
											"end": 1624,
											"name": "SWAP1"
										},
										{
											"begin": 1322,
											"end": 1624,
											"name": "SWAP2"
										},
										{
											"begin": 1322,
											"end": 1624,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 659,
											"end": 1070,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 659,
											"end": 1070,
											"name": "JUMPDEST"
										},
										{
											"begin": 820,
											"end": 830,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 831,
											"end": 842,
											"name": "DUP1"
										},
										{
											"begin": 871,
											"end": 883,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 782,
											"end": 787,
											"name": "DUP1"
										},
										{
											"begin": 714,
											"end": 787,
											"name": "ISZERO"
										},
										{
											"begin": 714,
											"end": 787,
											"name": "ISZERO"
										},
										{
											"begin": 714,
											"end": 721,
											"name": "DUP5"
										},
										{
											"begin": 714,
											"end": 734,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 714,
											"end": 734,
											"name": "AND"
										},
										{
											"begin": 758,
											"end": 776,
											"name": "PUSH",
											"value": "CBFC4BCE"
										},
										{
											"begin": 758,
											"end": 776,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 758,
											"end": 776,
											"name": "MUL"
										},
										{
											"begin": 735,
											"end": 777,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 735,
											"end": 777,
											"name": "MLOAD"
										},
										{
											"begin": 735,
											"end": 777,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 735,
											"end": 777,
											"name": "ADD"
										},
										{
											"begin": 735,
											"end": 777,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 735,
											"end": 777,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 735,
											"end": 777,
											"name": "SWAP1"
										},
										{
											"begin": 735,
											"end": 777,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 735,
											"end": 777,
											"name": "MSTORE"
										},
										{
											"begin": 735,
											"end": 777,
											"name": "SWAP1"
										},
										{
											"begin": 735,
											"end": 777,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 735,
											"end": 777,
											"name": "NOT"
										},
										{
											"begin": 735,
											"end": 777,
											"name": "AND"
										},
										{
											"begin": 38,
											"end": 42,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29,
											"end": 36,
											"name": "DUP3"
										},
										{
											"begin": 25,
											"end": 43,
											"name": "ADD"
										},
										{
											"begin": 67,
											"end": 77,
											"name": "DUP1"
										},
										{
											"begin": 61,
											"end": 78,
											"name": "MLOAD"
										},
										{
											"begin": 96,
											"end": 154,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 199,
											"end": 207,
											"name": "DUP4"
										},
										{
											"begin": 192,
											"end": 196,
											"name": "DUP2"
										},
										{
											"begin": 186,
											"end": 190,
											"name": "DUP4"
										},
										{
											"begin": 182,
											"end": 197,
											"name": "AND"
										},
										{
											"begin": 179,
											"end": 208,
											"name": "OR"
										},
										{
											"begin": 167,
											"end": 177,
											"name": "DUP4"
										},
										{
											"begin": 160,
											"end": 209,
											"name": "MSTORE"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 735,
											"end": 777,
											"name": "POP"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "MLOAD"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "DUP1"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "DUP3"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "DUP1"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "MLOAD"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "SWAP1"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "ADD"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "SWAP1"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "DUP1"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "DUP4"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "POP"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "POP"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "POP"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "SWAP1"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "POP"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "SWAP1"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "DUP2"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "ADD"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "SWAP1"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "AND"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "DUP1"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "ISZERO"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "JUMPI"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "DUP1"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "DUP3"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "SUB"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "DUP1"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "MLOAD"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "DUP4"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "SUB"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "EXP"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "SUB"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "NOT"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "AND"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "DUP2"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "MSTORE"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "ADD"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "SWAP2"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "POP"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "JUMPDEST"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "POP"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "SWAP2"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "POP"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "POP"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "MLOAD"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "DUP1"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "DUP4"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "SUB"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "DUP2"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "DUP6"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "GAS"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "DELEGATECALL"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "SWAP2"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "POP"
										},
										{
											"begin": 714,
											"end": 778,
											"name": "POP"
										},
										{
											"begin": 714,
											"end": 787,
											"name": "ISZERO"
										},
										{
											"begin": 714,
											"end": 787,
											"name": "ISZERO"
										},
										{
											"begin": 714,
											"end": 787,
											"name": "EQ"
										},
										{
											"begin": 706,
											"end": 808,
											"name": "ISZERO"
										},
										{
											"begin": 706,
											"end": 808,
											"name": "ISZERO"
										},
										{
											"begin": 706,
											"end": 808,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 706,
											"end": 808,
											"name": "JUMPI"
										},
										{
											"begin": 706,
											"end": 808,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 706,
											"end": 808,
											"name": "MLOAD"
										},
										{
											"begin": 706,
											"end": 808,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 706,
											"end": 808,
											"name": "DUP2"
										},
										{
											"begin": 706,
											"end": 808,
											"name": "MSTORE"
										},
										{
											"begin": 706,
											"end": 808,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 706,
											"end": 808,
											"name": "ADD"
										},
										{
											"begin": 706,
											"end": 808,
											"name": "DUP1"
										},
										{
											"begin": 706,
											"end": 808,
											"name": "DUP1"
										},
										{
											"begin": 706,
											"end": 808,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 706,
											"end": 808,
											"name": "ADD"
										},
										{
											"begin": 706,
											"end": 808,
											"name": "DUP3"
										},
										{
											"begin": 706,
											"end": 808,
											"name": "DUP2"
										},
										{
											"begin": 706,
											"end": 808,
											"name": "SUB"
										},
										{
											"begin": 706,
											"end": 808,
											"name": "DUP3"
										},
										{
											"begin": 706,
											"end": 808,
											"name": "MSTORE"
										},
										{
											"begin": 706,
											"end": 808,
											"name": "PUSH",
											"value": "10"
										},
										{
											"begin": 706,
											"end": 808,
											"name": "DUP2"
										},
										{
											"begin": 706,
											"end": 808,
											"name": "MSTORE"
										},
										{
											"begin": 706,
											"end": 808,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 706,
											"end": 808,
											"name": "ADD"
										},
										{
											"begin": 706,
											"end": 808,
											"name": "DUP1"
										},
										{
											"begin": 706,
											"end": 808,
											"name": "PUSH",
											"value": "756E7361666520657865637574696F6E00000000000000000000000000000000"
										},
										{
											"begin": 706,
											"end": 808,
											"name": "DUP2"
										},
										{
											"begin": 706,
											"end": 808,
											"name": "MSTORE"
										},
										{
											"begin": 706,
											"end": 808,
											"name": "POP"
										},
										{
											"begin": 706,
											"end": 808,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 706,
											"end": 808,
											"name": "ADD"
										},
										{
											"begin": 706,
											"end": 808,
											"name": "SWAP2"
										},
										{
											"begin": 706,
											"end": 808,
											"name": "POP"
										},
										{
											"begin": 706,
											"end": 808,
											"name": "POP"
										},
										{
											"begin": 706,
											"end": 808,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 706,
											"end": 808,
											"name": "MLOAD"
										},
										{
											"begin": 706,
											"end": 808,
											"name": "DUP1"
										},
										{
											"begin": 706,
											"end": 808,
											"name": "SWAP2"
										},
										{
											"begin": 706,
											"end": 808,
											"name": "SUB"
										},
										{
											"begin": 706,
											"end": 808,
											"name": "SWAP1"
										},
										{
											"begin": 706,
											"end": 808,
											"name": "REVERT"
										},
										{
											"begin": 706,
											"end": 808,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 706,
											"end": 808,
											"name": "JUMPDEST"
										},
										{
											"begin": 846,
											"end": 858,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 846,
											"end": 856,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 846,
											"end": 858,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 846,
											"end": 858,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 846,
											"end": 858,
											"name": "JUMPDEST"
										},
										{
											"begin": 819,
											"end": 858,
											"name": "SWAP3"
										},
										{
											"begin": 819,
											"end": 858,
											"name": "POP"
										},
										{
											"begin": 819,
											"end": 858,
											"name": "SWAP3"
										},
										{
											"begin": 819,
											"end": 858,
											"name": "POP"
										},
										{
											"begin": 894,
											"end": 898,
											"name": "ADDRESS"
										},
										{
											"begin": 886,
											"end": 904,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 886,
											"end": 904,
											"name": "AND"
										},
										{
											"begin": 905,
											"end": 908,
											"name": "DUP4"
										},
										{
											"begin": 886,
											"end": 909,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 886,
											"end": 909,
											"name": "SWAP1"
										},
										{
											"begin": 886,
											"end": 909,
											"name": "DIV"
										},
										{
											"begin": 886,
											"end": 909,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 886,
											"end": 909,
											"name": "MLOAD"
										},
										{
											"begin": 886,
											"end": 909,
											"name": "DUP2"
										},
										{
											"begin": 886,
											"end": 909,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 886,
											"end": 909,
											"name": "AND"
										},
										{
											"begin": 886,
											"end": 909,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 886,
											"end": 909,
											"name": "MUL"
										},
										{
											"begin": 886,
											"end": 909,
											"name": "DUP2"
										},
										{
											"begin": 886,
											"end": 909,
											"name": "MSTORE"
										},
										{
											"begin": 886,
											"end": 909,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 886,
											"end": 909,
											"name": "ADD"
										},
										{
											"begin": 886,
											"end": 909,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 886,
											"end": 909,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 886,
											"end": 909,
											"name": "MLOAD"
										},
										{
											"begin": 886,
											"end": 909,
											"name": "DUP1"
										},
										{
											"begin": 886,
											"end": 909,
											"name": "DUP4"
										},
										{
											"begin": 886,
											"end": 909,
											"name": "SUB"
										},
										{
											"begin": 886,
											"end": 909,
											"name": "DUP2"
										},
										{
											"begin": 886,
											"end": 909,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 886,
											"end": 909,
											"name": "DUP8"
										},
										{
											"begin": 886,
											"end": 909,
											"name": "GAS"
										},
										{
											"begin": 886,
											"end": 909,
											"name": "CALL"
										},
										{
											"begin": 886,
											"end": 909,
											"name": "SWAP3"
										},
										{
											"begin": 886,
											"end": 909,
											"name": "POP"
										},
										{
											"begin": 886,
											"end": 909,
											"name": "POP"
										},
										{
											"begin": 886,
											"end": 909,
											"name": "POP"
										},
										{
											"begin": 871,
											"end": 909,
											"name": "SWAP1"
										},
										{
											"begin": 871,
											"end": 909,
											"name": "POP"
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP1"
										},
										{
											"begin": 920,
											"end": 954,
											"name": "ISZERO"
										},
										{
											"begin": 920,
											"end": 954,
											"name": "ISZERO"
										},
										{
											"begin": 920,
											"end": 954,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 920,
											"end": 954,
											"name": "JUMPI"
										},
										{
											"begin": 920,
											"end": 954,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 920,
											"end": 954,
											"name": "MLOAD"
										},
										{
											"begin": 920,
											"end": 954,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 920,
											"end": 954,
											"name": "DUP2"
										},
										{
											"begin": 920,
											"end": 954,
											"name": "MSTORE"
										},
										{
											"begin": 920,
											"end": 954,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 920,
											"end": 954,
											"name": "ADD"
										},
										{
											"begin": 920,
											"end": 954,
											"name": "DUP1"
										},
										{
											"begin": 920,
											"end": 954,
											"name": "DUP1"
										},
										{
											"begin": 920,
											"end": 954,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 920,
											"end": 954,
											"name": "ADD"
										},
										{
											"begin": 920,
											"end": 954,
											"name": "DUP3"
										},
										{
											"begin": 920,
											"end": 954,
											"name": "DUP2"
										},
										{
											"begin": 920,
											"end": 954,
											"name": "SUB"
										},
										{
											"begin": 920,
											"end": 954,
											"name": "DUP3"
										},
										{
											"begin": 920,
											"end": 954,
											"name": "MSTORE"
										},
										{
											"begin": 920,
											"end": 954,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 920,
											"end": 954,
											"name": "DUP2"
										},
										{
											"begin": 920,
											"end": 954,
											"name": "MSTORE"
										},
										{
											"begin": 920,
											"end": 954,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 920,
											"end": 954,
											"name": "ADD"
										},
										{
											"begin": 920,
											"end": 954,
											"name": "DUP1"
										},
										{
											"begin": 920,
											"end": 954,
											"name": "PUSH",
											"value": "676966742063616C6C206572726F720000000000000000000000000000000000"
										},
										{
											"begin": 920,
											"end": 954,
											"name": "DUP2"
										},
										{
											"begin": 920,
											"end": 954,
											"name": "MSTORE"
										},
										{
											"begin": 920,
											"end": 954,
											"name": "POP"
										},
										{
											"begin": 920,
											"end": 954,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 920,
											"end": 954,
											"name": "ADD"
										},
										{
											"begin": 920,
											"end": 954,
											"name": "SWAP2"
										},
										{
											"begin": 920,
											"end": 954,
											"name": "POP"
										},
										{
											"begin": 920,
											"end": 954,
											"name": "POP"
										},
										{
											"begin": 920,
											"end": 954,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 920,
											"end": 954,
											"name": "MLOAD"
										},
										{
											"begin": 920,
											"end": 954,
											"name": "DUP1"
										},
										{
											"begin": 920,
											"end": 954,
											"name": "SWAP2"
										},
										{
											"begin": 920,
											"end": 954,
											"name": "SUB"
										},
										{
											"begin": 920,
											"end": 954,
											"name": "SWAP1"
										},
										{
											"begin": 920,
											"end": 954,
											"name": "REVERT"
										},
										{
											"begin": 920,
											"end": 954,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 920,
											"end": 954,
											"name": "JUMPDEST"
										},
										{
											"begin": 984,
											"end": 988,
											"name": "ADDRESS"
										},
										{
											"begin": 976,
											"end": 994,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 976,
											"end": 994,
											"name": "AND"
										},
										{
											"begin": 273,
											"end": 298,
											"name": "PUSH",
											"value": "68E9A07E"
										},
										{
											"begin": 273,
											"end": 298,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 273,
											"end": 298,
											"name": "MUL"
										},
										{
											"begin": 1016,
											"end": 1019,
											"name": "DUP4"
										},
										{
											"begin": 995,
											"end": 1020,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 995,
											"end": 1020,
											"name": "MLOAD"
										},
										{
											"begin": 995,
											"end": 1020,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 995,
											"end": 1020,
											"name": "ADD"
										},
										{
											"begin": 995,
											"end": 1020,
											"name": "DUP1"
										},
										{
											"begin": 995,
											"end": 1020,
											"name": "DUP4"
										},
										{
											"begin": 995,
											"end": 1020,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 995,
											"end": 1020,
											"name": "NOT"
										},
										{
											"begin": 995,
											"end": 1020,
											"name": "AND"
										},
										{
											"begin": 995,
											"end": 1020,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 995,
											"end": 1020,
											"name": "NOT"
										},
										{
											"begin": 995,
											"end": 1020,
											"name": "AND"
										},
										{
											"begin": 995,
											"end": 1020,
											"name": "DUP2"
										},
										{
											"begin": 995,
											"end": 1020,
											"name": "MSTORE"
										},
										{
											"begin": 995,
											"end": 1020,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 995,
											"end": 1020,
											"name": "ADD"
										},
										{
											"begin": 995,
											"end": 1020,
											"name": "DUP3"
										},
										{
											"begin": 995,
											"end": 1020,
											"name": "DUP2"
										},
										{
											"begin": 995,
											"end": 1020,
											"name": "MSTORE"
										},
										{
											"begin": 995,
											"end": 1020,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 995,
											"end": 1020,
											"name": "ADD"
										},
										{
											"begin": 995,
											"end": 1020,
											"name": "SWAP3"
										},
										{
											"begin": 995,
											"end": 1020,
											"name": "POP"
										},
										{
											"begin": 995,
											"end": 1020,
											"name": "POP"
										},
										{
											"begin": 995,
											"end": 1020,
											"name": "POP"
										},
										{
											"begin": 995,
											"end": 1020,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 995,
											"end": 1020,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 995,
											"end": 1020,
											"name": "SWAP1"
										},
										{
											"begin": 995,
											"end": 1020,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 995,
											"end": 1020,
											"name": "MSTORE"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "MLOAD"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "DUP1"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "DUP3"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "DUP1"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "MLOAD"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "SWAP1"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "ADD"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "SWAP1"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "DUP1"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "DUP4"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "POP"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "POP"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "POP"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "SWAP1"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "POP"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "SWAP1"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "DUP2"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "ADD"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "SWAP1"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "AND"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "DUP1"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "ISZERO"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "JUMPI"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "DUP1"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "DUP3"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "SUB"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "DUP1"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "MLOAD"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "DUP4"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "SUB"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "EXP"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "SUB"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "NOT"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "AND"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "DUP2"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "MSTORE"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "ADD"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "SWAP2"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "POP"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "JUMPDEST"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "POP"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "SWAP2"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "POP"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "POP"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "MLOAD"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "DUP1"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "DUP4"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "SUB"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "DUP2"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "DUP7"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "GAS"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "CALL"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "SWAP2"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "POP"
										},
										{
											"begin": 976,
											"end": 1021,
											"name": "POP"
										},
										{
											"begin": 967,
											"end": 1021,
											"name": "SWAP1"
										},
										{
											"begin": 967,
											"end": 1021,
											"name": "POP"
										},
										{
											"begin": 1040,
											"end": 1047,
											"name": "DUP1"
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "ISZERO"
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "ISZERO"
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "JUMPI"
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "MLOAD"
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "DUP2"
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "MSTORE"
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "ADD"
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "DUP1"
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "DUP1"
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "ADD"
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "DUP3"
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "DUP2"
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "SUB"
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "DUP3"
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "MSTORE"
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "DUP2"
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "MSTORE"
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "ADD"
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "DUP1"
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "PUSH",
											"value": "63616C6C206661696C6564000000000000000000000000000000000000000000"
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "DUP2"
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "MSTORE"
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "POP"
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "ADD"
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "SWAP2"
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "POP"
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "POP"
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "MLOAD"
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "DUP1"
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "SWAP2"
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "SUB"
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "SWAP1"
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "REVERT"
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "JUMPDEST"
										},
										{
											"begin": 659,
											"end": 1070,
											"name": "POP"
										},
										{
											"begin": 659,
											"end": 1070,
											"name": "POP"
										},
										{
											"begin": 659,
											"end": 1070,
											"name": "POP"
										},
										{
											"begin": 659,
											"end": 1070,
											"name": "POP"
										},
										{
											"begin": 659,
											"end": 1070,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 215,
											"end": 235,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 215,
											"end": 235,
											"name": "JUMPDEST"
										},
										{
											"begin": 215,
											"end": 235,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 215,
											"end": 235,
											"name": "SLOAD"
										},
										{
											"begin": 215,
											"end": 235,
											"name": "DUP2"
										},
										{
											"begin": 215,
											"end": 235,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1679,
											"end": 1868,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 1679,
											"end": 1868,
											"name": "JUMPDEST"
										},
										{
											"begin": 1724,
											"end": 1725,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1718,
											"end": 1723,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1718,
											"end": 1725,
											"name": "DUP2"
										},
										{
											"begin": 1718,
											"end": 1725,
											"name": "SWAP1"
										},
										{
											"begin": 1718,
											"end": 1725,
											"name": "SSTORE"
										},
										{
											"begin": 1718,
											"end": 1725,
											"name": "POP"
										},
										{
											"begin": 1751,
											"end": 1756,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1751,
											"end": 1756,
											"name": "DUP1"
										},
										{
											"begin": 1751,
											"end": 1756,
											"name": "SWAP1"
										},
										{
											"begin": 1751,
											"end": 1756,
											"name": "SLOAD"
										},
										{
											"begin": 1751,
											"end": 1756,
											"name": "SWAP1"
										},
										{
											"begin": 1751,
											"end": 1756,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1751,
											"end": 1756,
											"name": "EXP"
										},
										{
											"begin": 1751,
											"end": 1756,
											"name": "SWAP1"
										},
										{
											"begin": 1751,
											"end": 1756,
											"name": "DIV"
										},
										{
											"begin": 1751,
											"end": 1756,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1751,
											"end": 1756,
											"name": "AND"
										},
										{
											"begin": 1739,
											"end": 1756,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1739,
											"end": 1756,
											"name": "AND"
										},
										{
											"begin": 1739,
											"end": 1749,
											"name": "CALLER"
										},
										{
											"begin": 1739,
											"end": 1756,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1739,
											"end": 1756,
											"name": "AND"
										},
										{
											"begin": 1739,
											"end": 1756,
											"name": "EQ"
										},
										{
											"begin": 1736,
											"end": 1793,
											"name": "ISZERO"
										},
										{
											"begin": 1736,
											"end": 1793,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 1736,
											"end": 1793,
											"name": "JUMPI"
										},
										{
											"begin": 1779,
											"end": 1781,
											"name": "PUSH",
											"value": "32"
										},
										{
											"begin": 1772,
											"end": 1777,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1772,
											"end": 1777,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1772,
											"end": 1781,
											"name": "DUP3"
										},
										{
											"begin": 1772,
											"end": 1781,
											"name": "DUP3"
										},
										{
											"begin": 1772,
											"end": 1781,
											"name": "SLOAD"
										},
										{
											"begin": 1772,
											"end": 1781,
											"name": "ADD"
										},
										{
											"begin": 1772,
											"end": 1781,
											"name": "SWAP3"
										},
										{
											"begin": 1772,
											"end": 1781,
											"name": "POP"
										},
										{
											"begin": 1772,
											"end": 1781,
											"name": "POP"
										},
										{
											"begin": 1772,
											"end": 1781,
											"name": "DUP2"
										},
										{
											"begin": 1772,
											"end": 1781,
											"name": "SWAP1"
										},
										{
											"begin": 1772,
											"end": 1781,
											"name": "SSTORE"
										},
										{
											"begin": 1772,
											"end": 1781,
											"name": "POP"
										},
										{
											"begin": 1736,
											"end": 1793,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 1736,
											"end": 1793,
											"name": "JUMPDEST"
										},
										{
											"begin": 1818,
											"end": 1824,
											"name": "PUSH",
											"value": "2022"
										},
										{
											"begin": 1806,
											"end": 1814,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1806,
											"end": 1814,
											"name": "SLOAD"
										},
										{
											"begin": 1806,
											"end": 1824,
											"name": "EQ"
										},
										{
											"begin": 1803,
											"end": 1861,
											"name": "ISZERO"
										},
										{
											"begin": 1803,
											"end": 1861,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 1803,
											"end": 1861,
											"name": "JUMPI"
										},
										{
											"begin": 1847,
											"end": 1849,
											"name": "PUSH",
											"value": "32"
										},
										{
											"begin": 1840,
											"end": 1845,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1840,
											"end": 1845,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1840,
											"end": 1849,
											"name": "DUP3"
										},
										{
											"begin": 1840,
											"end": 1849,
											"name": "DUP3"
										},
										{
											"begin": 1840,
											"end": 1849,
											"name": "SLOAD"
										},
										{
											"begin": 1840,
											"end": 1849,
											"name": "ADD"
										},
										{
											"begin": 1840,
											"end": 1849,
											"name": "SWAP3"
										},
										{
											"begin": 1840,
											"end": 1849,
											"name": "POP"
										},
										{
											"begin": 1840,
											"end": 1849,
											"name": "POP"
										},
										{
											"begin": 1840,
											"end": 1849,
											"name": "DUP2"
										},
										{
											"begin": 1840,
											"end": 1849,
											"name": "SWAP1"
										},
										{
											"begin": 1840,
											"end": 1849,
											"name": "SSTORE"
										},
										{
											"begin": 1840,
											"end": 1849,
											"name": "POP"
										},
										{
											"begin": 1803,
											"end": 1861,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 1803,
											"end": 1861,
											"name": "JUMPDEST"
										},
										{
											"begin": 1679,
											"end": 1868,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"complete()": "522e1177",
							"getReturns()": "ade58ccb",
							"gift(address)": "cbfc4bce",
							"isCompleted()": "fa391c64",
							"score()": "efedc669",
							"setOwner()": "40caae06",
							"setPassword(uint256)": "68e9a07e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"complete\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"setPassword\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getReturns\",\"outputs\":[{\"name\":\"sel\",\"type\":\"bytes4\"},{\"name\":\"val\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_target\",\"type\":\"address\"}],\"name\":\"gift\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"score\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"isCompleted\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":\"safe\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"SecLessonPoc-main/contracts/delegatecall/check/safe.sol\":{\"keccak256\":\"0xc5baef4fa7cbdeac4d416be26366caaa24ee39ba7b8ec0d384603b539612ca1d\",\"urls\":[\"bzzr://38782e488c7b34c29d0f00cd33e139da9370bfebd56f80eda727b3c8abb51cd5\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "SecLessonPoc-main/contracts/delegatecall/check/safe.sol:10:36: Warning: Initial value for constant variable has to be compile-time constant. This will fail to compile with the next breaking version change.\n    bytes4 internal constant SET = this.setPassword.selector;\r\n                                   ^-----------------------^\n",
				"message": "Initial value for constant variable has to be compile-time constant. This will fail to compile with the next breaking version change.",
				"severity": "warning",
				"sourceLocation": {
					"end": 298,
					"file": "SecLessonPoc-main/contracts/delegatecall/check/safe.sol",
					"start": 273
				},
				"type": "Warning"
			}
		],
		"sources": {
			"SecLessonPoc-main/contracts/delegatecall/check/safe.sol": {
				"ast": {
					"absolutePath": "SecLessonPoc-main/contracts/delegatecall/check/safe.sol",
					"exportedSymbols": {
						"safe": [
							182
						]
					},
					"id": 183,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".23"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 182,
							"linearizedBaseContracts": [
								182
							],
							"name": "safe",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 182,
									"src": "155:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "155:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 5,
									"name": "password",
									"nodeType": "VariableDeclaration",
									"scope": 182,
									"src": "183:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "183:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 7,
									"name": "score",
									"nodeType": "VariableDeclaration",
									"scope": 182,
									"src": "215:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "215:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 12,
									"name": "SET",
									"nodeType": "VariableDeclaration",
									"scope": 182,
									"src": "242:56:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 8,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "242:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"argumentTypes": null,
										"expression": {
											"argumentTypes": null,
											"expression": {
												"argumentTypes": null,
												"id": 9,
												"name": "this",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 210,
												"src": "273:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_safe_$182",
													"typeString": "contract safe"
												}
											},
											"id": 10,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "setPassword",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 141,
											"src": "273:16:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
												"typeString": "function (uint256) external"
											}
										},
										"id": 11,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"memberName": "selector",
										"nodeType": "MemberAccess",
										"referencedDeclaration": null,
										"src": "273:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 29,
										"nodeType": "Block",
										"src": "330:82:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 21,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 16,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 197,
																	"src": "349:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 17,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "349:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 19,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 210,
																		"src": "370:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_safe_$182",
																			"typeString": "contract safe"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_safe_$182",
																			"typeString": "contract safe"
																		}
																	],
																	"id": 18,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "362:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 20,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "362:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "349:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 15,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															200,
															201
														],
														"referencedDeclaration": 200,
														"src": "341:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "341:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "341:35:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 24,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "387:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 25,
															"name": "tx",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 209,
															"src": "395:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_transaction",
																"typeString": "tx"
															}
														},
														"id": 26,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "origin",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "395:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "387:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "387:17:0"
											}
										]
									},
									"documentation": null,
									"id": 30,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "setOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "322:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "330:0:0"
									},
									"scope": 182,
									"src": "305:107:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 38,
										"nodeType": "Block",
										"src": "439:37:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 33,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "450:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 34,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "458:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 35,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "458:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "450:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "450:18:0"
											}
										]
									},
									"documentation": null,
									"id": 39,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "431:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "439:0:0"
									},
									"scope": 182,
									"src": "420:56:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 64,
										"nodeType": "Block",
										"src": "517:134:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 44,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 210,
																			"src": "544:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_safe_$182",
																				"typeString": "contract safe"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_safe_$182",
																				"typeString": "contract safe"
																			}
																		],
																		"id": 43,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "536:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 45,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "536:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "536:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 47,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "558:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "536:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 42,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															200,
															201
														],
														"referencedDeclaration": 200,
														"src": "528:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "528:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 50,
												"nodeType": "ExpressionStatement",
												"src": "528:32:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 51,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "574:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "574:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 54,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 210,
																	"src": "592:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_safe_$182",
																		"typeString": "contract safe"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_safe_$182",
																		"typeString": "contract safe"
																	}
																],
																"id": 53,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "584:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "584:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "584:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "574:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 63,
												"nodeType": "IfStatement",
												"src": "571:71:0",
												"trueBody": {
													"id": 62,
													"nodeType": "Block",
													"src": "606:36:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 58,
																	"name": "score",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 7,
																	"src": "621:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "313030",
																	"id": 59,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "627:3:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "621:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 61,
															"nodeType": "ExpressionStatement",
															"src": "621:9:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 65,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "complete",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "501:2:0"
									},
									"payable": true,
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "517:0:0"
									},
									"scope": 182,
									"src": "484:167:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "695:375:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 81,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 75,
																						"name": "this",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 210,
																						"src": "758:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_safe_$182",
																							"typeString": "contract safe"
																						}
																					},
																					"id": 76,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "gift",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 125,
																					"src": "758:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
																						"typeString": "function (address) external"
																					}
																				},
																				"id": 77,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "selector",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "758:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 73,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 184,
																				"src": "735:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 74,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "encodeWithSelector",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "735:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function (bytes4) pure returns (bytes memory)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "735:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 71,
																		"name": "_target",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 67,
																		"src": "714:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 72,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "delegatecall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "714:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_baredelegatecall_nonpayable$__$returns$_t_bool_$",
																		"typeString": "function () returns (bool)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "714:64:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 80,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "782:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "714:73:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "756e7361666520657865637574696f6e",
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "789:18:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a252843e7d551e6a5b13ae0a3a5f27f75bcc7a06c70717b4ad4c04497041bae9",
																"typeString": "literal_string \"unsafe execution\""
															},
															"value": "unsafe execution"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a252843e7d551e6a5b13ae0a3a5f27f75bcc7a06c70717b4ad4c04497041bae9",
																"typeString": "literal_string \"unsafe execution\""
															}
														],
														"id": 70,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															200,
															201
														],
														"referencedDeclaration": 201,
														"src": "706:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "706:102:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 84,
												"nodeType": "ExpressionStatement",
												"src": "706:102:0"
											},
											{
												"assignments": [
													86,
													88
												],
												"declarations": [
													{
														"constant": false,
														"id": 86,
														"name": "sel",
														"nodeType": "VariableDeclaration",
														"scope": 125,
														"src": "820:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"typeName": {
															"id": 85,
															"name": "bytes4",
															"nodeType": "ElementaryTypeName",
															"src": "820:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 88,
														"name": "val",
														"nodeType": "VariableDeclaration",
														"scope": 125,
														"src": "831:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 87,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "831:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 91,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 89,
														"name": "getReturns",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "846:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_bytes4_$_t_uint256_$",
															"typeString": "function () pure returns (bytes4,uint256)"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "846:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bytes4_$_t_uint256_$",
														"typeString": "tuple(bytes4,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "819:39:0"
											},
											{
												"assignments": [
													93
												],
												"declarations": [
													{
														"constant": false,
														"id": 93,
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 125,
														"src": "871:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 92,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "871:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 98,
															"name": "sel",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "905:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 95,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 210,
																	"src": "894:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_safe_$182",
																		"typeString": "contract safe"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_safe_$182",
																		"typeString": "contract safe"
																	}
																],
																"id": 94,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "886:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "886:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 97,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "886:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$__$returns$_t_bool_$",
															"typeString": "function () payable returns (bool)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "886:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "871:38:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 102,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "928:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "676966742063616c6c206572726f72",
															"id": 103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "936:17:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cb847bf14921cc6ccff80cfaac441eb09a695cf13a8f33ef1c24a7acb50b4b44",
																"typeString": "literal_string \"gift call error\""
															},
															"value": "gift call error"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cb847bf14921cc6ccff80cfaac441eb09a695cf13a8f33ef1c24a7acb50b4b44",
																"typeString": "literal_string \"gift call error\""
															}
														],
														"id": 101,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															200,
															201
														],
														"referencedDeclaration": 201,
														"src": "920:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "920:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 105,
												"nodeType": "ExpressionStatement",
												"src": "920:34:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 106,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 93,
														"src": "967:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 113,
																		"name": "SET",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 12,
																		"src": "1012:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 114,
																		"name": "val",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 88,
																		"src": "1016:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 111,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 184,
																		"src": "995:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 112,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "995:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 115,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "995:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 108,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 210,
																		"src": "984:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_safe_$182",
																			"typeString": "contract safe"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_safe_$182",
																			"typeString": "contract safe"
																		}
																	],
																	"id": 107,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "976:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "976:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "976:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$__$returns$_t_bool_$",
																"typeString": "function () payable returns (bool)"
															}
														},
														"id": 116,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "976:45:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "967:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 118,
												"nodeType": "ExpressionStatement",
												"src": "967:54:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 120,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "1040:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "63616c6c206661696c6564",
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1048:13:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a04f7977a7361020e07a160885cb05178aa6d9ff17ec37e942914b4316b9352a",
																"typeString": "literal_string \"call failed\""
															},
															"value": "call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a04f7977a7361020e07a160885cb05178aa6d9ff17ec37e942914b4316b9352a",
																"typeString": "literal_string \"call failed\""
															}
														],
														"id": 119,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															200,
															201
														],
														"referencedDeclaration": 201,
														"src": "1032:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1032:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 123,
												"nodeType": "ExpressionStatement",
												"src": "1032:30:0"
											}
										]
									},
									"documentation": null,
									"id": 125,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "gift",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"name": "_target",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "673:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "673:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "672:17:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "695:0:0"
									},
									"scope": 182,
									"src": "659:411:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 140,
										"nodeType": "Block",
										"src": "1117:112:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 131,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 197,
																	"src": "1136:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 132,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1136:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 134,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 210,
																		"src": "1156:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_safe_$182",
																			"typeString": "contract safe"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_safe_$182",
																			"typeString": "contract safe"
																		}
																	],
																	"id": 133,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1148:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 135,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1148:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1136:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 130,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															200,
															201
														],
														"referencedDeclaration": 200,
														"src": "1128:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1128:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 138,
												"nodeType": "ExpressionStatement",
												"src": "1128:34:0"
											},
											{
												"externalReferences": [
													{
														"val": {
															"declaration": 127,
															"isOffset": false,
															"isSlot": false,
															"src": "1207:3:0",
															"valueSize": 1
														}
													}
												],
												"id": 139,
												"nodeType": "InlineAssembly",
												"operations": "{\n    sstore(1, val)\n}",
												"src": "1173:56:0"
											}
										]
									},
									"documentation": null,
									"id": 141,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "setPassword",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"name": "val",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1099:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1099:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1098:13:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1117:0:0"
									},
									"scope": 182,
									"src": "1078:151:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 149,
										"nodeType": "Block",
										"src": "1302:329:0",
										"statements": [
											{
												"externalReferences": [
													{
														"sel": {
															"declaration": 144,
															"isOffset": false,
															"isSlot": false,
															"src": "1481:3:0",
															"valueSize": 1
														}
													},
													{
														"val": {
															"declaration": 146,
															"isOffset": false,
															"isSlot": false,
															"src": "1585:3:0",
															"valueSize": 1
														}
													}
												],
												"id": 148,
												"nodeType": "InlineAssembly",
												"operations": "{\n    if iszero(eq(returndatasize(), 0x24))\n    {\n        revert(0, 0)\n    }\n    let ptr := mload(0x40)\n    returndatacopy(ptr, 0, 0x24)\n    sel := and(mload(ptr), 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    val := mload(add(0x04, ptr))\n}",
												"src": "1313:318:0"
											}
										]
									},
									"documentation": null,
									"id": 150,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "getReturns",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1256:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"name": "sel",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "1278:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 143,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1278:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"name": "val",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "1290:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1290:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1277:25:0"
									},
									"scope": 182,
									"src": "1237:394:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 153,
										"nodeType": "Block",
										"src": "1665:2:0",
										"statements": []
									},
									"documentation": null,
									"id": 154,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1647:2:0"
									},
									"payable": true,
									"returnParameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1665:0:0"
									},
									"scope": 182,
									"src": "1639:28:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "1707:161:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 157,
														"name": "score",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "1718:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 158,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1724:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1718:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 160,
												"nodeType": "ExpressionStatement",
												"src": "1718:7:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 161,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "1739:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 162,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1739:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 163,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "1751:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1739:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 170,
												"nodeType": "IfStatement",
												"src": "1736:57:0",
												"trueBody": {
													"id": 169,
													"nodeType": "Block",
													"src": "1757:36:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 167,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 165,
																	"name": "score",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 7,
																	"src": "1772:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "3530",
																	"id": 166,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1779:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_50_by_1",
																		"typeString": "int_const 50"
																	},
																	"value": "50"
																},
																"src": "1772:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 168,
															"nodeType": "ExpressionStatement",
															"src": "1772:9:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 171,
														"name": "password",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "1806:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "307832303232",
														"id": 172,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1818:6:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_8226_by_1",
															"typeString": "int_const 8226"
														},
														"value": "0x2022"
													},
													"src": "1806:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 179,
												"nodeType": "IfStatement",
												"src": "1803:58:0",
												"trueBody": {
													"id": 178,
													"nodeType": "Block",
													"src": "1825:36:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 174,
																	"name": "score",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 7,
																	"src": "1840:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "3530",
																	"id": 175,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1847:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_50_by_1",
																		"typeString": "int_const 50"
																	},
																	"value": "50"
																},
																"src": "1840:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 177,
															"nodeType": "ExpressionStatement",
															"src": "1840:9:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 181,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "isCompleted",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1699:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1707:0:0"
									},
									"scope": 182,
									"src": "1679:189:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 183,
							"src": "135:1736:0"
						}
					],
					"src": "109:1764:0"
				},
				"id": 0
			}
		}
	}
}