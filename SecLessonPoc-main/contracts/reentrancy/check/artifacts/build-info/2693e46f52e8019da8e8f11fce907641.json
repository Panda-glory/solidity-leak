{
	"id": "2693e46f52e8019da8e8f11fce907641",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.26",
	"solcLongVersion": "0.4.26+commit.4563c3fc",
	"input": {
		"language": "Solidity",
		"sources": {
			"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol": {
				"content": "/// @knowledgePoint 重入\n\n/// @level 普通\n/// @description 为了完成此挑战，你需要先执行initWithValue()函数，随后，想办法套空合约里的这0.001ether\n\n// SPDX-License-Identifier: MIT\npragma solidity ^0.4.19;\n\ncontract Reentrance{\n    address _owner;\n    mapping (address => uint256) balances;\n    uint256 public score;\n    bool public isInit;\n\n    \n    constructor() public payable {\n        _owner = msg.sender;\n    }\n\n    //初始状态：0.001ether\n    function initWithValue() public payable{\n        if(!isInit){\n            require(address(this).balance == 1000000000000000 wei, \"should init with 0.001 ether\");\n            isInit = true;\n        }\n    }\n\n    function withdraw(uint256 amount) public payable{\n        require(balances[msg.sender] >= amount);\n        require(address(this).balance >= amount);\n        msg.sender.call.value(amount)();\n        balances[msg.sender] -= amount;\n    }\n\n    function deposit() public payable{\n        balances[msg.sender] += msg.value;\n    }\n\n    function balanceOf(address adre) public view returns(uint256){\n        return balances[adre];\n    }\n\n    function wallet() public  view returns(uint256 result){\n        return address(this).balance;\n    }\n\n    function isCompleted() public {\n        require(isInit, \"You can't do it without init\");\n        score = 0;\n        if(isContract(msg.sender)){\n            score = 25;\n        }\n        if(address(this).balance == 0){\n            score = 100;\n        }\n    }\n\n    function isContract(address addr) private view returns (bool) {\n        uint size;\n        assembly { size := extcodesize(addr) }\n        return size > 0;\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol": {
				"Reentrance": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "wallet",
							"outputs": [
								{
									"name": "result",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "adre",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "isInit",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "score",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "initWithValue",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "isCompleted",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":238:1661  contract Reentrance{... */\n  mstore(0x40, 0x80)\n    /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":430:440  msg.sender */\n  caller\n    /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":421:427  _owner */\n  0x0\n  dup1\n    /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":421:440  _owner = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":238:1661  contract Reentrance{... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":238:1661  contract Reentrance{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x521eb273\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xb145a5b8\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xd0e30db0\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xefedc669\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf8ef1085\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xfa391c64\n      eq\n      tag_9\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":695:930  function withdraw(uint256 amount) public payable{... */\n    tag_2:\n      tag_10\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_11)\n    tag_10:\n      stop\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":1130:1229  function wallet() public  view returns(uint256 result){... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_12\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_12:\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":1130:1229  function wallet() public  view returns(uint256 result){... */\n      pop\n      tag_13\n      jump(tag_14)\n    tag_13:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":1025:1124  function balanceOf(address adre) public view returns(uint256){... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_15\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_15:\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":1025:1124  function balanceOf(address adre) public view returns(uint256){... */\n      pop\n      tag_16\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_17)\n    tag_16:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":352:370  bool public isInit */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_18\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_18:\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":352:370  bool public isInit */\n      pop\n      tag_19\n      jump(tag_20)\n    tag_19:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":936:1019  function deposit() public payable{... */\n    tag_6:\n      tag_21\n      jump(tag_22)\n    tag_21:\n      stop\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":326:346  uint256 public score */\n    tag_7:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_23\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_23:\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":326:346  uint256 public score */\n      pop\n      tag_24\n      jump(tag_25)\n    tag_24:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":485:689  function initWithValue() public payable{... */\n    tag_8:\n      tag_26\n      jump(tag_27)\n    tag_26:\n      stop\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":1235:1493  function isCompleted() public {... */\n    tag_9:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_28\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_28:\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":1235:1493  function isCompleted() public {... */\n      pop\n      tag_29\n      jump(tag_30)\n    tag_29:\n      stop\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":695:930  function withdraw(uint256 amount) public payable{... */\n    tag_11:\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":785:791  amount */\n      dup1\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":761:769  balances */\n      0x1\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":761:781  balances[msg.sender] */\n      0x0\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":770:780  msg.sender */\n      caller\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":761:781  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":761:791  balances[msg.sender] >= amount */\n      lt\n      iszero\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":753:792  require(balances[msg.sender] >= amount) */\n      iszero\n      iszero\n      tag_32\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_32:\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":835:841  amount */\n      dup1\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":818:822  this */\n      address\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":810:831  address(this).balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":810:841  address(this).balance >= amount */\n      lt\n      iszero\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":802:842  require(address(this).balance >= amount) */\n      iszero\n      iszero\n      tag_33\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_33:\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":852:862  msg.sender */\n      caller\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":852:867  msg.sender.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":874:880  amount */\n      dup2\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":852:883  msg.sender.call.value(amount)() */\n      mload(0x40)\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      pop\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":917:923  amount */\n      dup1\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":893:901  balances */\n      0x1\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":893:913  balances[msg.sender] */\n      0x0\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":902:912  msg.sender */\n      caller\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":893:913  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":893:923  balances[msg.sender] -= amount */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":695:930  function withdraw(uint256 amount) public payable{... */\n      pop\n      jump\t// out\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":1130:1229  function wallet() public  view returns(uint256 result){... */\n    tag_14:\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":1169:1183  uint256 result */\n      0x0\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":1209:1213  this */\n      address\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":1201:1222  address(this).balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":1194:1222  return address(this).balance */\n      swap1\n      pop\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":1130:1229  function wallet() public  view returns(uint256 result){... */\n      swap1\n      jump\t// out\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":1025:1124  function balanceOf(address adre) public view returns(uint256){... */\n    tag_17:\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":1078:1085  uint256 */\n      0x0\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":1103:1111  balances */\n      0x1\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":1103:1117  balances[adre] */\n      0x0\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":1112:1116  adre */\n      dup4\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":1103:1117  balances[adre] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":1096:1117  return balances[adre] */\n      swap1\n      pop\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":1025:1124  function balanceOf(address adre) public view returns(uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":352:370  bool public isInit */\n    tag_20:\n      0x3\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":936:1019  function deposit() public payable{... */\n    tag_22:\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":1003:1012  msg.value */\n      callvalue\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":979:987  balances */\n      0x1\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":979:999  balances[msg.sender] */\n      0x0\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":988:998  msg.sender */\n      caller\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":979:999  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":979:1012  balances[msg.sender] += msg.value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":936:1019  function deposit() public payable{... */\n      jump\t// out\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":326:346  uint256 public score */\n    tag_25:\n      sload(0x2)\n      dup2\n      jump\t// out\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":485:689  function initWithValue() public payable{... */\n    tag_27:\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":538:544  isInit */\n      0x3\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":537:544  !isInit */\n      iszero\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":534:683  if(!isInit){... */\n      iszero\n      tag_38\n      jumpi\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":592:612  1000000000000000 wei */\n      0x38d7ea4c68000\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":575:579  this */\n      address\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":567:588  address(this).balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":567:612  address(this).balance == 1000000000000000 wei */\n      eq\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":559:645  require(address(this).balance == 1000000000000000 wei, \"should init with 0.001 ether\") */\n      iszero\n      iszero\n      tag_39\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1c\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x73686f756c6420696e6974207769746820302e30303120657468657200000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_39:\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":668:672  true */\n      0x1\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":659:665  isInit */\n      0x3\n      0x0\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":659:672  isInit = true */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":534:683  if(!isInit){... */\n    tag_38:\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":485:689  function initWithValue() public payable{... */\n      jump\t// out\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":1235:1493  function isCompleted() public {... */\n    tag_30:\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":1283:1289  isInit */\n      0x3\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":1275:1322  require(isInit, \"You can't do it without init\") */\n      iszero\n      iszero\n      tag_41\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1c\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x596f752063616e277420646f20697420776974686f757420696e697400000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_41:\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":1340:1341  0 */\n      0x0\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":1332:1337  score */\n      0x2\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":1332:1341  score = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":1354:1376  isContract(msg.sender) */\n      tag_42\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":1365:1375  msg.sender */\n      caller\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":1354:1364  isContract */\n      tag_43\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":1354:1376  isContract(msg.sender) */\n      jump\t// in\n    tag_42:\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":1351:1412  if(isContract(msg.sender)){... */\n      iszero\n      tag_44\n      jumpi\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":1399:1401  25 */\n      0x19\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":1391:1396  score */\n      0x2\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":1391:1401  score = 25 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":1351:1412  if(isContract(msg.sender)){... */\n    tag_44:\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":1449:1450  0 */\n      0x0\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":1432:1436  this */\n      address\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":1424:1445  address(this).balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":1424:1450  address(this).balance == 0 */\n      eq\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":1421:1487  if(address(this).balance == 0){... */\n      iszero\n      tag_45\n      jumpi\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":1473:1476  100 */\n      0x64\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":1465:1470  score */\n      0x2\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":1465:1476  score = 100 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":1421:1487  if(address(this).balance == 0){... */\n    tag_45:\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":1235:1493  function isCompleted() public {... */\n      jump\t// out\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":1499:1659  function isContract(address addr) private view returns (bool) {... */\n    tag_43:\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":1555:1559  bool */\n      0x0\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":1571:1580  uint size */\n      dup1\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":1621:1625  addr */\n      dup3\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":1609:1626  extcodesize(addr) */\n      extcodesize\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":1601:1626  size := extcodesize(addr) */\n      swap1\n      pop\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":1651:1652  0 */\n      0x0\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":1644:1648  size */\n      dup2\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":1644:1652  size > 0 */\n      gt\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":1637:1652  return size > 0 */\n      swap2\n      pop\n        /* \"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":1499:1659  function isContract(address addr) private view returns (bool) {... */\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820212eb198f3444806e6ce8426d31473103bd32953ebeb04b6f43c512acc6928500029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610551806100536000396000f30060806040526004361061008e576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632e1a7d4d14610093578063521eb273146100b357806370a08231146100de578063b145a5b814610135578063d0e30db014610164578063efedc6691461016e578063f8ef108514610199578063fa391c64146101a3575b600080fd5b6100b1600480360381019080803590602001909291905050506101ba565b005b3480156100bf57600080fd5b506100c86102ab565b6040518082815260200191505060405180910390f35b3480156100ea57600080fd5b5061011f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102ca565b6040518082815260200191505060405180910390f35b34801561014157600080fd5b5061014a610313565b604051808215151515815260200191505060405180910390f35b61016c610326565b005b34801561017a57600080fd5b50610183610375565b6040518082815260200191505060405180910390f35b6101a161037b565b005b3480156101af57600080fd5b506101b8610444565b005b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015151561020857600080fd5b803073ffffffffffffffffffffffffffffffffffffffff16311015151561022e57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff168160405160006040518083038185875af1925050505080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555050565b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600360009054906101000a900460ff1681565b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550565b60025481565b600360009054906101000a900460ff1615156104425766038d7ea4c680003073ffffffffffffffffffffffffffffffffffffffff1631141515610426576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f73686f756c6420696e6974207769746820302e3030312065746865720000000081525060200191505060405180910390fd5b6001600360006101000a81548160ff0219169083151502179055505b565b600360009054906101000a900460ff1615156104c8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f596f752063616e277420646f20697420776974686f757420696e69740000000081525060200191505060405180910390fd5b60006002819055506104d933610512565b156104e75760196002819055505b60003073ffffffffffffffffffffffffffffffffffffffff163114156105105760646002819055505b565b600080823b9050600081119150509190505600a165627a7a72305820212eb198f3444806e6ce8426d31473103bd32953ebeb04b6f43c512acc6928500029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x551 DUP1 PUSH2 0x53 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x8E JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x93 JUMPI DUP1 PUSH4 0x521EB273 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0xB145A5B8 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0xEFEDC669 EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0xF8EF1085 EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0xFA391C64 EQ PUSH2 0x1A3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1BA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC8 PUSH2 0x2AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14A PUSH2 0x313 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH2 0x326 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x183 PUSH2 0x375 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A1 PUSH2 0x37B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH2 0x444 JUMP JUMPDEST STOP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO ISZERO ISZERO PUSH2 0x208 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE LT ISZERO ISZERO ISZERO PUSH2 0x22E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP POP DUP1 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x442 JUMPI PUSH7 0x38D7EA4C68000 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE EQ ISZERO ISZERO PUSH2 0x426 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x73686F756C6420696E6974207769746820302E30303120657468657200000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x4C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x596F752063616E277420646F20697420776974686F757420696E697400000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x4D9 CALLER PUSH2 0x512 JUMP JUMPDEST ISZERO PUSH2 0x4E7 JUMPI PUSH1 0x19 PUSH1 0x2 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE EQ ISZERO PUSH2 0x510 JUMPI PUSH1 0x64 PUSH1 0x2 DUP2 SWAP1 SSTORE POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0x21 0x2e 0xb1 SWAP9 RETURN DIFFICULTY 0x48 MOD 0xe6 0xce DUP5 0x26 0xd3 EQ PUSH20 0x103BD32953EBEB04B6F43C512ACC692850002900 ",
							"sourceMap": "238:1423:0:-;;;430:10;421:6;;:19;;;;;;;;;;;;;;;;;;238:1423;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "60806040526004361061008e576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632e1a7d4d14610093578063521eb273146100b357806370a08231146100de578063b145a5b814610135578063d0e30db014610164578063efedc6691461016e578063f8ef108514610199578063fa391c64146101a3575b600080fd5b6100b1600480360381019080803590602001909291905050506101ba565b005b3480156100bf57600080fd5b506100c86102ab565b6040518082815260200191505060405180910390f35b3480156100ea57600080fd5b5061011f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102ca565b6040518082815260200191505060405180910390f35b34801561014157600080fd5b5061014a610313565b604051808215151515815260200191505060405180910390f35b61016c610326565b005b34801561017a57600080fd5b50610183610375565b6040518082815260200191505060405180910390f35b6101a161037b565b005b3480156101af57600080fd5b506101b8610444565b005b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015151561020857600080fd5b803073ffffffffffffffffffffffffffffffffffffffff16311015151561022e57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff168160405160006040518083038185875af1925050505080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555050565b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600360009054906101000a900460ff1681565b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550565b60025481565b600360009054906101000a900460ff1615156104425766038d7ea4c680003073ffffffffffffffffffffffffffffffffffffffff1631141515610426576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f73686f756c6420696e6974207769746820302e3030312065746865720000000081525060200191505060405180910390fd5b6001600360006101000a81548160ff0219169083151502179055505b565b600360009054906101000a900460ff1615156104c8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f596f752063616e277420646f20697420776974686f757420696e69740000000081525060200191505060405180910390fd5b60006002819055506104d933610512565b156104e75760196002819055505b60003073ffffffffffffffffffffffffffffffffffffffff163114156105105760646002819055505b565b600080823b9050600081119150509190505600a165627a7a72305820212eb198f3444806e6ce8426d31473103bd32953ebeb04b6f43c512acc6928500029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x8E JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x93 JUMPI DUP1 PUSH4 0x521EB273 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0xB145A5B8 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0xEFEDC669 EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0xF8EF1085 EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0xFA391C64 EQ PUSH2 0x1A3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1BA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC8 PUSH2 0x2AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14A PUSH2 0x313 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH2 0x326 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x183 PUSH2 0x375 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A1 PUSH2 0x37B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH2 0x444 JUMP JUMPDEST STOP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO ISZERO ISZERO PUSH2 0x208 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE LT ISZERO ISZERO ISZERO PUSH2 0x22E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP POP DUP1 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x442 JUMPI PUSH7 0x38D7EA4C68000 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE EQ ISZERO ISZERO PUSH2 0x426 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x73686F756C6420696E6974207769746820302E30303120657468657200000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x4C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x596F752063616E277420646F20697420776974686F757420696E697400000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x4D9 CALLER PUSH2 0x512 JUMP JUMPDEST ISZERO PUSH2 0x4E7 JUMPI PUSH1 0x19 PUSH1 0x2 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE EQ ISZERO PUSH2 0x510 JUMPI PUSH1 0x64 PUSH1 0x2 DUP2 SWAP1 SSTORE POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0x21 0x2e 0xb1 SWAP9 RETURN DIFFICULTY 0x48 MOD 0xe6 0xce DUP5 0x26 0xd3 EQ PUSH20 0x103BD32953EBEB04B6F43C512ACC692850002900 ",
							"sourceMap": "238:1423:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;695:235;;;;;;;;;;;;;;;;;;;;;;;;;;1130:99;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1130:99:0;;;;;;;;;;;;;;;;;;;;;;;1025;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1025:99:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;352:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;352:18:0;;;;;;;;;;;;;;;;;;;;;;;;;;;936:83;;;;;;326:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;326:20:0;;;;;;;;;;;;;;;;;;;;;;;485:204;;;;;;1235:258;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1235:258:0;;;;;;695:235;785:6;761:8;:20;770:10;761:20;;;;;;;;;;;;;;;;:30;;753:39;;;;;;;;835:6;818:4;810:21;;;:31;;802:40;;;;;;;;852:10;:15;;874:6;852:31;;;;;;;;;;;;;;;;;;917:6;893:8;:20;902:10;893:20;;;;;;;;;;;;;;;;:30;;;;;;;;;;;695:235;:::o;1130:99::-;1169:14;1209:4;1201:21;;;1194:28;;1130:99;:::o;1025:::-;1078:7;1103:8;:14;1112:4;1103:14;;;;;;;;;;;;;;;;1096:21;;1025:99;;;:::o;352:18::-;;;;;;;;;;;;;:::o;936:83::-;1003:9;979:8;:20;988:10;979:20;;;;;;;;;;;;;;;;:33;;;;;;;;;;;936:83::o;326:20::-;;;;:::o;485:204::-;538:6;;;;;;;;;;;537:7;534:149;;;592:20;575:4;567:21;;;:45;559:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;668:4;659:6;;:13;;;;;;;;;;;;;;;;;;534:149;485:204::o;1235:258::-;1283:6;;;;;;;;;;;1275:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1340:1;1332:5;:9;;;;1354:22;1365:10;1354;:22::i;:::-;1351:61;;;1399:2;1391:5;:10;;;;1351:61;1449:1;1432:4;1424:21;;;:26;1421:66;;;1473:3;1465:5;:11;;;;1421:66;1235:258::o;1499:160::-;1555:4;1571:9;1621:4;1609:17;1601:25;;1651:1;1644:4;:8;1637:15;;1499:160;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "272200",
								"executionCost": "20554",
								"totalCost": "292754"
							},
							"external": {
								"balanceOf(address)": "603",
								"deposit()": "20518",
								"initWithValue()": "21201",
								"isCompleted()": "31800",
								"isInit()": "508",
								"score()": "504",
								"wallet()": "629",
								"withdraw(uint256)": "infinite"
							},
							"internal": {
								"isContract(address)": "747"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 238,
									"end": 1661,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 238,
									"end": 1661,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 238,
									"end": 1661,
									"name": "MSTORE"
								},
								{
									"begin": 430,
									"end": 440,
									"name": "CALLER"
								},
								{
									"begin": 421,
									"end": 427,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 421,
									"end": 427,
									"name": "DUP1"
								},
								{
									"begin": 421,
									"end": 440,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 421,
									"end": 440,
									"name": "EXP"
								},
								{
									"begin": 421,
									"end": 440,
									"name": "DUP2"
								},
								{
									"begin": 421,
									"end": 440,
									"name": "SLOAD"
								},
								{
									"begin": 421,
									"end": 440,
									"name": "DUP2"
								},
								{
									"begin": 421,
									"end": 440,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 421,
									"end": 440,
									"name": "MUL"
								},
								{
									"begin": 421,
									"end": 440,
									"name": "NOT"
								},
								{
									"begin": 421,
									"end": 440,
									"name": "AND"
								},
								{
									"begin": 421,
									"end": 440,
									"name": "SWAP1"
								},
								{
									"begin": 421,
									"end": 440,
									"name": "DUP4"
								},
								{
									"begin": 421,
									"end": 440,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 421,
									"end": 440,
									"name": "AND"
								},
								{
									"begin": 421,
									"end": 440,
									"name": "MUL"
								},
								{
									"begin": 421,
									"end": 440,
									"name": "OR"
								},
								{
									"begin": 421,
									"end": 440,
									"name": "SWAP1"
								},
								{
									"begin": 421,
									"end": 440,
									"name": "SSTORE"
								},
								{
									"begin": 421,
									"end": 440,
									"name": "POP"
								},
								{
									"begin": 238,
									"end": 1661,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 238,
									"end": 1661,
									"name": "DUP1"
								},
								{
									"begin": 238,
									"end": 1661,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 238,
									"end": 1661,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 238,
									"end": 1661,
									"name": "CODECOPY"
								},
								{
									"begin": 238,
									"end": 1661,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 238,
									"end": 1661,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820212eb198f3444806e6ce8426d31473103bd32953ebeb04b6f43c512acc6928500029",
									".code": [
										{
											"begin": 238,
											"end": 1661,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 238,
											"end": 1661,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 238,
											"end": 1661,
											"name": "MSTORE"
										},
										{
											"begin": 238,
											"end": 1661,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 238,
											"end": 1661,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 238,
											"end": 1661,
											"name": "LT"
										},
										{
											"begin": 238,
											"end": 1661,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 238,
											"end": 1661,
											"name": "JUMPI"
										},
										{
											"begin": 238,
											"end": 1661,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 238,
											"end": 1661,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 238,
											"end": 1661,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 238,
											"end": 1661,
											"name": "SWAP1"
										},
										{
											"begin": 238,
											"end": 1661,
											"name": "DIV"
										},
										{
											"begin": 238,
											"end": 1661,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 238,
											"end": 1661,
											"name": "AND"
										},
										{
											"begin": 238,
											"end": 1661,
											"name": "DUP1"
										},
										{
											"begin": 238,
											"end": 1661,
											"name": "PUSH",
											"value": "2E1A7D4D"
										},
										{
											"begin": 238,
											"end": 1661,
											"name": "EQ"
										},
										{
											"begin": 238,
											"end": 1661,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 238,
											"end": 1661,
											"name": "JUMPI"
										},
										{
											"begin": 238,
											"end": 1661,
											"name": "DUP1"
										},
										{
											"begin": 238,
											"end": 1661,
											"name": "PUSH",
											"value": "521EB273"
										},
										{
											"begin": 238,
											"end": 1661,
											"name": "EQ"
										},
										{
											"begin": 238,
											"end": 1661,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 238,
											"end": 1661,
											"name": "JUMPI"
										},
										{
											"begin": 238,
											"end": 1661,
											"name": "DUP1"
										},
										{
											"begin": 238,
											"end": 1661,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 238,
											"end": 1661,
											"name": "EQ"
										},
										{
											"begin": 238,
											"end": 1661,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 238,
											"end": 1661,
											"name": "JUMPI"
										},
										{
											"begin": 238,
											"end": 1661,
											"name": "DUP1"
										},
										{
											"begin": 238,
											"end": 1661,
											"name": "PUSH",
											"value": "B145A5B8"
										},
										{
											"begin": 238,
											"end": 1661,
											"name": "EQ"
										},
										{
											"begin": 238,
											"end": 1661,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 238,
											"end": 1661,
											"name": "JUMPI"
										},
										{
											"begin": 238,
											"end": 1661,
											"name": "DUP1"
										},
										{
											"begin": 238,
											"end": 1661,
											"name": "PUSH",
											"value": "D0E30DB0"
										},
										{
											"begin": 238,
											"end": 1661,
											"name": "EQ"
										},
										{
											"begin": 238,
											"end": 1661,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 238,
											"end": 1661,
											"name": "JUMPI"
										},
										{
											"begin": 238,
											"end": 1661,
											"name": "DUP1"
										},
										{
											"begin": 238,
											"end": 1661,
											"name": "PUSH",
											"value": "EFEDC669"
										},
										{
											"begin": 238,
											"end": 1661,
											"name": "EQ"
										},
										{
											"begin": 238,
											"end": 1661,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 238,
											"end": 1661,
											"name": "JUMPI"
										},
										{
											"begin": 238,
											"end": 1661,
											"name": "DUP1"
										},
										{
											"begin": 238,
											"end": 1661,
											"name": "PUSH",
											"value": "F8EF1085"
										},
										{
											"begin": 238,
											"end": 1661,
											"name": "EQ"
										},
										{
											"begin": 238,
											"end": 1661,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 238,
											"end": 1661,
											"name": "JUMPI"
										},
										{
											"begin": 238,
											"end": 1661,
											"name": "DUP1"
										},
										{
											"begin": 238,
											"end": 1661,
											"name": "PUSH",
											"value": "FA391C64"
										},
										{
											"begin": 238,
											"end": 1661,
											"name": "EQ"
										},
										{
											"begin": 238,
											"end": 1661,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 238,
											"end": 1661,
											"name": "JUMPI"
										},
										{
											"begin": 238,
											"end": 1661,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 238,
											"end": 1661,
											"name": "JUMPDEST"
										},
										{
											"begin": 238,
											"end": 1661,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 238,
											"end": 1661,
											"name": "DUP1"
										},
										{
											"begin": 238,
											"end": 1661,
											"name": "REVERT"
										},
										{
											"begin": 695,
											"end": 930,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 695,
											"end": 930,
											"name": "JUMPDEST"
										},
										{
											"begin": 695,
											"end": 930,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 695,
											"end": 930,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 695,
											"end": 930,
											"name": "DUP1"
										},
										{
											"begin": 695,
											"end": 930,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 695,
											"end": 930,
											"name": "SUB"
										},
										{
											"begin": 695,
											"end": 930,
											"name": "DUP2"
										},
										{
											"begin": 695,
											"end": 930,
											"name": "ADD"
										},
										{
											"begin": 695,
											"end": 930,
											"name": "SWAP1"
										},
										{
											"begin": 695,
											"end": 930,
											"name": "DUP1"
										},
										{
											"begin": 695,
											"end": 930,
											"name": "DUP1"
										},
										{
											"begin": 695,
											"end": 930,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 695,
											"end": 930,
											"name": "SWAP1"
										},
										{
											"begin": 695,
											"end": 930,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 695,
											"end": 930,
											"name": "ADD"
										},
										{
											"begin": 695,
											"end": 930,
											"name": "SWAP1"
										},
										{
											"begin": 695,
											"end": 930,
											"name": "SWAP3"
										},
										{
											"begin": 695,
											"end": 930,
											"name": "SWAP2"
										},
										{
											"begin": 695,
											"end": 930,
											"name": "SWAP1"
										},
										{
											"begin": 695,
											"end": 930,
											"name": "POP"
										},
										{
											"begin": 695,
											"end": 930,
											"name": "POP"
										},
										{
											"begin": 695,
											"end": 930,
											"name": "POP"
										},
										{
											"begin": 695,
											"end": 930,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 695,
											"end": 930,
											"name": "JUMP"
										},
										{
											"begin": 695,
											"end": 930,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 695,
											"end": 930,
											"name": "JUMPDEST"
										},
										{
											"begin": 695,
											"end": 930,
											"name": "STOP"
										},
										{
											"begin": 1130,
											"end": 1229,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 1130,
											"end": 1229,
											"name": "JUMPDEST"
										},
										{
											"begin": 1130,
											"end": 1229,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1130,
											"end": 1229,
											"name": "POP"
										},
										{
											"begin": 1130,
											"end": 1229,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 1130,
											"end": 1229,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 1130,
											"end": 1229,
											"name": "JUMP"
										},
										{
											"begin": 1130,
											"end": 1229,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 1130,
											"end": 1229,
											"name": "JUMPDEST"
										},
										{
											"begin": 1130,
											"end": 1229,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1130,
											"end": 1229,
											"name": "MLOAD"
										},
										{
											"begin": 1130,
											"end": 1229,
											"name": "DUP1"
										},
										{
											"begin": 1130,
											"end": 1229,
											"name": "DUP3"
										},
										{
											"begin": 1130,
											"end": 1229,
											"name": "DUP2"
										},
										{
											"begin": 1130,
											"end": 1229,
											"name": "MSTORE"
										},
										{
											"begin": 1130,
											"end": 1229,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1130,
											"end": 1229,
											"name": "ADD"
										},
										{
											"begin": 1130,
											"end": 1229,
											"name": "SWAP2"
										},
										{
											"begin": 1130,
											"end": 1229,
											"name": "POP"
										},
										{
											"begin": 1130,
											"end": 1229,
											"name": "POP"
										},
										{
											"begin": 1130,
											"end": 1229,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1130,
											"end": 1229,
											"name": "MLOAD"
										},
										{
											"begin": 1130,
											"end": 1229,
											"name": "DUP1"
										},
										{
											"begin": 1130,
											"end": 1229,
											"name": "SWAP2"
										},
										{
											"begin": 1130,
											"end": 1229,
											"name": "SUB"
										},
										{
											"begin": 1130,
											"end": 1229,
											"name": "SWAP1"
										},
										{
											"begin": 1130,
											"end": 1229,
											"name": "RETURN"
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "JUMPDEST"
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "POP"
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "DUP1"
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "SUB"
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "DUP2"
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "ADD"
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "SWAP1"
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "DUP1"
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "DUP1"
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "AND"
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "SWAP1"
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "ADD"
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "SWAP1"
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "SWAP3"
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "SWAP2"
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "SWAP1"
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "POP"
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "POP"
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "POP"
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "JUMP"
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "JUMPDEST"
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "MLOAD"
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "DUP1"
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "DUP3"
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "DUP2"
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "MSTORE"
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "ADD"
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "SWAP2"
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "POP"
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "POP"
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "MLOAD"
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "DUP1"
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "SWAP2"
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "SUB"
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "SWAP1"
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "RETURN"
										},
										{
											"begin": 352,
											"end": 370,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 352,
											"end": 370,
											"name": "JUMPDEST"
										},
										{
											"begin": 352,
											"end": 370,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 352,
											"end": 370,
											"name": "POP"
										},
										{
											"begin": 352,
											"end": 370,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 352,
											"end": 370,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 352,
											"end": 370,
											"name": "JUMP"
										},
										{
											"begin": 352,
											"end": 370,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 352,
											"end": 370,
											"name": "JUMPDEST"
										},
										{
											"begin": 352,
											"end": 370,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 352,
											"end": 370,
											"name": "MLOAD"
										},
										{
											"begin": 352,
											"end": 370,
											"name": "DUP1"
										},
										{
											"begin": 352,
											"end": 370,
											"name": "DUP3"
										},
										{
											"begin": 352,
											"end": 370,
											"name": "ISZERO"
										},
										{
											"begin": 352,
											"end": 370,
											"name": "ISZERO"
										},
										{
											"begin": 352,
											"end": 370,
											"name": "ISZERO"
										},
										{
											"begin": 352,
											"end": 370,
											"name": "ISZERO"
										},
										{
											"begin": 352,
											"end": 370,
											"name": "DUP2"
										},
										{
											"begin": 352,
											"end": 370,
											"name": "MSTORE"
										},
										{
											"begin": 352,
											"end": 370,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 352,
											"end": 370,
											"name": "ADD"
										},
										{
											"begin": 352,
											"end": 370,
											"name": "SWAP2"
										},
										{
											"begin": 352,
											"end": 370,
											"name": "POP"
										},
										{
											"begin": 352,
											"end": 370,
											"name": "POP"
										},
										{
											"begin": 352,
											"end": 370,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 352,
											"end": 370,
											"name": "MLOAD"
										},
										{
											"begin": 352,
											"end": 370,
											"name": "DUP1"
										},
										{
											"begin": 352,
											"end": 370,
											"name": "SWAP2"
										},
										{
											"begin": 352,
											"end": 370,
											"name": "SUB"
										},
										{
											"begin": 352,
											"end": 370,
											"name": "SWAP1"
										},
										{
											"begin": 352,
											"end": 370,
											"name": "RETURN"
										},
										{
											"begin": 936,
											"end": 1019,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 936,
											"end": 1019,
											"name": "JUMPDEST"
										},
										{
											"begin": 936,
											"end": 1019,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 936,
											"end": 1019,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 936,
											"end": 1019,
											"name": "JUMP"
										},
										{
											"begin": 936,
											"end": 1019,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 936,
											"end": 1019,
											"name": "JUMPDEST"
										},
										{
											"begin": 936,
											"end": 1019,
											"name": "STOP"
										},
										{
											"begin": 326,
											"end": 346,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 326,
											"end": 346,
											"name": "JUMPDEST"
										},
										{
											"begin": 326,
											"end": 346,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 326,
											"end": 346,
											"name": "POP"
										},
										{
											"begin": 326,
											"end": 346,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 326,
											"end": 346,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 326,
											"end": 346,
											"name": "JUMP"
										},
										{
											"begin": 326,
											"end": 346,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 326,
											"end": 346,
											"name": "JUMPDEST"
										},
										{
											"begin": 326,
											"end": 346,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 326,
											"end": 346,
											"name": "MLOAD"
										},
										{
											"begin": 326,
											"end": 346,
											"name": "DUP1"
										},
										{
											"begin": 326,
											"end": 346,
											"name": "DUP3"
										},
										{
											"begin": 326,
											"end": 346,
											"name": "DUP2"
										},
										{
											"begin": 326,
											"end": 346,
											"name": "MSTORE"
										},
										{
											"begin": 326,
											"end": 346,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 326,
											"end": 346,
											"name": "ADD"
										},
										{
											"begin": 326,
											"end": 346,
											"name": "SWAP2"
										},
										{
											"begin": 326,
											"end": 346,
											"name": "POP"
										},
										{
											"begin": 326,
											"end": 346,
											"name": "POP"
										},
										{
											"begin": 326,
											"end": 346,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 326,
											"end": 346,
											"name": "MLOAD"
										},
										{
											"begin": 326,
											"end": 346,
											"name": "DUP1"
										},
										{
											"begin": 326,
											"end": 346,
											"name": "SWAP2"
										},
										{
											"begin": 326,
											"end": 346,
											"name": "SUB"
										},
										{
											"begin": 326,
											"end": 346,
											"name": "SWAP1"
										},
										{
											"begin": 326,
											"end": 346,
											"name": "RETURN"
										},
										{
											"begin": 485,
											"end": 689,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 485,
											"end": 689,
											"name": "JUMPDEST"
										},
										{
											"begin": 485,
											"end": 689,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 485,
											"end": 689,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 485,
											"end": 689,
											"name": "JUMP"
										},
										{
											"begin": 485,
											"end": 689,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 485,
											"end": 689,
											"name": "JUMPDEST"
										},
										{
											"begin": 485,
											"end": 689,
											"name": "STOP"
										},
										{
											"begin": 1235,
											"end": 1493,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 1235,
											"end": 1493,
											"name": "JUMPDEST"
										},
										{
											"begin": 1235,
											"end": 1493,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1235,
											"end": 1493,
											"name": "POP"
										},
										{
											"begin": 1235,
											"end": 1493,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 1235,
											"end": 1493,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 1235,
											"end": 1493,
											"name": "JUMP"
										},
										{
											"begin": 1235,
											"end": 1493,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 1235,
											"end": 1493,
											"name": "JUMPDEST"
										},
										{
											"begin": 1235,
											"end": 1493,
											"name": "STOP"
										},
										{
											"begin": 695,
											"end": 930,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 695,
											"end": 930,
											"name": "JUMPDEST"
										},
										{
											"begin": 785,
											"end": 791,
											"name": "DUP1"
										},
										{
											"begin": 761,
											"end": 769,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 761,
											"end": 781,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 770,
											"end": 780,
											"name": "CALLER"
										},
										{
											"begin": 761,
											"end": 781,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 761,
											"end": 781,
											"name": "AND"
										},
										{
											"begin": 761,
											"end": 781,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 761,
											"end": 781,
											"name": "AND"
										},
										{
											"begin": 761,
											"end": 781,
											"name": "DUP2"
										},
										{
											"begin": 761,
											"end": 781,
											"name": "MSTORE"
										},
										{
											"begin": 761,
											"end": 781,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 761,
											"end": 781,
											"name": "ADD"
										},
										{
											"begin": 761,
											"end": 781,
											"name": "SWAP1"
										},
										{
											"begin": 761,
											"end": 781,
											"name": "DUP2"
										},
										{
											"begin": 761,
											"end": 781,
											"name": "MSTORE"
										},
										{
											"begin": 761,
											"end": 781,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 761,
											"end": 781,
											"name": "ADD"
										},
										{
											"begin": 761,
											"end": 781,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 761,
											"end": 781,
											"name": "KECCAK256"
										},
										{
											"begin": 761,
											"end": 781,
											"name": "SLOAD"
										},
										{
											"begin": 761,
											"end": 791,
											"name": "LT"
										},
										{
											"begin": 761,
											"end": 791,
											"name": "ISZERO"
										},
										{
											"begin": 753,
											"end": 792,
											"name": "ISZERO"
										},
										{
											"begin": 753,
											"end": 792,
											"name": "ISZERO"
										},
										{
											"begin": 753,
											"end": 792,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 753,
											"end": 792,
											"name": "JUMPI"
										},
										{
											"begin": 753,
											"end": 792,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 753,
											"end": 792,
											"name": "DUP1"
										},
										{
											"begin": 753,
											"end": 792,
											"name": "REVERT"
										},
										{
											"begin": 753,
											"end": 792,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 753,
											"end": 792,
											"name": "JUMPDEST"
										},
										{
											"begin": 835,
											"end": 841,
											"name": "DUP1"
										},
										{
											"begin": 818,
											"end": 822,
											"name": "ADDRESS"
										},
										{
											"begin": 810,
											"end": 831,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 810,
											"end": 831,
											"name": "AND"
										},
										{
											"begin": 810,
											"end": 831,
											"name": "BALANCE"
										},
										{
											"begin": 810,
											"end": 841,
											"name": "LT"
										},
										{
											"begin": 810,
											"end": 841,
											"name": "ISZERO"
										},
										{
											"begin": 802,
											"end": 842,
											"name": "ISZERO"
										},
										{
											"begin": 802,
											"end": 842,
											"name": "ISZERO"
										},
										{
											"begin": 802,
											"end": 842,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 802,
											"end": 842,
											"name": "JUMPI"
										},
										{
											"begin": 802,
											"end": 842,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 802,
											"end": 842,
											"name": "DUP1"
										},
										{
											"begin": 802,
											"end": 842,
											"name": "REVERT"
										},
										{
											"begin": 802,
											"end": 842,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 802,
											"end": 842,
											"name": "JUMPDEST"
										},
										{
											"begin": 852,
											"end": 862,
											"name": "CALLER"
										},
										{
											"begin": 852,
											"end": 867,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 852,
											"end": 867,
											"name": "AND"
										},
										{
											"begin": 874,
											"end": 880,
											"name": "DUP2"
										},
										{
											"begin": 852,
											"end": 883,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 852,
											"end": 883,
											"name": "MLOAD"
										},
										{
											"begin": 852,
											"end": 883,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 852,
											"end": 883,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 852,
											"end": 883,
											"name": "MLOAD"
										},
										{
											"begin": 852,
											"end": 883,
											"name": "DUP1"
										},
										{
											"begin": 852,
											"end": 883,
											"name": "DUP4"
										},
										{
											"begin": 852,
											"end": 883,
											"name": "SUB"
										},
										{
											"begin": 852,
											"end": 883,
											"name": "DUP2"
										},
										{
											"begin": 852,
											"end": 883,
											"name": "DUP6"
										},
										{
											"begin": 852,
											"end": 883,
											"name": "DUP8"
										},
										{
											"begin": 852,
											"end": 883,
											"name": "GAS"
										},
										{
											"begin": 852,
											"end": 883,
											"name": "CALL"
										},
										{
											"begin": 852,
											"end": 883,
											"name": "SWAP3"
										},
										{
											"begin": 852,
											"end": 883,
											"name": "POP"
										},
										{
											"begin": 852,
											"end": 883,
											"name": "POP"
										},
										{
											"begin": 852,
											"end": 883,
											"name": "POP"
										},
										{
											"begin": 852,
											"end": 883,
											"name": "POP"
										},
										{
											"begin": 917,
											"end": 923,
											"name": "DUP1"
										},
										{
											"begin": 893,
											"end": 901,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 893,
											"end": 913,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 902,
											"end": 912,
											"name": "CALLER"
										},
										{
											"begin": 893,
											"end": 913,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 893,
											"end": 913,
											"name": "AND"
										},
										{
											"begin": 893,
											"end": 913,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 893,
											"end": 913,
											"name": "AND"
										},
										{
											"begin": 893,
											"end": 913,
											"name": "DUP2"
										},
										{
											"begin": 893,
											"end": 913,
											"name": "MSTORE"
										},
										{
											"begin": 893,
											"end": 913,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 893,
											"end": 913,
											"name": "ADD"
										},
										{
											"begin": 893,
											"end": 913,
											"name": "SWAP1"
										},
										{
											"begin": 893,
											"end": 913,
											"name": "DUP2"
										},
										{
											"begin": 893,
											"end": 913,
											"name": "MSTORE"
										},
										{
											"begin": 893,
											"end": 913,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 893,
											"end": 913,
											"name": "ADD"
										},
										{
											"begin": 893,
											"end": 913,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 893,
											"end": 913,
											"name": "KECCAK256"
										},
										{
											"begin": 893,
											"end": 913,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 893,
											"end": 923,
											"name": "DUP3"
										},
										{
											"begin": 893,
											"end": 923,
											"name": "DUP3"
										},
										{
											"begin": 893,
											"end": 923,
											"name": "SLOAD"
										},
										{
											"begin": 893,
											"end": 923,
											"name": "SUB"
										},
										{
											"begin": 893,
											"end": 923,
											"name": "SWAP3"
										},
										{
											"begin": 893,
											"end": 923,
											"name": "POP"
										},
										{
											"begin": 893,
											"end": 923,
											"name": "POP"
										},
										{
											"begin": 893,
											"end": 923,
											"name": "DUP2"
										},
										{
											"begin": 893,
											"end": 923,
											"name": "SWAP1"
										},
										{
											"begin": 893,
											"end": 923,
											"name": "SSTORE"
										},
										{
											"begin": 893,
											"end": 923,
											"name": "POP"
										},
										{
											"begin": 695,
											"end": 930,
											"name": "POP"
										},
										{
											"begin": 695,
											"end": 930,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1130,
											"end": 1229,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 1130,
											"end": 1229,
											"name": "JUMPDEST"
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1209,
											"end": 1213,
											"name": "ADDRESS"
										},
										{
											"begin": 1201,
											"end": 1222,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1201,
											"end": 1222,
											"name": "AND"
										},
										{
											"begin": 1201,
											"end": 1222,
											"name": "BALANCE"
										},
										{
											"begin": 1194,
											"end": 1222,
											"name": "SWAP1"
										},
										{
											"begin": 1194,
											"end": 1222,
											"name": "POP"
										},
										{
											"begin": 1130,
											"end": 1229,
											"name": "SWAP1"
										},
										{
											"begin": 1130,
											"end": 1229,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "JUMPDEST"
										},
										{
											"begin": 1078,
											"end": 1085,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1103,
											"end": 1111,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1103,
											"end": 1117,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1116,
											"name": "DUP4"
										},
										{
											"begin": 1103,
											"end": 1117,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1103,
											"end": 1117,
											"name": "AND"
										},
										{
											"begin": 1103,
											"end": 1117,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1103,
											"end": 1117,
											"name": "AND"
										},
										{
											"begin": 1103,
											"end": 1117,
											"name": "DUP2"
										},
										{
											"begin": 1103,
											"end": 1117,
											"name": "MSTORE"
										},
										{
											"begin": 1103,
											"end": 1117,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1103,
											"end": 1117,
											"name": "ADD"
										},
										{
											"begin": 1103,
											"end": 1117,
											"name": "SWAP1"
										},
										{
											"begin": 1103,
											"end": 1117,
											"name": "DUP2"
										},
										{
											"begin": 1103,
											"end": 1117,
											"name": "MSTORE"
										},
										{
											"begin": 1103,
											"end": 1117,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1103,
											"end": 1117,
											"name": "ADD"
										},
										{
											"begin": 1103,
											"end": 1117,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1103,
											"end": 1117,
											"name": "KECCAK256"
										},
										{
											"begin": 1103,
											"end": 1117,
											"name": "SLOAD"
										},
										{
											"begin": 1096,
											"end": 1117,
											"name": "SWAP1"
										},
										{
											"begin": 1096,
											"end": 1117,
											"name": "POP"
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "SWAP2"
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "SWAP1"
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "POP"
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 352,
											"end": 370,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 352,
											"end": 370,
											"name": "JUMPDEST"
										},
										{
											"begin": 352,
											"end": 370,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 352,
											"end": 370,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 352,
											"end": 370,
											"name": "SWAP1"
										},
										{
											"begin": 352,
											"end": 370,
											"name": "SLOAD"
										},
										{
											"begin": 352,
											"end": 370,
											"name": "SWAP1"
										},
										{
											"begin": 352,
											"end": 370,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 352,
											"end": 370,
											"name": "EXP"
										},
										{
											"begin": 352,
											"end": 370,
											"name": "SWAP1"
										},
										{
											"begin": 352,
											"end": 370,
											"name": "DIV"
										},
										{
											"begin": 352,
											"end": 370,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 352,
											"end": 370,
											"name": "AND"
										},
										{
											"begin": 352,
											"end": 370,
											"name": "DUP2"
										},
										{
											"begin": 352,
											"end": 370,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 936,
											"end": 1019,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 936,
											"end": 1019,
											"name": "JUMPDEST"
										},
										{
											"begin": 1003,
											"end": 1012,
											"name": "CALLVALUE"
										},
										{
											"begin": 979,
											"end": 987,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 979,
											"end": 999,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 988,
											"end": 998,
											"name": "CALLER"
										},
										{
											"begin": 979,
											"end": 999,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 979,
											"end": 999,
											"name": "AND"
										},
										{
											"begin": 979,
											"end": 999,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 979,
											"end": 999,
											"name": "AND"
										},
										{
											"begin": 979,
											"end": 999,
											"name": "DUP2"
										},
										{
											"begin": 979,
											"end": 999,
											"name": "MSTORE"
										},
										{
											"begin": 979,
											"end": 999,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 979,
											"end": 999,
											"name": "ADD"
										},
										{
											"begin": 979,
											"end": 999,
											"name": "SWAP1"
										},
										{
											"begin": 979,
											"end": 999,
											"name": "DUP2"
										},
										{
											"begin": 979,
											"end": 999,
											"name": "MSTORE"
										},
										{
											"begin": 979,
											"end": 999,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 979,
											"end": 999,
											"name": "ADD"
										},
										{
											"begin": 979,
											"end": 999,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 979,
											"end": 999,
											"name": "KECCAK256"
										},
										{
											"begin": 979,
											"end": 999,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 979,
											"end": 1012,
											"name": "DUP3"
										},
										{
											"begin": 979,
											"end": 1012,
											"name": "DUP3"
										},
										{
											"begin": 979,
											"end": 1012,
											"name": "SLOAD"
										},
										{
											"begin": 979,
											"end": 1012,
											"name": "ADD"
										},
										{
											"begin": 979,
											"end": 1012,
											"name": "SWAP3"
										},
										{
											"begin": 979,
											"end": 1012,
											"name": "POP"
										},
										{
											"begin": 979,
											"end": 1012,
											"name": "POP"
										},
										{
											"begin": 979,
											"end": 1012,
											"name": "DUP2"
										},
										{
											"begin": 979,
											"end": 1012,
											"name": "SWAP1"
										},
										{
											"begin": 979,
											"end": 1012,
											"name": "SSTORE"
										},
										{
											"begin": 979,
											"end": 1012,
											"name": "POP"
										},
										{
											"begin": 936,
											"end": 1019,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 326,
											"end": 346,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 326,
											"end": 346,
											"name": "JUMPDEST"
										},
										{
											"begin": 326,
											"end": 346,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 326,
											"end": 346,
											"name": "SLOAD"
										},
										{
											"begin": 326,
											"end": 346,
											"name": "DUP2"
										},
										{
											"begin": 326,
											"end": 346,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 485,
											"end": 689,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 485,
											"end": 689,
											"name": "JUMPDEST"
										},
										{
											"begin": 538,
											"end": 544,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 538,
											"end": 544,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 538,
											"end": 544,
											"name": "SWAP1"
										},
										{
											"begin": 538,
											"end": 544,
											"name": "SLOAD"
										},
										{
											"begin": 538,
											"end": 544,
											"name": "SWAP1"
										},
										{
											"begin": 538,
											"end": 544,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 538,
											"end": 544,
											"name": "EXP"
										},
										{
											"begin": 538,
											"end": 544,
											"name": "SWAP1"
										},
										{
											"begin": 538,
											"end": 544,
											"name": "DIV"
										},
										{
											"begin": 538,
											"end": 544,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 538,
											"end": 544,
											"name": "AND"
										},
										{
											"begin": 537,
											"end": 544,
											"name": "ISZERO"
										},
										{
											"begin": 534,
											"end": 683,
											"name": "ISZERO"
										},
										{
											"begin": 534,
											"end": 683,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 534,
											"end": 683,
											"name": "JUMPI"
										},
										{
											"begin": 592,
											"end": 612,
											"name": "PUSH",
											"value": "38D7EA4C68000"
										},
										{
											"begin": 575,
											"end": 579,
											"name": "ADDRESS"
										},
										{
											"begin": 567,
											"end": 588,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 567,
											"end": 588,
											"name": "AND"
										},
										{
											"begin": 567,
											"end": 588,
											"name": "BALANCE"
										},
										{
											"begin": 567,
											"end": 612,
											"name": "EQ"
										},
										{
											"begin": 559,
											"end": 645,
											"name": "ISZERO"
										},
										{
											"begin": 559,
											"end": 645,
											"name": "ISZERO"
										},
										{
											"begin": 559,
											"end": 645,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 559,
											"end": 645,
											"name": "JUMPI"
										},
										{
											"begin": 559,
											"end": 645,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 559,
											"end": 645,
											"name": "MLOAD"
										},
										{
											"begin": 559,
											"end": 645,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 559,
											"end": 645,
											"name": "DUP2"
										},
										{
											"begin": 559,
											"end": 645,
											"name": "MSTORE"
										},
										{
											"begin": 559,
											"end": 645,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 559,
											"end": 645,
											"name": "ADD"
										},
										{
											"begin": 559,
											"end": 645,
											"name": "DUP1"
										},
										{
											"begin": 559,
											"end": 645,
											"name": "DUP1"
										},
										{
											"begin": 559,
											"end": 645,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 559,
											"end": 645,
											"name": "ADD"
										},
										{
											"begin": 559,
											"end": 645,
											"name": "DUP3"
										},
										{
											"begin": 559,
											"end": 645,
											"name": "DUP2"
										},
										{
											"begin": 559,
											"end": 645,
											"name": "SUB"
										},
										{
											"begin": 559,
											"end": 645,
											"name": "DUP3"
										},
										{
											"begin": 559,
											"end": 645,
											"name": "MSTORE"
										},
										{
											"begin": 559,
											"end": 645,
											"name": "PUSH",
											"value": "1C"
										},
										{
											"begin": 559,
											"end": 645,
											"name": "DUP2"
										},
										{
											"begin": 559,
											"end": 645,
											"name": "MSTORE"
										},
										{
											"begin": 559,
											"end": 645,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 559,
											"end": 645,
											"name": "ADD"
										},
										{
											"begin": 559,
											"end": 645,
											"name": "DUP1"
										},
										{
											"begin": 559,
											"end": 645,
											"name": "PUSH",
											"value": "73686F756C6420696E6974207769746820302E30303120657468657200000000"
										},
										{
											"begin": 559,
											"end": 645,
											"name": "DUP2"
										},
										{
											"begin": 559,
											"end": 645,
											"name": "MSTORE"
										},
										{
											"begin": 559,
											"end": 645,
											"name": "POP"
										},
										{
											"begin": 559,
											"end": 645,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 559,
											"end": 645,
											"name": "ADD"
										},
										{
											"begin": 559,
											"end": 645,
											"name": "SWAP2"
										},
										{
											"begin": 559,
											"end": 645,
											"name": "POP"
										},
										{
											"begin": 559,
											"end": 645,
											"name": "POP"
										},
										{
											"begin": 559,
											"end": 645,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 559,
											"end": 645,
											"name": "MLOAD"
										},
										{
											"begin": 559,
											"end": 645,
											"name": "DUP1"
										},
										{
											"begin": 559,
											"end": 645,
											"name": "SWAP2"
										},
										{
											"begin": 559,
											"end": 645,
											"name": "SUB"
										},
										{
											"begin": 559,
											"end": 645,
											"name": "SWAP1"
										},
										{
											"begin": 559,
											"end": 645,
											"name": "REVERT"
										},
										{
											"begin": 559,
											"end": 645,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 559,
											"end": 645,
											"name": "JUMPDEST"
										},
										{
											"begin": 668,
											"end": 672,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 659,
											"end": 665,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 659,
											"end": 665,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 659,
											"end": 672,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 659,
											"end": 672,
											"name": "EXP"
										},
										{
											"begin": 659,
											"end": 672,
											"name": "DUP2"
										},
										{
											"begin": 659,
											"end": 672,
											"name": "SLOAD"
										},
										{
											"begin": 659,
											"end": 672,
											"name": "DUP2"
										},
										{
											"begin": 659,
											"end": 672,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 659,
											"end": 672,
											"name": "MUL"
										},
										{
											"begin": 659,
											"end": 672,
											"name": "NOT"
										},
										{
											"begin": 659,
											"end": 672,
											"name": "AND"
										},
										{
											"begin": 659,
											"end": 672,
											"name": "SWAP1"
										},
										{
											"begin": 659,
											"end": 672,
											"name": "DUP4"
										},
										{
											"begin": 659,
											"end": 672,
											"name": "ISZERO"
										},
										{
											"begin": 659,
											"end": 672,
											"name": "ISZERO"
										},
										{
											"begin": 659,
											"end": 672,
											"name": "MUL"
										},
										{
											"begin": 659,
											"end": 672,
											"name": "OR"
										},
										{
											"begin": 659,
											"end": 672,
											"name": "SWAP1"
										},
										{
											"begin": 659,
											"end": 672,
											"name": "SSTORE"
										},
										{
											"begin": 659,
											"end": 672,
											"name": "POP"
										},
										{
											"begin": 534,
											"end": 683,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 534,
											"end": 683,
											"name": "JUMPDEST"
										},
										{
											"begin": 485,
											"end": 689,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1235,
											"end": 1493,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 1235,
											"end": 1493,
											"name": "JUMPDEST"
										},
										{
											"begin": 1283,
											"end": 1289,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1283,
											"end": 1289,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1283,
											"end": 1289,
											"name": "SWAP1"
										},
										{
											"begin": 1283,
											"end": 1289,
											"name": "SLOAD"
										},
										{
											"begin": 1283,
											"end": 1289,
											"name": "SWAP1"
										},
										{
											"begin": 1283,
											"end": 1289,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1283,
											"end": 1289,
											"name": "EXP"
										},
										{
											"begin": 1283,
											"end": 1289,
											"name": "SWAP1"
										},
										{
											"begin": 1283,
											"end": 1289,
											"name": "DIV"
										},
										{
											"begin": 1283,
											"end": 1289,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1283,
											"end": 1289,
											"name": "AND"
										},
										{
											"begin": 1275,
											"end": 1322,
											"name": "ISZERO"
										},
										{
											"begin": 1275,
											"end": 1322,
											"name": "ISZERO"
										},
										{
											"begin": 1275,
											"end": 1322,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 1275,
											"end": 1322,
											"name": "JUMPI"
										},
										{
											"begin": 1275,
											"end": 1322,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1322,
											"name": "MLOAD"
										},
										{
											"begin": 1275,
											"end": 1322,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1275,
											"end": 1322,
											"name": "DUP2"
										},
										{
											"begin": 1275,
											"end": 1322,
											"name": "MSTORE"
										},
										{
											"begin": 1275,
											"end": 1322,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1275,
											"end": 1322,
											"name": "ADD"
										},
										{
											"begin": 1275,
											"end": 1322,
											"name": "DUP1"
										},
										{
											"begin": 1275,
											"end": 1322,
											"name": "DUP1"
										},
										{
											"begin": 1275,
											"end": 1322,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1275,
											"end": 1322,
											"name": "ADD"
										},
										{
											"begin": 1275,
											"end": 1322,
											"name": "DUP3"
										},
										{
											"begin": 1275,
											"end": 1322,
											"name": "DUP2"
										},
										{
											"begin": 1275,
											"end": 1322,
											"name": "SUB"
										},
										{
											"begin": 1275,
											"end": 1322,
											"name": "DUP3"
										},
										{
											"begin": 1275,
											"end": 1322,
											"name": "MSTORE"
										},
										{
											"begin": 1275,
											"end": 1322,
											"name": "PUSH",
											"value": "1C"
										},
										{
											"begin": 1275,
											"end": 1322,
											"name": "DUP2"
										},
										{
											"begin": 1275,
											"end": 1322,
											"name": "MSTORE"
										},
										{
											"begin": 1275,
											"end": 1322,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1275,
											"end": 1322,
											"name": "ADD"
										},
										{
											"begin": 1275,
											"end": 1322,
											"name": "DUP1"
										},
										{
											"begin": 1275,
											"end": 1322,
											"name": "PUSH",
											"value": "596F752063616E277420646F20697420776974686F757420696E697400000000"
										},
										{
											"begin": 1275,
											"end": 1322,
											"name": "DUP2"
										},
										{
											"begin": 1275,
											"end": 1322,
											"name": "MSTORE"
										},
										{
											"begin": 1275,
											"end": 1322,
											"name": "POP"
										},
										{
											"begin": 1275,
											"end": 1322,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1275,
											"end": 1322,
											"name": "ADD"
										},
										{
											"begin": 1275,
											"end": 1322,
											"name": "SWAP2"
										},
										{
											"begin": 1275,
											"end": 1322,
											"name": "POP"
										},
										{
											"begin": 1275,
											"end": 1322,
											"name": "POP"
										},
										{
											"begin": 1275,
											"end": 1322,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1322,
											"name": "MLOAD"
										},
										{
											"begin": 1275,
											"end": 1322,
											"name": "DUP1"
										},
										{
											"begin": 1275,
											"end": 1322,
											"name": "SWAP2"
										},
										{
											"begin": 1275,
											"end": 1322,
											"name": "SUB"
										},
										{
											"begin": 1275,
											"end": 1322,
											"name": "SWAP1"
										},
										{
											"begin": 1275,
											"end": 1322,
											"name": "REVERT"
										},
										{
											"begin": 1275,
											"end": 1322,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 1275,
											"end": 1322,
											"name": "JUMPDEST"
										},
										{
											"begin": 1340,
											"end": 1341,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1332,
											"end": 1337,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1332,
											"end": 1341,
											"name": "DUP2"
										},
										{
											"begin": 1332,
											"end": 1341,
											"name": "SWAP1"
										},
										{
											"begin": 1332,
											"end": 1341,
											"name": "SSTORE"
										},
										{
											"begin": 1332,
											"end": 1341,
											"name": "POP"
										},
										{
											"begin": 1354,
											"end": 1376,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 1365,
											"end": 1375,
											"name": "CALLER"
										},
										{
											"begin": 1354,
											"end": 1364,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 1354,
											"end": 1376,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1354,
											"end": 1376,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 1354,
											"end": 1376,
											"name": "JUMPDEST"
										},
										{
											"begin": 1351,
											"end": 1412,
											"name": "ISZERO"
										},
										{
											"begin": 1351,
											"end": 1412,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 1351,
											"end": 1412,
											"name": "JUMPI"
										},
										{
											"begin": 1399,
											"end": 1401,
											"name": "PUSH",
											"value": "19"
										},
										{
											"begin": 1391,
											"end": 1396,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1391,
											"end": 1401,
											"name": "DUP2"
										},
										{
											"begin": 1391,
											"end": 1401,
											"name": "SWAP1"
										},
										{
											"begin": 1391,
											"end": 1401,
											"name": "SSTORE"
										},
										{
											"begin": 1391,
											"end": 1401,
											"name": "POP"
										},
										{
											"begin": 1351,
											"end": 1412,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 1351,
											"end": 1412,
											"name": "JUMPDEST"
										},
										{
											"begin": 1449,
											"end": 1450,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1432,
											"end": 1436,
											"name": "ADDRESS"
										},
										{
											"begin": 1424,
											"end": 1445,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1424,
											"end": 1445,
											"name": "AND"
										},
										{
											"begin": 1424,
											"end": 1445,
											"name": "BALANCE"
										},
										{
											"begin": 1424,
											"end": 1450,
											"name": "EQ"
										},
										{
											"begin": 1421,
											"end": 1487,
											"name": "ISZERO"
										},
										{
											"begin": 1421,
											"end": 1487,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 1421,
											"end": 1487,
											"name": "JUMPI"
										},
										{
											"begin": 1473,
											"end": 1476,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1465,
											"end": 1470,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1465,
											"end": 1476,
											"name": "DUP2"
										},
										{
											"begin": 1465,
											"end": 1476,
											"name": "SWAP1"
										},
										{
											"begin": 1465,
											"end": 1476,
											"name": "SSTORE"
										},
										{
											"begin": 1465,
											"end": 1476,
											"name": "POP"
										},
										{
											"begin": 1421,
											"end": 1487,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 1421,
											"end": 1487,
											"name": "JUMPDEST"
										},
										{
											"begin": 1235,
											"end": 1493,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1499,
											"end": 1659,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 1499,
											"end": 1659,
											"name": "JUMPDEST"
										},
										{
											"begin": 1555,
											"end": 1559,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1571,
											"end": 1580,
											"name": "DUP1"
										},
										{
											"begin": 1621,
											"end": 1625,
											"name": "DUP3"
										},
										{
											"begin": 1609,
											"end": 1626,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 1601,
											"end": 1626,
											"name": "SWAP1"
										},
										{
											"begin": 1601,
											"end": 1626,
											"name": "POP"
										},
										{
											"begin": 1651,
											"end": 1652,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1644,
											"end": 1648,
											"name": "DUP2"
										},
										{
											"begin": 1644,
											"end": 1652,
											"name": "GT"
										},
										{
											"begin": 1637,
											"end": 1652,
											"name": "SWAP2"
										},
										{
											"begin": 1637,
											"end": 1652,
											"name": "POP"
										},
										{
											"begin": 1499,
											"end": 1659,
											"name": "POP"
										},
										{
											"begin": 1499,
											"end": 1659,
											"name": "SWAP2"
										},
										{
											"begin": 1499,
											"end": 1659,
											"name": "SWAP1"
										},
										{
											"begin": 1499,
											"end": 1659,
											"name": "POP"
										},
										{
											"begin": 1499,
											"end": 1659,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"deposit()": "d0e30db0",
							"initWithValue()": "f8ef1085",
							"isCompleted()": "fa391c64",
							"isInit()": "b145a5b8",
							"score()": "efedc669",
							"wallet()": "521eb273",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"name\":\"result\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"adre\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isInit\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"score\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"initWithValue\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"isCompleted\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":\"Reentrance\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol\":{\"keccak256\":\"0x4ee2f0c07250fd8834e4cdaedf9c8cbeb22e93dbcfe12af4828b24c3ee4a97b0\",\"urls\":[\"bzzr://afe56f28d747b3b364bba120ecc4150db4062b3828447d1ad90486689146971f\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol:31:9: Warning: Return value of low-level calls not used.\n        msg.sender.call.value(amount)();\n        ^-----------------------------^\n",
				"message": "Return value of low-level calls not used.",
				"severity": "warning",
				"sourceLocation": {
					"end": 883,
					"file": "SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol",
					"start": 852
				},
				"type": "Warning"
			}
		],
		"sources": {
			"SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol": {
				"ast": {
					"absolutePath": "SecLessonPoc-main/contracts/reentrancy/check/Withdraw.sol",
					"exportedSymbols": {
						"Reentrance": [
							171
						]
					},
					"id": 172,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "212:24:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 171,
							"linearizedBaseContracts": [
								171
							],
							"name": "Reentrance",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 171,
									"src": "263:14:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "263:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 7,
									"name": "balances",
									"nodeType": "VariableDeclaration",
									"scope": 171,
									"src": "283:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 6,
										"keyType": {
											"id": 4,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "292:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "283:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 5,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "303:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 9,
									"name": "score",
									"nodeType": "VariableDeclaration",
									"scope": 171,
									"src": "326:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 8,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "326:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 11,
									"name": "isInit",
									"nodeType": "VariableDeclaration",
									"scope": 171,
									"src": "352:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 10,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "352:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "411:36:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 14,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "421:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 15,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 186,
															"src": "430:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 16,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "430:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "421:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 18,
												"nodeType": "ExpressionStatement",
												"src": "421:19:0"
											}
										]
									},
									"documentation": null,
									"id": 20,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "393:2:0"
									},
									"payable": true,
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "411:0:0"
									},
									"scope": 171,
									"src": "382:65:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 41,
										"nodeType": "Block",
										"src": "524:165:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "537:7:0",
													"subExpression": {
														"argumentTypes": null,
														"id": 23,
														"name": "isInit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "538:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 40,
												"nodeType": "IfStatement",
												"src": "534:149:0",
												"trueBody": {
													"id": 39,
													"nodeType": "Block",
													"src": "545:138:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 31,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 27,
																						"name": "this",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 199,
																						"src": "575:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_Reentrance_$171",
																							"typeString": "contract Reentrance"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_Reentrance_$171",
																							"typeString": "contract Reentrance"
																						}
																					],
																					"id": 26,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "567:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": "address"
																				},
																				"id": 28,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "567:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 29,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "balance",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "567:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "31303030303030303030303030303030",
																			"id": 30,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "592:20:0",
																			"subdenomination": "wei",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000000_by_1",
																				"typeString": "int_const 1000000000000000"
																			},
																			"value": "1000000000000000"
																		},
																		"src": "567:45:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "73686f756c6420696e6974207769746820302e303031206574686572",
																		"id": 32,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "614:30:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_ae23ddba6555085bd69fcf1128504c35a4915b5cad723d48c97074b09dcb2f1e",
																			"typeString": "literal_string \"should init with 0.001 ether\""
																		},
																		"value": "should init with 0.001 ether"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_ae23ddba6555085bd69fcf1128504c35a4915b5cad723d48c97074b09dcb2f1e",
																			"typeString": "literal_string \"should init with 0.001 ether\""
																		}
																	],
																	"id": 25,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		189,
																		190
																	],
																	"referencedDeclaration": 190,
																	"src": "559:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "559:86:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 34,
															"nodeType": "ExpressionStatement",
															"src": "559:86:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 35,
																	"name": "isInit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "659:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "74727565",
																	"id": 36,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "668:4:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "659:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 38,
															"nodeType": "ExpressionStatement",
															"src": "659:13:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 42,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "initWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "507:2:0"
									},
									"payable": true,
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "524:0:0"
									},
									"scope": 171,
									"src": "485:204:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "743:187:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 48,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 7,
																	"src": "761:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 51,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 49,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 186,
																		"src": "770:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 50,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "770:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "761:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 52,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 44,
																"src": "785:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "761:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 47,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															189,
															190
														],
														"referencedDeclaration": 189,
														"src": "753:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "753:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "753:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 62,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 58,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 199,
																			"src": "818:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Reentrance_$171",
																				"typeString": "contract Reentrance"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Reentrance_$171",
																				"typeString": "contract Reentrance"
																			}
																		],
																		"id": 57,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "810:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 59,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "810:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "810:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 61,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 44,
																"src": "835:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "810:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 56,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															189,
															190
														],
														"referencedDeclaration": 189,
														"src": "802:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "802:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 64,
												"nodeType": "ExpressionStatement",
												"src": "802:40:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"arguments": [
															{
																"argumentTypes": null,
																"id": 72,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 44,
																"src": "874:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 65,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 186,
																		"src": "852:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 69,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "852:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 70,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "call",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "852:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_barecall_payable$__$returns$_t_bool_$",
																	"typeString": "function () payable returns (bool)"
																}
															},
															"id": 71,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "852:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_setvalue_nonpayable$_t_uint256_$returns$_t_function_barecall_payable$__$returns$_t_bool_$value_$",
																"typeString": "function (uint256) returns (function () payable returns (bool))"
															}
														},
														"id": 73,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "852:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$__$returns$_t_bool_$value",
															"typeString": "function () payable returns (bool)"
														}
													},
													"id": 74,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "852:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 75,
												"nodeType": "ExpressionStatement",
												"src": "852:31:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 76,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "893:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 79,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 77,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "902:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "902:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "893:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 80,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "917:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "893:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 82,
												"nodeType": "ExpressionStatement",
												"src": "893:30:0"
											}
										]
									},
									"documentation": null,
									"id": 84,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "713:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "713:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "712:16:0"
									},
									"payable": true,
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "743:0:0"
									},
									"scope": 171,
									"src": "695:235:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 95,
										"nodeType": "Block",
										"src": "969:50:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 87,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "979:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 90,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 88,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "988:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "988:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "979:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 91,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 186,
															"src": "1003:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 92,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1003:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "979:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 94,
												"nodeType": "ExpressionStatement",
												"src": "979:33:0"
											}
										]
									},
									"documentation": null,
									"id": 96,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "952:2:0"
									},
									"payable": true,
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "969:0:0"
									},
									"scope": 171,
									"src": "936:83:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "1086:38:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 103,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "1103:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 105,
													"indexExpression": {
														"argumentTypes": null,
														"id": 104,
														"name": "adre",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 98,
														"src": "1112:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1103:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 102,
												"id": 106,
												"nodeType": "Return",
												"src": "1096:21:0"
											}
										]
									},
									"documentation": null,
									"id": 108,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"name": "adre",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "1044:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1044:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1043:14:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "1078:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1078:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1077:9:0"
									},
									"scope": 171,
									"src": "1025:99:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 118,
										"nodeType": "Block",
										"src": "1184:45:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 114,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 199,
																"src": "1209:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Reentrance_$171",
																	"typeString": "contract Reentrance"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_Reentrance_$171",
																	"typeString": "contract Reentrance"
																}
															],
															"id": 113,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1201:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 115,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1201:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1201:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 112,
												"id": 117,
												"nodeType": "Return",
												"src": "1194:28:0"
											}
										]
									},
									"documentation": null,
									"id": 119,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "wallet",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1145:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"name": "result",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1169:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1169:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1168:16:0"
									},
									"scope": 171,
									"src": "1130:99:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 153,
										"nodeType": "Block",
										"src": "1265:228:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 123,
															"name": "isInit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "1283:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "596f752063616e277420646f20697420776974686f757420696e6974",
															"id": 124,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1291:30:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_55f469b5d1f1011727794fcf2dcbb89f0cd4ca27148ce1363ef2d66e0c4cc596",
																"typeString": "literal_string \"You can't do it without init\""
															},
															"value": "You can't do it without init"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_55f469b5d1f1011727794fcf2dcbb89f0cd4ca27148ce1363ef2d66e0c4cc596",
																"typeString": "literal_string \"You can't do it without init\""
															}
														],
														"id": 122,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															189,
															190
														],
														"referencedDeclaration": 190,
														"src": "1275:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1275:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 126,
												"nodeType": "ExpressionStatement",
												"src": "1275:47:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 127,
														"name": "score",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "1332:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 128,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1340:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1332:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 130,
												"nodeType": "ExpressionStatement",
												"src": "1332:9:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 132,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "1365:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1365:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 131,
														"name": "isContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 170,
														"src": "1354:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1354:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 140,
												"nodeType": "IfStatement",
												"src": "1351:61:0",
												"trueBody": {
													"id": 139,
													"nodeType": "Block",
													"src": "1377:35:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 137,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 135,
																	"name": "score",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "1391:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "3235",
																	"id": 136,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1399:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_25_by_1",
																		"typeString": "int_const 25"
																	},
																	"value": "25"
																},
																"src": "1391:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 138,
															"nodeType": "ExpressionStatement",
															"src": "1391:10:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 142,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 199,
																	"src": "1432:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Reentrance_$171",
																		"typeString": "contract Reentrance"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Reentrance_$171",
																		"typeString": "contract Reentrance"
																	}
																],
																"id": 141,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1424:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1424:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 144,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1424:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 145,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1449:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1424:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 152,
												"nodeType": "IfStatement",
												"src": "1421:66:0",
												"trueBody": {
													"id": 151,
													"nodeType": "Block",
													"src": "1451:36:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 149,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 147,
																	"name": "score",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "1465:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "313030",
																	"id": 148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1473:3:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "1465:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 150,
															"nodeType": "ExpressionStatement",
															"src": "1465:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 154,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "isCompleted",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1255:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1265:0:0"
									},
									"scope": 171,
									"src": "1235:258:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 169,
										"nodeType": "Block",
										"src": "1561:98:0",
										"statements": [
											{
												"assignments": [],
												"declarations": [
													{
														"constant": false,
														"id": 162,
														"name": "size",
														"nodeType": "VariableDeclaration",
														"scope": 170,
														"src": "1571:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 161,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1571:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 163,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "1571:9:0"
											},
											{
												"externalReferences": [
													{
														"addr": {
															"declaration": 156,
															"isOffset": false,
															"isSlot": false,
															"src": "1621:4:0",
															"valueSize": 1
														}
													},
													{
														"size": {
															"declaration": 162,
															"isOffset": false,
															"isSlot": false,
															"src": "1601:4:0",
															"valueSize": 1
														}
													}
												],
												"id": 164,
												"nodeType": "InlineAssembly",
												"operations": "{\n    size := extcodesize(addr)\n}",
												"src": "1590:53:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 165,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 162,
														"src": "1644:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 166,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1651:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1644:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 160,
												"id": 168,
												"nodeType": "Return",
												"src": "1637:15:0"
											}
										]
									},
									"documentation": null,
									"id": 170,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"name": "addr",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "1519:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1519:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1518:14:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "1555:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 158,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1555:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1554:6:0"
									},
									"scope": 171,
									"src": "1499:160:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "private"
								}
							],
							"scope": 172,
							"src": "238:1423:0"
						}
					],
					"src": "212:1449:0"
				},
				"id": 0
			}
		}
	}
}